{
"version":3,
"file":"module$node_modules$three$examples$js$geometries$ConvexGeometry.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,gEAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC5HC,OAAAC,KAAA,CAAc,+TAAd,CAOAC,MAAAC,eAAA,CAAuBC,QAAS,CAAEC,MAAF,CAAW,CAE1CH,KAAAI,SAAAC,KAAA,CAAqB,IAArB,CAEA;IAAAC,mBAAA,CAAyB,IAAIN,KAAAO,qBAAJ,CAAgCJ,MAAhC,CAAzB,CACA,KAAAK,cAAA,EAL0C,CAS3CR,MAAAC,eAAAQ,UAAA,CAAiCC,MAAAC,OAAA,CAAeX,KAAAI,SAAAK,UAAf,CACjCT,MAAAC,eAAAQ,UAAAG,YAAA,CAA6CZ,KAAAC,eAI7CD,MAAAO,qBAAA,CAA6BM,QAAS,CAAEV,MAAF,CAAW,CAEhDH,KAAAc,eAAAT,KAAA,CAA2B,IAA3B,CAIA,KAAIU,SAAW,EAAf,CACIC,QAAU,EAEYC,KAAAA,EAA1B,GAAKjB,KAAAkB,WAAL,EAECpB,OAAAqB,MAAA,CAAe,6EAAf,CAQGC,OAAAA,CAJaC,CAAA,IAAIrB,KAAAkB,WAAJG,eAAAC,CAAsCnB,MAAtCmB,CAILF,MAEZ;IAAM,IAAIG,EAAI,CAAd,CAAiBA,CAAjB,CAAqBH,MAAAI,OAArB,CAAmCD,CAAA,EAAnC,CAA0C,CAEzC,IAAIE,KAAOL,MAAA,CAAOG,CAAP,CAAX,CACIG,KAAOD,IAAAC,KAIX,GAAG,CAEF,IAAIC,MAAQD,IAAAE,KAAA,EAAAD,MAEZZ,SAAAc,KAAA,CAAeF,KAAAG,EAAf,CAAwBH,KAAAI,EAAxB,CAAiCJ,KAAAK,EAAjC,CACAhB,QAAAa,KAAA,CAAcJ,IAAAQ,OAAAH,EAAd,CAA6BL,IAAAQ,OAAAF,EAA7B,CAA4CN,IAAAQ,OAAAD,EAA5C,CAEAN,KAAA,CAAOA,IAAAQ,KAPL,CAAH,MASUR,IATV,GASmBD,IAAAC,KATnB,CAPyC,CAsB1C,IAAAS,aAAA,CAAmB,UAAnB,CAA+B,IAAInC,KAAAoC,uBAAJ,CAAkCrB,QAAlC,CAA4C,CAA5C,CAA/B,CACA,KAAAoB,aAAA,CAAmB,QAAnB,CAA6B,IAAInC,KAAAoC,uBAAJ,CAAkCpB,OAAlC,CAA2C,CAA3C,CAA7B,CA5CgD,CAgDjDhB,MAAAO,qBAAAE,UAAA,CAAuCC,MAAAC,OAAA,CAAeX,KAAAc,eAAAL,UAAf,CACvCT,MAAAO,qBAAAE,UAAAG,YAAA;AAAmDZ,KAAAO,qBAvEyE;",
"sources":["node_modules/three/examples/js/geometries/ConvexGeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$examples$js$geometries$ConvexGeometry\"] = function(global,require,module,exports) {\nconsole.warn( \"THREE.ConvexGeometry: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/index.html#manual/en/introduction/Import-via-modules.\" );\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ConvexGeometry\n\nTHREE.ConvexGeometry = function ( points ) {\n\n\tTHREE.Geometry.call( this );\n\n\tthis.fromBufferGeometry( new THREE.ConvexBufferGeometry( points ) );\n\tthis.mergeVertices();\n\n};\n\nTHREE.ConvexGeometry.prototype = Object.create( THREE.Geometry.prototype );\nTHREE.ConvexGeometry.prototype.constructor = THREE.ConvexGeometry;\n\n// ConvexBufferGeometry\n\nTHREE.ConvexBufferGeometry = function ( points ) {\n\n\tTHREE.BufferGeometry.call( this );\n\n\t// buffers\n\n\tvar vertices = [];\n\tvar normals = [];\n\n\tif ( THREE.ConvexHull === undefined ) {\n\n\t\tconsole.error( 'THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.ConvexHull' );\n\n\t}\n\n\tvar convexHull = new THREE.ConvexHull().setFromPoints( points );\n\n\t// generate vertices and normals\n\n\tvar faces = convexHull.faces;\n\n\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\t\tvar edge = face.edge;\n\n\t\t// we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n\t\tdo {\n\n\t\t\tvar point = edge.head().point;\n\n\t\t\tvertices.push( point.x, point.y, point.z );\n\t\t\tnormals.push( face.normal.x, face.normal.y, face.normal.z );\n\n\t\t\tedge = edge.next;\n\n\t\t} while ( edge !== face.edge );\n\n\t}\n\n\t// build geometry\n\n\tthis.setAttribute( 'position', new THREE.Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new THREE.Float32BufferAttribute( normals, 3 ) );\n\n};\n\nTHREE.ConvexBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\nTHREE.ConvexBufferGeometry.prototype.constructor = THREE.ConvexBufferGeometry;\n\n};"],
"names":["shadow$provide","global","require","module","exports","console","warn","THREE","ConvexGeometry","THREE.ConvexGeometry","points","Geometry","call","fromBufferGeometry","ConvexBufferGeometry","mergeVertices","prototype","Object","create","constructor","THREE.ConvexBufferGeometry","BufferGeometry","vertices","normals","undefined","ConvexHull","error","faces","setFromPoints","convexHull","i","length","face","edge","point","head","push","x","y","z","normal","next","setAttribute","Float32BufferAttribute"]
}
