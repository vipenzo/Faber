shadow$provide.module$node_modules$three$build$three_module=function(global,require,module,exports){function _defineProperty(obj,key,value){key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value;return obj}function _typeof(obj$jscomp$0){_typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?
"symbol":typeof obj};return _typeof(obj$jscomp$0)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function");}function _possibleConstructorReturn(self,call){return!call||"object"!==_typeof(call)&&"function"!==typeof call?_assertThisInitialized(self):call}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _getPrototypeOf(o$jscomp$0){_getPrototypeOf=
Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)};return _getPrototypeOf(o$jscomp$0)}function _inherits(subClass,superClass){if("function"!==typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}});superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o$jscomp$0,
p$jscomp$0){_setPrototypeOf=Object.setPrototypeOf||function(o,p){o.__proto__=p;return o};return _setPrototypeOf(o$jscomp$0,p$jscomp$0)}function EventDispatcher(){}function Vector2(){var y=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;this.x=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;this.y=y}function Matrix3(){this.elements=[1,0,0,0,1,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function Texture(image,
mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){Object.defineProperty(this,"id",{value:textureId++});this.uuid=MathUtils.generateUUID();this.name="";this.image=void 0!==image?image:Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==mapping?mapping:Texture.DEFAULT_MAPPING;this.wrapS=void 0!==wrapS?wrapS:ClampToEdgeWrapping;this.wrapT=void 0!==wrapT?wrapT:ClampToEdgeWrapping;this.magFilter=void 0!==magFilter?magFilter:LinearFilter;this.minFilter=void 0!==minFilter?
minFilter:LinearMipmapLinearFilter;this.anisotropy=void 0!==anisotropy?anisotropy:1;this.format=void 0!==format?format:RGBAFormat;this.internalFormat=null;this.type=void 0!==type?type:UnsignedByteType;this.offset=new Vector2(0,0);this.repeat=new Vector2(1,1);this.center=new Vector2(0,0);this.rotation=0;this.matrixAutoUpdate=!0;this.matrix=new Matrix3;this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==encoding?encoding:LinearEncoding;this.version=
0;this.onUpdate=null}function Vector4(){var y=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,z=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,w=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1;this.x=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;this.y=y;this.z=z;this.w=w}function WebGLRenderTarget(width,height,options){this.width=width;this.height=height;this.scissor=new Vector4(0,0,width,height);this.scissorTest=!1;this.viewport=new Vector4(0,0,width,height);
options=options||{};this.texture=new Texture(void 0,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.image={};this.texture.image.width=width;this.texture.image.height=height;this.texture.generateMipmaps=void 0!==options.generateMipmaps?options.generateMipmaps:!1;this.texture.minFilter=void 0!==options.minFilter?options.minFilter:LinearFilter;this.depthBuffer=void 0!==options.depthBuffer?options.depthBuffer:
!0;this.stencilBuffer=void 0!==options.stencilBuffer?options.stencilBuffer:!0;this.depthTexture=void 0!==options.depthTexture?options.depthTexture:null}function WebGLMultisampleRenderTarget(width,height,options){WebGLRenderTarget.call(this,width,height,options);this.samples=4}function Quaternion(){var y=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,z=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,w=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1;this._x=0<arguments.length&&
void 0!==arguments[0]?arguments[0]:0;this._y=y;this._z=z;this._w=w}function Vector3(){var y=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,z=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;this.x=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;this.y=y;this.z=z}function Matrix4(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function Euler(){var y=1<arguments.length&&
void 0!==arguments[1]?arguments[1]:0,z=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,order=3<arguments.length&&void 0!==arguments[3]?arguments[3]:Euler.DefaultOrder;this._x=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0;this._y=y;this._z=z;this._order=order}function Layers(){this.mask=1}function Object3D(){Object.defineProperty(this,"id",{value:_object3DId++});this.uuid=MathUtils.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=Object3D.DefaultUp.clone();
var position=new Vector3,rotation=new Euler,quaternion=new Quaternion,scale=new Vector3(1,1,1);rotation._onChange(function(){quaternion.setFromEuler(rotation,!1)});quaternion._onChange(function(){rotation.setFromQuaternion(quaternion,void 0,!1)});Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:position},rotation:{configurable:!0,enumerable:!0,value:rotation},quaternion:{configurable:!0,enumerable:!0,value:quaternion},scale:{configurable:!0,enumerable:!0,value:scale},modelViewMatrix:{value:new Matrix4},
normalMatrix:{value:new Matrix3}});this.matrix=new Matrix4;this.matrixWorld=new Matrix4;this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=!1;this.layers=new Layers;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={}}function Scene(){Object3D.call(this);this.type="Scene";this.overrideMaterial=this.fog=this.environment=this.background=null;this.autoUpdate=!0;"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",
{detail:this}))}function Box3(min,max){this.min=void 0!==min?min:new Vector3(Infinity,Infinity,Infinity);this.max=void 0!==max?max:new Vector3(-Infinity,-Infinity,-Infinity)}function satForAxes(axes,v0,v1,v2,extents){for(var _i21=0,j=axes.length-3;_i21<=j;_i21+=3){_testAxis.fromArray(axes,_i21);var r=extents.x*Math.abs(_testAxis.x)+extents.y*Math.abs(_testAxis.y)+extents.z*Math.abs(_testAxis.z),p0=v0.dot(_testAxis),p1=v1.dot(_testAxis),p2=v2.dot(_testAxis);if(Math.max(-Math.max(p0,p1,p2),Math.min(p0,
p1,p2))>r)return!1}return!0}function Sphere(center,radius){this.center=void 0!==center?center:new Vector3;this.radius=void 0!==radius?radius:-1}function Ray(origin,direction){this.origin=void 0!==origin?origin:new Vector3;this.direction=void 0!==direction?direction:new Vector3(0,0,-1)}function Plane(normal,constant){this.normal=void 0!==normal?normal:new Vector3(1,0,0);this.constant=void 0!==constant?constant:0}function Triangle(a,b,c){this.a=void 0!==a?a:new Vector3;this.b=void 0!==b?b:new Vector3;
this.c=void 0!==c?c:new Vector3}function Color(r,g,b){return void 0===g&&void 0===b?this.set(r):this.setRGB(r,g,b)}function hue2rgb(p,q,t){0>t&&(t+=1);1<t&&--t;return t<1/6?p+6*(q-p)*t:.5>t?q:t<2/3?p+6*(q-p)*(2/3-t):p}function SRGBToLinear(c){return.04045>c?.0773993808*c:Math.pow(.9478672986*c+.0521327014,2.4)}function LinearToSRGB(c){return.0031308>c?12.92*c:1.055*Math.pow(c,.41666)-.055}function Face3(a,b,c,normal,color,materialIndex){this.a=a;this.b=b;this.c=c;this.normal=normal&&normal.isVector3?
normal:new Vector3;this.vertexNormals=Array.isArray(normal)?normal:[];this.color=color&&color.isColor?color:new Color;this.vertexColors=Array.isArray(color)?color:[];this.materialIndex=void 0!==materialIndex?materialIndex:0}function Material(){Object.defineProperty(this,"id",{value:materialId++});this.uuid=MathUtils.generateUUID();this.name="";this.type="Material";this.fog=!0;this.blending=NormalBlending;this.side=FrontSide;this.vertexColors=this.flatShading=!1;this.opacity=1;this.transparent=!1;
this.blendSrc=SrcAlphaFactor;this.blendDst=OneMinusSrcAlphaFactor;this.blendEquation=AddEquation;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.depthFunc=LessEqualDepth;this.depthWrite=this.depthTest=!0;this.stencilWriteMask=255;this.stencilFunc=AlwaysStencilFunc;this.stencilRef=0;this.stencilFuncMask=255;this.stencilZPass=this.stencilZFail=this.stencilFail=KeepStencilOp;this.stencilWrite=!1;this.clippingPlanes=null;this.clipShadows=this.clipIntersection=!1;this.shadowSide=
null;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.dithering=!1;this.alphaTest=0;this.premultipliedAlpha=!1;this.toneMapped=this.visible=!0;this.userData={};this.version=0}function MeshBasicMaterial(parameters){Material.call(this);this.type="MeshBasicMaterial";this.color=new Color(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;
this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphTargets=this.skinning=!1;this.setValues(parameters)}function BufferAttribute(array,itemSize,normalized){if(Array.isArray(array))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="";this.array=array;this.itemSize=itemSize;this.count=void 0!==array?array.length/itemSize:0;this.normalized=
!0===normalized;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0}function Int8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int8Array(array),itemSize,normalized)}function Uint8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8Array(array),itemSize,normalized)}function Uint8ClampedBufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8ClampedArray(array),itemSize,normalized)}function Int16BufferAttribute(array,
itemSize,normalized){BufferAttribute.call(this,new Int16Array(array),itemSize,normalized)}function Uint16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint16Array(array),itemSize,normalized)}function Int32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int32Array(array),itemSize,normalized)}function Uint32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint32Array(array),itemSize,normalized)}function Float32BufferAttribute(array,
itemSize,normalized){BufferAttribute.call(this,new Float32Array(array),itemSize,normalized)}function Float64BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Float64Array(array),itemSize,normalized)}function DirectGeometry(){this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=
this.normalsNeedUpdate=this.verticesNeedUpdate=!1}function arrayMax(array){if(0===array.length)return-Infinity;for(var max=array[0],_i39=1,l=array.length;_i39<l;++_i39)array[_i39]>max&&(max=array[_i39]);return max}function BufferGeometry(){Object.defineProperty(this,"id",{value:_bufferGeometryId+=2});this.uuid=MathUtils.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=!1;this.groups=[];this.boundingSphere=this.boundingBox=
null;this.drawRange={start:0,count:Infinity};this.userData={}}function Mesh(geometry,material){Object3D.call(this);this.type="Mesh";this.geometry=void 0!==geometry?geometry:new BufferGeometry;this.material=void 0!==material?material:new MeshBasicMaterial;this.updateMorphTargets()}function checkIntersection(object,material,raycaster,ray,pA,pB,pC,point){if(null===(material.side===BackSide?ray.intersectTriangle(pC,pB,pA,!0,point):ray.intersectTriangle(pA,pB,pC,material.side!==DoubleSide,point)))return null;
_intersectionPointWorld.copy(point);_intersectionPointWorld.applyMatrix4(object.matrixWorld);material=raycaster.ray.origin.distanceTo(_intersectionPointWorld);return material<raycaster.near||material>raycaster.far?null:{distance:material,point:_intersectionPointWorld.clone(),object:object}}function checkBufferGeometryIntersection(object,material,raycaster,ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c){_vA.fromBufferAttribute(position,a);_vB.fromBufferAttribute(position,b);_vC.fromBufferAttribute(position,
c);position=object.morphTargetInfluences;if(material.morphTargets&&morphPosition&&position){_morphA.set(0,0,0);_morphB.set(0,0,0);_morphC.set(0,0,0);for(var _i61=0,il=morphPosition.length;_i61<il;_i61++){var influence=position[_i61],morphAttribute=morphPosition[_i61];0!==influence&&(_tempA.fromBufferAttribute(morphAttribute,a),_tempB.fromBufferAttribute(morphAttribute,b),_tempC.fromBufferAttribute(morphAttribute,c),morphTargetsRelative?(_morphA.addScaledVector(_tempA,influence),_morphB.addScaledVector(_tempB,
influence),_morphC.addScaledVector(_tempC,influence)):(_morphA.addScaledVector(_tempA.sub(_vA),influence),_morphB.addScaledVector(_tempB.sub(_vB),influence),_morphC.addScaledVector(_tempC.sub(_vC),influence)))}_vA.add(_morphA);_vB.add(_morphB);_vC.add(_morphC)}object.isSkinnedMesh&&(object.boneTransform(a,_vA),object.boneTransform(b,_vB),object.boneTransform(c,_vC));if(object=checkIntersection(object,material,raycaster,ray,_vA,_vB,_vC,_intersectionPoint))uv&&(_uvA.fromBufferAttribute(uv,a),_uvB.fromBufferAttribute(uv,
b),_uvC.fromBufferAttribute(uv,c),object.uv=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2)),uv2&&(_uvA.fromBufferAttribute(uv2,a),_uvB.fromBufferAttribute(uv2,b),_uvC.fromBufferAttribute(uv2,c),object.uv2=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2)),uv=new Face3(a,b,c),Triangle.getNormal(_vA,_vB,_vC,uv.normal),object.face=uv;return object}function Geometry(){Object.defineProperty(this,"id",{value:_geometryId+=2});this.uuid=MathUtils.generateUUID();
this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=!1}function cloneUniforms(src){var dst={},u;for(u in src){dst[u]={};for(var p in src[u]){var property=
src[u][p];property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||property.isVector4||property.isTexture)?dst[u][p]=property.clone():Array.isArray(property)?dst[u][p]=property.slice():dst[u][p]=property}}return dst}function mergeUniforms(uniforms){for(var merged={},u=0;u<uniforms.length;u++){var _tmp=cloneUniforms(uniforms[u]),p;for(p in _tmp)merged[p]=_tmp[p]}return merged}function ShaderMaterial(parameters){Material.call(this);this.type="ShaderMaterial";
this.defines={};this.uniforms={};this.vertexShader=default_vertex;this.fragmentShader=default_fragment;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;this.uniformsNeedUpdate=!1;void 0!==parameters&&(void 0!==parameters.attributes&&
console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(parameters))}function Camera(){Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new Matrix4;this.projectionMatrix=new Matrix4;this.projectionMatrixInverse=new Matrix4}function PerspectiveCamera(fov,aspect,near,far){Camera.call(this);this.type="PerspectiveCamera";this.fov=void 0!==fov?fov:50;this.zoom=1;this.near=void 0!==near?near:.1;this.far=void 0!==far?far:2E3;this.focus=
10;this.aspect=void 0!==aspect?aspect:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}function CubeCamera(near,far,renderTarget){Object3D.call(this);this.type="CubeCamera";if(!0!==renderTarget.isWebGLCubeRenderTarget)console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");else{this.renderTarget=renderTarget;var cameraPX=new PerspectiveCamera(fov$jscomp$0,aspect$jscomp$0,near,far);cameraPX.layers=this.layers;
cameraPX.up.set(0,-1,0);cameraPX.lookAt(new Vector3(1,0,0));this.add(cameraPX);var cameraNX=new PerspectiveCamera(fov$jscomp$0,aspect$jscomp$0,near,far);cameraNX.layers=this.layers;cameraNX.up.set(0,-1,0);cameraNX.lookAt(new Vector3(-1,0,0));this.add(cameraNX);var cameraPY=new PerspectiveCamera(fov$jscomp$0,aspect$jscomp$0,near,far);cameraPY.layers=this.layers;cameraPY.up.set(0,0,1);cameraPY.lookAt(new Vector3(0,1,0));this.add(cameraPY);var cameraNY=new PerspectiveCamera(fov$jscomp$0,aspect$jscomp$0,
near,far);cameraNY.layers=this.layers;cameraNY.up.set(0,0,-1);cameraNY.lookAt(new Vector3(0,-1,0));this.add(cameraNY);var cameraPZ=new PerspectiveCamera(fov$jscomp$0,aspect$jscomp$0,near,far);cameraPZ.layers=this.layers;cameraPZ.up.set(0,-1,0);cameraPZ.lookAt(new Vector3(0,0,1));this.add(cameraPZ);var cameraNZ=new PerspectiveCamera(fov$jscomp$0,aspect$jscomp$0,near,far);cameraNZ.layers=this.layers;cameraNZ.up.set(0,-1,0);cameraNZ.lookAt(new Vector3(0,0,-1));this.add(cameraNZ);this.update=function(renderer,
scene){null===this.parent&&this.updateMatrixWorld();var currentXrEnabled=renderer.xr.enabled,currentRenderTarget=renderer.getRenderTarget();renderer.xr.enabled=!1;var generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=!1;renderer.setRenderTarget(renderTarget,0);renderer.render(scene,cameraPX);renderer.setRenderTarget(renderTarget,1);renderer.render(scene,cameraNX);renderer.setRenderTarget(renderTarget,2);renderer.render(scene,cameraPY);renderer.setRenderTarget(renderTarget,
3);renderer.render(scene,cameraNY);renderer.setRenderTarget(renderTarget,4);renderer.render(scene,cameraPZ);renderTarget.texture.generateMipmaps=generateMipmaps;renderer.setRenderTarget(renderTarget,5);renderer.render(scene,cameraNZ);renderer.setRenderTarget(currentRenderTarget);renderer.xr.enabled=currentXrEnabled};this.clear=function(renderer,color,depth,stencil){for(var currentRenderTarget=renderer.getRenderTarget(),_i91=0;6>_i91;_i91++)renderer.setRenderTarget(renderTarget,_i91),renderer.clear(color,
depth,stencil);renderer.setRenderTarget(currentRenderTarget)}}}function WebGLCubeRenderTarget(size,options,dummy){Number.isInteger(options)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),options=dummy);WebGLRenderTarget.call(this,size,size,options)}function DataTexture(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,
anisotropy,encoding);this.image={data:data||null,width:width||1,height:height||1};this.magFilter=void 0!==magFilter?magFilter:NearestFilter;this.minFilter=void 0!==minFilter?minFilter:NearestFilter;this.flipY=this.generateMipmaps=!1;this.unpackAlignment=1;this.needsUpdate=!0}function Frustum(p0,p1,p2,p3,p4,p5){this.planes=[void 0!==p0?p0:new Plane,void 0!==p1?p1:new Plane,void 0!==p2?p2:new Plane,void 0!==p3?p3:new Plane,void 0!==p4?p4:new Plane,void 0!==p5?p5:new Plane]}function WebGLAnimation(){function onAnimationFrame(time,
frame){animationLoop(time,frame);requestId=context.requestAnimationFrame(onAnimationFrame)}var context=null,isAnimating=!1,animationLoop=null,requestId=null;return{start:function(){!0!==isAnimating&&null!==animationLoop&&(requestId=context.requestAnimationFrame(onAnimationFrame),isAnimating=!0)},stop:function(){context.cancelAnimationFrame(requestId);isAnimating=!1},setAnimationLoop:function(callback){animationLoop=callback},setContext:function(value){context=value}}}function WebGLAttributes(gl,capabilities){function createBuffer(attribute,
bufferType){var array=attribute.array,usage=attribute.usage,buffer=gl.createBuffer();gl.bindBuffer(bufferType,buffer);gl.bufferData(bufferType,array,usage);attribute.onUploadCallback();bufferType=5126;array instanceof Float32Array?bufferType=5126:array instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):array instanceof Uint16Array?bufferType=5123:array instanceof Int16Array?bufferType=5122:array instanceof Uint32Array?bufferType=5125:array instanceof
Int32Array?bufferType=5124:array instanceof Int8Array?bufferType=5120:array instanceof Uint8Array&&(bufferType=5121);return{buffer:buffer,type:bufferType,bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version}}var isWebGL2=capabilities.isWebGL2,buffers=new WeakMap;return{get:function(attribute){attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);return buffers.get(attribute)},remove:function(attribute){attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);var data=
buffers.get(attribute);data&&(gl.deleteBuffer(data.buffer),buffers["delete"](attribute))},update:function(attribute,bufferType){attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);var data=buffers.get(attribute);if(void 0===data)buffers.set(attribute,createBuffer(attribute,bufferType));else if(data.version<attribute.version){var array=attribute.array,updateRange=attribute.updateRange;gl.bindBuffer(bufferType,data.buffer);-1===updateRange.count?gl.bufferSubData(bufferType,0,array):(isWebGL2?
gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array,updateRange.offset,updateRange.count):gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array.subarray(updateRange.offset,updateRange.offset+updateRange.count)),updateRange.count=-1);data.version=attribute.version}}}}function PlaneGeometry(width,height,widthSegments,heightSegments){Geometry.call(this);this.type="PlaneGeometry";this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};
this.fromBufferGeometry(new PlaneBufferGeometry(width,height,widthSegments,heightSegments));this.mergeVertices()}function PlaneBufferGeometry(width,height,widthSegments,heightSegments){BufferGeometry.call(this);this.type="PlaneBufferGeometry";this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};width=width||1;height=height||1;var width_half=width/2,height_half=height/2;widthSegments=Math.floor(widthSegments)||1;heightSegments=Math.floor(heightSegments)||
1;var gridX1=widthSegments+1,gridY1=heightSegments+1,segment_width=width/widthSegments,segment_height=height/heightSegments;height=[];width=[];for(var normals=[],uvs=[],iy=0;iy<gridY1;iy++)for(var y=iy*segment_height-height_half,ix=0;ix<gridX1;ix++)width.push(ix*segment_width-width_half,-y,0),normals.push(0,0,1),uvs.push(ix/widthSegments),uvs.push(1-iy/heightSegments);for(width_half=0;width_half<heightSegments;width_half++)for(height_half=0;height_half<widthSegments;height_half++)gridY1=height_half+
gridX1*(width_half+1),segment_width=height_half+1+gridX1*(width_half+1),segment_height=height_half+1+gridX1*width_half,height.push(height_half+gridX1*width_half,gridY1,segment_height),height.push(gridY1,segment_width,segment_height);this.setIndex(height);this.setAttribute("position",new Float32BufferAttribute(width,3));this.setAttribute("normal",new Float32BufferAttribute(normals,3));this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}function WebGLBackground(renderer$jscomp$0,state,objects,
premultipliedAlpha){function setClear(color,alpha){state.buffers.color.setClear(color.r,color.g,color.b,alpha,premultipliedAlpha)}var clearColor=new Color(0),clearAlpha=0,planeMesh,boxMesh,currentBackground=null,currentBackgroundVersion=0,currentTonemapping=null;return{getClearColor:function(){return clearColor},setClearColor:function(color,alpha){clearColor.set(color);clearAlpha=void 0!==alpha?alpha:1;setClear(clearColor,clearAlpha)},getClearAlpha:function(){return clearAlpha},setClearAlpha:function(alpha){clearAlpha=
alpha;setClear(clearColor,clearAlpha)},render:function(renderList,scene$jscomp$0,camera$jscomp$0,forceClear){scene$jscomp$0=!0===scene$jscomp$0.isScene?scene$jscomp$0.background:null;camera$jscomp$0=renderer$jscomp$0.xr;(camera$jscomp$0=camera$jscomp$0.getSession&&camera$jscomp$0.getSession())&&"additive"===camera$jscomp$0.environmentBlendMode&&(scene$jscomp$0=null);null===scene$jscomp$0?setClear(clearColor,clearAlpha):scene$jscomp$0&&scene$jscomp$0.isColor&&(setClear(scene$jscomp$0,1),forceClear=
!0);(renderer$jscomp$0.autoClear||forceClear)&&renderer$jscomp$0.clear(renderer$jscomp$0.autoClearColor,renderer$jscomp$0.autoClearDepth,renderer$jscomp$0.autoClearStencil);if(scene$jscomp$0&&(scene$jscomp$0.isCubeTexture||scene$jscomp$0.isWebGLCubeRenderTarget||scene$jscomp$0.mapping===CubeUVReflectionMapping)){void 0===boxMesh&&(boxMesh=new Mesh(new BoxBufferGeometry$jscomp$0(1,1,1),new ShaderMaterial({name:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,
fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:!1,depthWrite:!1,fog:!1})),boxMesh.geometry.deleteAttribute("normal"),boxMesh.geometry.deleteAttribute("uv"),boxMesh.onBeforeRender=function(renderer,scene,camera){this.matrixWorld.copyPosition(camera.matrixWorld)},Object.defineProperty(boxMesh.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),objects.update(boxMesh));forceClear=scene$jscomp$0.isWebGLCubeRenderTarget?scene$jscomp$0.texture:scene$jscomp$0;boxMesh.material.uniforms.envMap.value=
forceClear;boxMesh.material.uniforms.flipEnvMap.value=forceClear.isCubeTexture?-1:1;if(currentBackground!==scene$jscomp$0||currentBackgroundVersion!==forceClear.version||currentTonemapping!==renderer$jscomp$0.toneMapping)boxMesh.material.needsUpdate=!0,currentBackground=scene$jscomp$0,currentBackgroundVersion=forceClear.version,currentTonemapping=renderer$jscomp$0.toneMapping;renderList.unshift(boxMesh,boxMesh.geometry,boxMesh.material,0,0,null)}else if(scene$jscomp$0&&scene$jscomp$0.isTexture){void 0===
planeMesh&&(planeMesh=new Mesh(new PlaneBufferGeometry(2,2),new ShaderMaterial({name:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:!1,depthWrite:!1,fog:!1})),planeMesh.geometry.deleteAttribute("normal"),Object.defineProperty(planeMesh.material,"map",{get:function(){return this.uniforms.t2D.value}}),objects.update(planeMesh));planeMesh.material.uniforms.t2D.value=
scene$jscomp$0;!0===scene$jscomp$0.matrixAutoUpdate&&scene$jscomp$0.updateMatrix();planeMesh.material.uniforms.uvTransform.value.copy(scene$jscomp$0.matrix);if(currentBackground!==scene$jscomp$0||currentBackgroundVersion!==scene$jscomp$0.version||currentTonemapping!==renderer$jscomp$0.toneMapping)planeMesh.material.needsUpdate=!0,currentBackground=scene$jscomp$0,currentBackgroundVersion=scene$jscomp$0.version,currentTonemapping=renderer$jscomp$0.toneMapping;renderList.unshift(planeMesh,planeMesh.geometry,
planeMesh.material,0,0,null)}}}}function WebGLBindingStates(gl,extensions,attributes,capabilities){function bindVertexArrayObject(vao){return capabilities.isWebGL2?gl.bindVertexArray(vao):extension.bindVertexArrayOES(vao)}function deleteVertexArrayObject(vao){return capabilities.isWebGL2?gl.deleteVertexArray(vao):extension.deleteVertexArrayOES(vao)}function createBindingState(vao){for(var newAttributes=[],enabledAttributes=[],attributeDivisors=[],_i96=0;_i96<maxVertexAttributes;_i96++)newAttributes[_i96]=
0,enabledAttributes[_i96]=0,attributeDivisors[_i96]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:newAttributes,enabledAttributes:enabledAttributes,attributeDivisors:attributeDivisors,object:vao,attributes:{}}}function initAttributes(){for(var newAttributes=currentState.newAttributes,_i97=0,il=newAttributes.length;_i97<il;_i97++)newAttributes[_i97]=0}function enableAttribute(attribute){enableAttributeAndDivisor(attribute,0)}function enableAttributeAndDivisor(attribute,meshPerAttribute){var enabledAttributes=
currentState.enabledAttributes,attributeDivisors=currentState.attributeDivisors;currentState.newAttributes[attribute]=1;0===enabledAttributes[attribute]&&(gl.enableVertexAttribArray(attribute),enabledAttributes[attribute]=1);attributeDivisors[attribute]!==meshPerAttribute&&((capabilities.isWebGL2?gl:extensions.get("ANGLE_instanced_arrays"))[capabilities.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](attribute,meshPerAttribute),attributeDivisors[attribute]=meshPerAttribute)}function disableUnusedAttributes(){for(var newAttributes=
currentState.newAttributes,enabledAttributes=currentState.enabledAttributes,_i98=0,il=enabledAttributes.length;_i98<il;_i98++)enabledAttributes[_i98]!==newAttributes[_i98]&&(gl.disableVertexAttribArray(_i98),enabledAttributes[_i98]=0)}function vertexAttribPointer(index,size,type,normalized,stride,offset){!0!==capabilities.isWebGL2||5124!==type&&5125!==type?gl.vertexAttribPointer(index,size,type,normalized,stride,offset):gl.vertexAttribIPointer(index,size,type,normalized,stride,offset)}function reset(){resetDefaultState();
currentState!==defaultState&&(currentState=defaultState,bindVertexArrayObject(currentState.object))}function resetDefaultState(){defaultState.geometry=null;defaultState.program=null;defaultState.wireframe=!1}var maxVertexAttributes=gl.getParameter(34921),extension=capabilities.isWebGL2?null:extensions.get("OES_vertex_array_object"),vaoAvailable=capabilities.isWebGL2||null!==extension,bindingStates={},defaultState=createBindingState(null),currentState=defaultState;return{setup:function(object,material,
program,geometry,index){var updateBuffers=!1;if(vaoAvailable){updateBuffers=!0===material.wireframe;var programMap=bindingStates[geometry.id];void 0===programMap&&(programMap={},bindingStates[geometry.id]=programMap);var stateMap=programMap[program.id];void 0===stateMap&&(stateMap={},programMap[program.id]=stateMap);programMap=stateMap[updateBuffers];void 0===programMap&&(programMap=createBindingState(capabilities.isWebGL2?gl.createVertexArray():extension.createVertexArrayOES()),stateMap[updateBuffers]=
programMap);updateBuffers=programMap;currentState!==updateBuffers&&(currentState=updateBuffers,bindVertexArrayObject(currentState.object));a:if(updateBuffers=currentState.attributes,stateMap=geometry.attributes,Object.keys(updateBuffers).length!==Object.keys(stateMap).length)updateBuffers=!0;else{for(var key in stateMap){programMap=updateBuffers[key];var geometryAttribute=stateMap[key];if(programMap.attribute!==geometryAttribute||programMap.data!==geometryAttribute.data){updateBuffers=!0;break a}}updateBuffers=
!1}if(updateBuffers){key={};stateMap=geometry.attributes;for(var key$jscomp$0 in stateMap)programMap=stateMap[key$jscomp$0],geometryAttribute={},geometryAttribute.attribute=programMap,programMap.data&&(geometryAttribute.data=programMap.data),key[key$jscomp$0]=geometryAttribute;currentState.attributes=key}}else if(key$jscomp$0=!0===material.wireframe,currentState.geometry!==geometry.id||currentState.program!==program.id||currentState.wireframe!==key$jscomp$0)currentState.geometry=geometry.id,currentState.program=
program.id,currentState.wireframe=key$jscomp$0,updateBuffers=!0;!0===object.isInstancedMesh&&(updateBuffers=!0);null!==index&&attributes.update(index,34963);if(updateBuffers){if(!1!==capabilities.isWebGL2||!object.isInstancedMesh&&!geometry.isInstancedBufferGeometry||null!==extensions.get("ANGLE_instanced_arrays")){initAttributes();key$jscomp$0=geometry.attributes;program=program.getAttributes();material=material.defaultAttributeValues;for(var name in program)if(key=program[name],0<=key){var geometryAttribute$jscomp$0=
key$jscomp$0[name];if(void 0!==geometryAttribute$jscomp$0){updateBuffers=geometryAttribute$jscomp$0.normalized;stateMap=geometryAttribute$jscomp$0.itemSize;var attribute=attributes.get(geometryAttribute$jscomp$0);if(void 0!==attribute)if(programMap=attribute.buffer,geometryAttribute=attribute.type,attribute=attribute.bytesPerElement,geometryAttribute$jscomp$0.isInterleavedBufferAttribute){var data=geometryAttribute$jscomp$0.data,stride=data.stride;geometryAttribute$jscomp$0=geometryAttribute$jscomp$0.offset;
data&&data.isInstancedInterleavedBuffer?(enableAttributeAndDivisor(key,data.meshPerAttribute),void 0===geometry._maxInstanceCount&&(geometry._maxInstanceCount=data.meshPerAttribute*data.count)):enableAttribute(key);gl.bindBuffer(34962,programMap);vertexAttribPointer(key,stateMap,geometryAttribute,updateBuffers,stride*attribute,geometryAttribute$jscomp$0*attribute)}else geometryAttribute$jscomp$0.isInstancedBufferAttribute?(enableAttributeAndDivisor(key,geometryAttribute$jscomp$0.meshPerAttribute),
void 0===geometry._maxInstanceCount&&(geometry._maxInstanceCount=geometryAttribute$jscomp$0.meshPerAttribute*geometryAttribute$jscomp$0.count)):enableAttribute(key),gl.bindBuffer(34962,programMap),vertexAttribPointer(key,stateMap,geometryAttribute,updateBuffers,0,0)}else if("instanceMatrix"===name)stateMap=attributes.get(object.instanceMatrix),void 0!==stateMap&&(updateBuffers=stateMap.buffer,stateMap=stateMap.type,enableAttributeAndDivisor(key+0,1),enableAttributeAndDivisor(key+1,1),enableAttributeAndDivisor(key+
2,1),enableAttributeAndDivisor(key+3,1),gl.bindBuffer(34962,updateBuffers),gl.vertexAttribPointer(key+0,4,stateMap,!1,64,0),gl.vertexAttribPointer(key+1,4,stateMap,!1,64,16),gl.vertexAttribPointer(key+2,4,stateMap,!1,64,32),gl.vertexAttribPointer(key+3,4,stateMap,!1,64,48));else if(void 0!==material&&(updateBuffers=material[name],void 0!==updateBuffers))switch(updateBuffers.length){case 2:gl.vertexAttrib2fv(key,updateBuffers);break;case 3:gl.vertexAttrib3fv(key,updateBuffers);break;case 4:gl.vertexAttrib4fv(key,
updateBuffers);break;default:gl.vertexAttrib1fv(key,updateBuffers)}}disableUnusedAttributes()}null!==index&&gl.bindBuffer(34963,attributes.get(index).buffer)}},reset:reset,resetDefaultState:resetDefaultState,dispose:function(){reset();for(var geometryId in bindingStates){var programMap=bindingStates[geometryId],programId;for(programId in programMap){var stateMap=programMap[programId],wireframe;for(wireframe in stateMap)deleteVertexArrayObject(stateMap[wireframe].object),delete stateMap[wireframe];
delete programMap[programId]}delete bindingStates[geometryId]}},releaseStatesOfGeometry:function(geometry){if(void 0!==bindingStates[geometry.id]){var programMap=bindingStates[geometry.id],programId;for(programId in programMap){var stateMap=programMap[programId],wireframe;for(wireframe in stateMap)deleteVertexArrayObject(stateMap[wireframe].object),delete stateMap[wireframe];delete programMap[programId]}delete bindingStates[geometry.id]}},releaseStatesOfProgram:function(program){for(var geometryId in bindingStates){var programMap=
bindingStates[geometryId];if(void 0!==programMap[program.id]){var stateMap=programMap[program.id],wireframe;for(wireframe in stateMap)deleteVertexArrayObject(stateMap[wireframe].object),delete stateMap[wireframe];delete programMap[program.id]}}},initAttributes:initAttributes,enableAttribute:enableAttribute,disableUnusedAttributes:disableUnusedAttributes}}function WebGLBufferRenderer(gl,extensions,info,capabilities){var isWebGL2=capabilities.isWebGL2,mode;this.setMode=function(value){mode=value};this.render=
function(start,count){gl.drawArrays(mode,start,count);info.update(count,mode)};this.renderInstances=function(geometry,start,count,primcount){if(0!==primcount){if(isWebGL2){geometry=gl;var methodName="drawArraysInstanced"}else if(geometry=extensions.get("ANGLE_instanced_arrays"),methodName="drawArraysInstancedANGLE",null===geometry){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}geometry[methodName](mode,
start,count,primcount);info.update(count,mode,primcount)}}}function WebGLCapabilities(gl,extensions,parameters){function getMaxPrecision(precision){if("highp"===precision){if(0<gl.getShaderPrecisionFormat(35633,36338).precision&&0<gl.getShaderPrecisionFormat(35632,36338).precision)return"highp";precision="mediump"}return"mediump"===precision&&0<gl.getShaderPrecisionFormat(35633,36337).precision&&0<gl.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}var maxAnisotropy,isWebGL2="undefined"!==
typeof WebGL2RenderingContext&&gl instanceof WebGL2RenderingContext||"undefined"!==typeof WebGL2ComputeRenderingContext&&gl instanceof WebGL2ComputeRenderingContext,precision$jscomp$0=void 0!==parameters.precision?parameters.precision:"highp",maxPrecision=getMaxPrecision(precision$jscomp$0);maxPrecision!==precision$jscomp$0&&(console.warn("THREE.WebGLRenderer:",precision$jscomp$0,"not supported, using",maxPrecision,"instead."),precision$jscomp$0=maxPrecision);parameters=!0===parameters.logarithmicDepthBuffer;
maxPrecision=gl.getParameter(34930);var maxVertexTextures=gl.getParameter(35660),maxTextureSize=gl.getParameter(3379),maxCubemapSize=gl.getParameter(34076),maxAttributes=gl.getParameter(34921),maxVertexUniforms=gl.getParameter(36347),maxVaryings=gl.getParameter(36348),maxFragmentUniforms=gl.getParameter(36349),vertexTextures=0<maxVertexTextures,floatFragmentTextures=isWebGL2||!!extensions.get("OES_texture_float"),floatVertexTextures=vertexTextures&&floatFragmentTextures,maxSamples=isWebGL2?gl.getParameter(36183):
0;return{isWebGL2:isWebGL2,getMaxAnisotropy:function(){if(void 0!==maxAnisotropy)return maxAnisotropy;var extension=extensions.get("EXT_texture_filter_anisotropic");return maxAnisotropy=null!==extension?gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:getMaxPrecision,precision:precision$jscomp$0,logarithmicDepthBuffer:parameters,maxTextures:maxPrecision,maxVertexTextures:maxVertexTextures,maxTextureSize:maxTextureSize,maxCubemapSize:maxCubemapSize,maxAttributes:maxAttributes,
maxVertexUniforms:maxVertexUniforms,maxVaryings:maxVaryings,maxFragmentUniforms:maxFragmentUniforms,vertexTextures:vertexTextures,floatFragmentTextures:floatFragmentTextures,floatVertexTextures:floatVertexTextures,maxSamples:maxSamples}}function WebGLClipping(){function resetGlobalState(){uniform.value!==globalState&&(uniform.value=globalState,uniform.needsUpdate=0<numGlobalPlanes);scope.numPlanes=numGlobalPlanes;scope.numIntersection=0}function projectPlanes(planes,camera,dstOffset,skipTransform){var nPlanes=
null!==planes?planes.length:0,dstArray=null;if(0!==nPlanes){dstArray=uniform.value;if(!0!==skipTransform||null===dstArray){skipTransform=dstOffset+4*nPlanes;camera=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(camera);if(null===dstArray||dstArray.length<skipTransform)dstArray=new Float32Array(skipTransform);for(skipTransform=0;skipTransform!==nPlanes;++skipTransform,dstOffset+=4)plane.copy(planes[skipTransform]).applyMatrix4(camera,viewNormalMatrix),plane.normal.toArray(dstArray,dstOffset),
dstArray[dstOffset+3]=plane.constant}uniform.value=dstArray;uniform.needsUpdate=!0}scope.numPlanes=nPlanes;scope.numIntersection=0;return dstArray}var scope=this,globalState=null,numGlobalPlanes=0,localClippingEnabled=!1,renderingShadows=!1,plane=new Plane,viewNormalMatrix=new Matrix3,uniform={value:null,needsUpdate:!1};this.uniform=uniform;this.numIntersection=this.numPlanes=0;this.init=function(planes,enableLocalClipping,camera){var enabled=0!==planes.length||enableLocalClipping||0!==numGlobalPlanes||
localClippingEnabled;localClippingEnabled=enableLocalClipping;globalState=projectPlanes(planes,camera,0);numGlobalPlanes=planes.length;return enabled};this.beginShadows=function(){renderingShadows=!0;projectPlanes(null)};this.endShadows=function(){renderingShadows=!1;resetGlobalState()};this.setState=function(planes,clipIntersection,clipShadows,camera,cache,fromCache){if(!localClippingEnabled||null===planes||0===planes.length||renderingShadows&&!clipShadows)renderingShadows?projectPlanes(null):resetGlobalState();
else{clipShadows=renderingShadows?0:numGlobalPlanes;var lGlobal=4*clipShadows,dstArray=cache.clippingState||null;uniform.value=dstArray;dstArray=projectPlanes(planes,camera,lGlobal,fromCache);for(planes=0;planes!==lGlobal;++planes)dstArray[planes]=globalState[planes];cache.clippingState=dstArray;this.numIntersection=clipIntersection?this.numPlanes:0;this.numPlanes+=clipShadows}}}function WebGLExtensions(gl){var extensions={};return{get:function(name){if(void 0!==extensions[name])return extensions[name];
switch(name){case "WEBGL_depth_texture":var extension=gl.getExtension("WEBGL_depth_texture")||gl.getExtension("MOZ_WEBGL_depth_texture")||gl.getExtension("WEBKIT_WEBGL_depth_texture");break;case "EXT_texture_filter_anisotropic":extension=gl.getExtension("EXT_texture_filter_anisotropic")||gl.getExtension("MOZ_EXT_texture_filter_anisotropic")||gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case "WEBGL_compressed_texture_s3tc":extension=gl.getExtension("WEBGL_compressed_texture_s3tc")||
gl.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||gl.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case "WEBGL_compressed_texture_pvrtc":extension=gl.getExtension("WEBGL_compressed_texture_pvrtc")||gl.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:extension=gl.getExtension(name)}null===extension&&console.warn("THREE.WebGLRenderer: "+name+" extension not supported.");return extensions[name]=extension}}}function WebGLGeometries(gl,attributes,info,bindingStates){function onGeometryDispose(event){event=
event.target;var buffergeometry=geometries.get(event);null!==buffergeometry.index&&attributes.remove(buffergeometry.index);for(var name in buffergeometry.attributes)attributes.remove(buffergeometry.attributes[name]);event.removeEventListener("dispose",onGeometryDispose);geometries["delete"](event);if(name=wireframeAttributes.get(buffergeometry))attributes.remove(name),wireframeAttributes["delete"](buffergeometry);bindingStates.releaseStatesOfGeometry(event);!0===event.isInstancedBufferGeometry&&delete event._maxInstanceCount;
info.memory.geometries--}function updateWireframeAttribute(geometry){var indices=[],geometryIndex=geometry.index,geometryPosition=geometry.attributes.position;if(null!==geometryIndex){geometryPosition=geometryIndex.array;geometryIndex=geometryIndex.version;for(var _i102=0,l=geometryPosition.length;_i102<l;_i102+=3){var a=geometryPosition[_i102+0],b=geometryPosition[_i102+1],c=geometryPosition[_i102+2];indices.push(a,b,b,c,c,a)}}else for(_i102=geometryPosition.array,geometryIndex=geometryPosition.version,
geometryPosition=0,_i102=_i102.length/3-1;geometryPosition<_i102;geometryPosition+=3)l=geometryPosition+0,a=geometryPosition+1,b=geometryPosition+2,indices.push(l,a,a,b,b,l);indices=new (65535<arrayMax(indices)?Uint32BufferAttribute:Uint16BufferAttribute)(indices,1);indices.version=geometryIndex;(geometryIndex=wireframeAttributes.get(geometry))&&attributes.remove(geometryIndex);wireframeAttributes.set(geometry,indices)}var geometries=new WeakMap,wireframeAttributes=new WeakMap;return{get:function(object,
geometry){var buffergeometry=geometries.get(geometry);if(buffergeometry)return buffergeometry;geometry.addEventListener("dispose",onGeometryDispose);geometry.isBufferGeometry?buffergeometry=geometry:geometry.isGeometry&&(void 0===geometry._bufferGeometry&&(geometry._bufferGeometry=(new BufferGeometry).setFromObject(object)),buffergeometry=geometry._bufferGeometry);geometries.set(geometry,buffergeometry);info.memory.geometries++;return buffergeometry},update:function(geometry){var geometryAttributes=
geometry.attributes;for(name in geometryAttributes)attributes.update(geometryAttributes[name],34962);geometry=geometry.morphAttributes;for(var _name3 in geometry){geometryAttributes=geometry[_name3];var name=0;for(var l=geometryAttributes.length;name<l;name++)attributes.update(geometryAttributes[name],34962)}},getWireframeAttribute:function(geometry){var currentAttribute=wireframeAttributes.get(geometry);if(currentAttribute){var geometryIndex=geometry.index;null!==geometryIndex&&currentAttribute.version<
geometryIndex.version&&updateWireframeAttribute(geometry)}else updateWireframeAttribute(geometry);return wireframeAttributes.get(geometry)}}}function WebGLIndexedBufferRenderer(gl,extensions,info,capabilities){var isWebGL2=capabilities.isWebGL2,mode,type,bytesPerElement;this.setMode=function(value){mode=value};this.setIndex=function(value){type=value.type;bytesPerElement=value.bytesPerElement};this.render=function(start,count){gl.drawElements(mode,count,type,start*bytesPerElement);info.update(count,
mode)};this.renderInstances=function(geometry,start,count,primcount){if(0!==primcount){if(isWebGL2){geometry=gl;var methodName="drawElementsInstanced"}else if(geometry=extensions.get("ANGLE_instanced_arrays"),methodName="drawElementsInstancedANGLE",null===geometry){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}geometry[methodName](mode,count,type,start*bytesPerElement,primcount);info.update(count,
mode,primcount)}}}function WebGLInfo(gl){var render={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:render,programs:null,autoReset:!0,reset:function(){render.frame++;render.calls=0;render.triangles=0;render.points=0;render.lines=0},update:function(count,mode,instanceCount){instanceCount=instanceCount||1;render.calls++;switch(mode){case 4:render.triangles+=count/3*instanceCount;break;case 1:render.lines+=count/2*instanceCount;break;case 3:render.lines+=
instanceCount*(count-1);break;case 2:render.lines+=instanceCount*count;break;case 0:render.points+=instanceCount*count;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",mode)}}}}function numericalSort(a,b){return a[0]-b[0]}function absNumericalSort(a,b){return Math.abs(b[1])-Math.abs(a[1])}function WebGLMorphtargets(gl){for(var influencesList={},morphInfluences=new Float32Array(8),workInfluences=[],_i104=0;8>_i104;_i104++)workInfluences[_i104]=[_i104,0];return{update:function(object,
geometry,material,program){var objectInfluences=object.morphTargetInfluences;object=void 0===objectInfluences?0:objectInfluences.length;var influences=influencesList[geometry.id];if(void 0===influences){influences=[];for(var _i105=0;_i105<object;_i105++)influences[_i105]=[_i105,0];influencesList[geometry.id]=influences}for(_i105=0;_i105<object;_i105++){var influence=influences[_i105];influence[0]=_i105;influence[1]=objectInfluences[_i105]}influences.sort(absNumericalSort);for(objectInfluences=0;8>
objectInfluences;objectInfluences++)objectInfluences<object&&influences[objectInfluences][1]?(workInfluences[objectInfluences][0]=influences[objectInfluences][0],workInfluences[objectInfluences][1]=influences[objectInfluences][1]):(workInfluences[objectInfluences][0]=Number.MAX_SAFE_INTEGER,workInfluences[objectInfluences][1]=0);workInfluences.sort(numericalSort);object=material.morphTargets&&geometry.morphAttributes.position;material=material.morphNormals&&geometry.morphAttributes.normal;for(objectInfluences=
influences=0;8>objectInfluences;objectInfluences++)influence=workInfluences[objectInfluences],_i105=influence[0],influence=influence[1],_i105!==Number.MAX_SAFE_INTEGER&&influence?(object&&geometry.getAttribute("morphTarget"+objectInfluences)!==object[_i105]&&geometry.setAttribute("morphTarget"+objectInfluences,object[_i105]),material&&geometry.getAttribute("morphNormal"+objectInfluences)!==material[_i105]&&geometry.setAttribute("morphNormal"+objectInfluences,material[_i105]),morphInfluences[objectInfluences]=
influence,influences+=influence):(object&&void 0!==geometry.getAttribute("morphTarget"+objectInfluences)&&geometry.deleteAttribute("morphTarget"+objectInfluences),material&&void 0!==geometry.getAttribute("morphNormal"+objectInfluences)&&geometry.deleteAttribute("morphNormal"+objectInfluences),morphInfluences[objectInfluences]=0);geometry=geometry.morphTargetsRelative?1:1-influences;program.getUniforms().setValue(gl,"morphTargetBaseInfluence",geometry);program.getUniforms().setValue(gl,"morphTargetInfluences",
morphInfluences)}}}function WebGLObjects(gl,geometries,attributes,info){var updateMap=new WeakMap;return{update:function(object){var frame=info.render.frame,geometry=object.geometry,buffergeometry=geometries.get(object,geometry);updateMap.get(buffergeometry)!==frame&&(geometry.isGeometry&&buffergeometry.updateFromObject(object),geometries.update(buffergeometry),updateMap.set(buffergeometry,frame));object.isInstancedMesh&&attributes.update(object.instanceMatrix,34962);return buffergeometry},dispose:function(){updateMap=
new WeakMap}}}function CubeTexture(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){images=void 0!==images?images:[];mapping=void 0!==mapping?mapping:CubeReflectionMapping;format=void 0!==format?format:RGBFormat;Texture.call(this,images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.flipY=!1}function DataTexture2DArray(data,width,height,depth){Texture.call(this,null);this.image={data:data||null,width:width||1,height:height||1,depth:depth||
1};this.minFilter=this.magFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.flipY=this.generateMipmaps=!1;this.needsUpdate=!0}function DataTexture3D(data,width,height,depth){Texture.call(this,null);this.image={data:data||null,width:width||1,height:height||1,depth:depth||1};this.minFilter=this.magFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.flipY=this.generateMipmaps=!1;this.needsUpdate=!0}function flatten(array,nBlocks,blockSize){var firstElem=array[0];if(0>=firstElem||0<firstElem)return array;
var n=nBlocks*blockSize,r=arrayCacheF32[n];void 0===r&&(r=new Float32Array(n),arrayCacheF32[n]=r);if(0!==nBlocks)for(firstElem.toArray(r,0),firstElem=1,n=0;firstElem!==nBlocks;++firstElem)n+=blockSize,array[firstElem].toArray(r,n);return r}function arraysEqual(a,b){if(a.length!==b.length)return!1;for(var _i110=0,l=a.length;_i110<l;_i110++)if(a[_i110]!==b[_i110])return!1;return!0}function copyArray(a,b){for(var _i111=0,l=b.length;_i111<l;_i111++)a[_i111]=b[_i111]}function allocTexUnits(textures,n){var r=
arrayCacheI32[n];void 0===r&&(r=new Int32Array(n),arrayCacheI32[n]=r);for(var _i112=0;_i112!==n;++_i112)r[_i112]=textures.allocateTextureUnit();return r}function setValueV1f(gl,v){var cache=this.cache;cache[0]!==v&&(gl.uniform1f(this.addr,v),cache[0]=v)}function setValueV2f(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y)gl.uniform2f(this.addr,v.x,v.y),cache[0]=v.x,cache[1]=v.y}else arraysEqual(cache,v)||(gl.uniform2fv(this.addr,v),copyArray(cache,v))}function setValueV3f(gl,
v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z)gl.uniform3f(this.addr,v.x,v.y,v.z),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z}else if(void 0!==v.r){if(cache[0]!==v.r||cache[1]!==v.g||cache[2]!==v.b)gl.uniform3f(this.addr,v.r,v.g,v.b),cache[0]=v.r,cache[1]=v.g,cache[2]=v.b}else arraysEqual(cache,v)||(gl.uniform3fv(this.addr,v),copyArray(cache,v))}function setValueV4f(gl,v){var cache=this.cache;if(void 0!==v.x){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z||
cache[3]!==v.w)gl.uniform4f(this.addr,v.x,v.y,v.z,v.w),cache[0]=v.x,cache[1]=v.y,cache[2]=v.z,cache[3]=v.w}else arraysEqual(cache,v)||(gl.uniform4fv(this.addr,v),copyArray(cache,v))}function setValueM2(gl,v){var cache=this.cache,elements=v.elements;void 0===elements?arraysEqual(cache,v)||(gl.uniformMatrix2fv(this.addr,!1,v),copyArray(cache,v)):arraysEqual(cache,elements)||(mat2array.set(elements),gl.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(cache,elements))}function setValueM3(gl,v){var cache=
this.cache,elements=v.elements;void 0===elements?arraysEqual(cache,v)||(gl.uniformMatrix3fv(this.addr,!1,v),copyArray(cache,v)):arraysEqual(cache,elements)||(mat3array.set(elements),gl.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(cache,elements))}function setValueM4(gl,v){var cache=this.cache,elements=v.elements;void 0===elements?arraysEqual(cache,v)||(gl.uniformMatrix4fv(this.addr,!1,v),copyArray(cache,v)):arraysEqual(cache,elements)||(mat4array.set(elements),gl.uniformMatrix4fv(this.addr,
!1,mat4array),copyArray(cache,elements))}function setValueT1(gl,v,textures){var cache=this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit);textures.safeSetTexture2D(v||emptyTexture,unit)}function setValueT2DArray1(gl,v,textures){var cache=this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit);textures.setTexture2DArray(v||emptyTexture2dArray,unit)}function setValueT3D1(gl,v,textures){var cache=
this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit);textures.setTexture3D(v||emptyTexture3d,unit)}function setValueT6(gl,v,textures){var cache=this.cache,unit=textures.allocateTextureUnit();cache[0]!==unit&&(gl.uniform1i(this.addr,unit),cache[0]=unit);textures.safeSetTextureCube(v||emptyCubeTexture,unit)}function setValueV1i(gl,v){var cache=this.cache;cache[0]!==v&&(gl.uniform1i(this.addr,v),cache[0]=v)}function setValueV2i(gl,v){var cache=
this.cache;arraysEqual(cache,v)||(gl.uniform2iv(this.addr,v),copyArray(cache,v))}function setValueV3i(gl,v){var cache=this.cache;arraysEqual(cache,v)||(gl.uniform3iv(this.addr,v),copyArray(cache,v))}function setValueV4i(gl,v){var cache=this.cache;arraysEqual(cache,v)||(gl.uniform4iv(this.addr,v),copyArray(cache,v))}function setValueV1ui(gl,v){var cache=this.cache;cache[0]!==v&&(gl.uniform1ui(this.addr,v),cache[0]=v)}function getSingularSetter(type){switch(type){case 5126:return setValueV1f;case 35664:return setValueV2f;
case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;
case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}function setValueV1fArray(gl,v){gl.uniform1fv(this.addr,v)}function setValueV1iArray(gl,v){gl.uniform1iv(this.addr,v)}function setValueV2iArray(gl,v){gl.uniform2iv(this.addr,v)}function setValueV3iArray(gl,v){gl.uniform3iv(this.addr,v)}function setValueV4iArray(gl,v){gl.uniform4iv(this.addr,v)}function setValueV2fArray(gl,v){v=flatten(v,this.size,2);gl.uniform2fv(this.addr,v)}function setValueV3fArray(gl,v){v=flatten(v,this.size,
3);gl.uniform3fv(this.addr,v)}function setValueV4fArray(gl,v){v=flatten(v,this.size,4);gl.uniform4fv(this.addr,v)}function setValueM2Array(gl,v){v=flatten(v,this.size,4);gl.uniformMatrix2fv(this.addr,!1,v)}function setValueM3Array(gl,v){v=flatten(v,this.size,9);gl.uniformMatrix3fv(this.addr,!1,v)}function setValueM4Array(gl,v){v=flatten(v,this.size,16);gl.uniformMatrix4fv(this.addr,!1,v)}function setValueT1Array(gl,v,textures){var n=v.length,units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,
units);for(gl=0;gl!==n;++gl)textures.safeSetTexture2D(v[gl]||emptyTexture,units[gl])}function setValueT6Array(gl,v,textures){var n=v.length,units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(gl=0;gl!==n;++gl)textures.safeSetTextureCube(v[gl]||emptyCubeTexture,units[gl])}function getPureArraySetter(type){switch(type){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;
case 35675:return setValueM3Array;case 35676:return setValueM4Array;case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35680:case 36300:case 36308:case 36293:return setValueT6Array}}function SingleUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.setValue=getSingularSetter(activeInfo.type)}
function PureArrayUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.size=activeInfo.size;this.setValue=getPureArraySetter(activeInfo.type)}function StructuredUniform(id){this.id=id;this.seq=[];this.map={}}function WebGLUniforms(gl,program){this.seq=[];this.map={};for(var n=gl.getProgramParameter(program,35718),_i116=0;_i116<n;++_i116){var info=gl.getActiveUniform(program,_i116),addr=gl.getUniformLocation(program,info.name),container=this,path=info.name,pathLength=path.length;
for(RePathPart.lastIndex=0;;){var match=RePathPart.exec(path),matchEnd=RePathPart.lastIndex,id=match[1],subscript=match[3];"]"===match[2]&&(id|=0);if(void 0===subscript||"["===subscript&&matchEnd+2===pathLength){path=container;info=void 0===subscript?new SingleUniform(id,info,addr):new PureArrayUniform(id,info,addr);path.seq.push(info);path.map[info.id]=info;break}else subscript=container.map[id],void 0===subscript&&(subscript=new StructuredUniform(id),id=container,container=subscript,id.seq.push(container),
id.map[container.id]=container),container=subscript}}}function WebGLShader(gl,type,string){type=gl.createShader(type);gl.shaderSource(type,string);gl.compileShader(type);return type}function getEncodingComponents(encoding){switch(encoding){case LinearEncoding:return["Linear","( value )"];case sRGBEncoding:return["sRGB","( value )"];case RGBEEncoding:return["RGBE","( value )"];case RGBM7Encoding:return["RGBM","( value, 7.0 )"];case RGBM16Encoding:return["RGBM","( value, 16.0 )"];case RGBDEncoding:return["RGBD",
"( value, 256.0 )"];case GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case LogLuvEncoding:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",encoding),["Linear","( value )"]}}function getShaderErrors(gl,shader,type){var status=gl.getShaderParameter(shader,35713),log=gl.getShaderInfoLog(shader).trim();if(status&&""===log)return"";gl=gl.getShaderSource(shader).split("\n");for(shader=0;shader<gl.length;shader++)gl[shader]=shader+1+
": "+gl[shader];gl=gl.join("\n");return"THREE.WebGLShader: gl.getShaderInfoLog() "+type+"\n"+log+gl}function getTexelDecodingFunction(functionName,encoding){encoding=getEncodingComponents(encoding);return"vec4 "+functionName+"( vec4 value ) { return "+encoding[0]+"ToLinear"+encoding[1]+"; }"}function getTexelEncodingFunction(functionName,encoding){encoding=getEncodingComponents(encoding);return"vec4 "+functionName+"( vec4 value ) { return LinearTo"+encoding[0]+encoding[1]+"; }"}function getToneMappingFunction(functionName,
toneMapping){switch(toneMapping){case LinearToneMapping:toneMapping="Linear";break;case ReinhardToneMapping:toneMapping="Reinhard";break;case CineonToneMapping:toneMapping="OptimizedCineon";break;case ACESFilmicToneMapping:toneMapping="ACESFilmic";break;case CustomToneMapping:toneMapping="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",toneMapping),toneMapping="Linear"}return"vec3 "+functionName+"( vec3 color ) { return "+toneMapping+"ToneMapping( color ); }"}function generateDefines(defines){var chunks=
[],name;for(name in defines){var value=defines[name];!1!==value&&chunks.push("#define "+name+" "+value)}return chunks.join("\n")}function filterEmptyLine(string){return""!==string}function replaceLightNums(string,parameters){return string.replace(/NUM_DIR_LIGHTS/g,parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g,parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g,parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,
parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,parameters.numPointLightShadows)}function replaceClippingPlaneNums(string,parameters){return string.replace(/NUM_CLIPPING_PLANES/g,parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,parameters.numClippingPlanes-parameters.numClipIntersection)}function includeReplacer(match,include){match=ShaderChunk[include];if(void 0===match)throw Error("Can not resolve #include \x3c"+
include+"\x3e");return match.replace(includePattern,includeReplacer)}function deprecatedLoopReplacer(match,start,end,snippet){console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.");return loopReplacer(match,start,end,snippet)}function loopReplacer(match,start,end,snippet){match="";for(start=parseInt(start);start<parseInt(end);start++)match+=snippet.replace(/\[ i \]/g,"[ "+start+" ]").replace(/UNROLLED_LOOP_INDEX/g,start);
return match}function generatePrecision(parameters){var precisionstring="precision "+parameters.precision+" float;\nprecision "+parameters.precision+" int;";"highp"===parameters.precision?precisionstring+="\n#define HIGH_PRECISION":"mediump"===parameters.precision?precisionstring+="\n#define MEDIUM_PRECISION":"lowp"===parameters.precision&&(precisionstring+="\n#define LOW_PRECISION");return precisionstring}function generateShadowMapTypeDefine(parameters){var shadowMapTypeDefine="SHADOWMAP_TYPE_BASIC";
parameters.shadowMapType===PCFShadowMap?shadowMapTypeDefine="SHADOWMAP_TYPE_PCF":parameters.shadowMapType===PCFSoftShadowMap?shadowMapTypeDefine="SHADOWMAP_TYPE_PCF_SOFT":parameters.shadowMapType===VSMShadowMap&&(shadowMapTypeDefine="SHADOWMAP_TYPE_VSM");return shadowMapTypeDefine}function generateEnvMapTypeDefine(parameters){var envMapTypeDefine="ENVMAP_TYPE_CUBE";if(parameters.envMap)switch(parameters.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:envMapTypeDefine="ENVMAP_TYPE_CUBE";
break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:envMapTypeDefine="ENVMAP_TYPE_CUBE_UV";break;case EquirectangularReflectionMapping:case EquirectangularRefractionMapping:envMapTypeDefine="ENVMAP_TYPE_EQUIREC"}return envMapTypeDefine}function generateEnvMapModeDefine(parameters){var envMapModeDefine="ENVMAP_MODE_REFLECTION";if(parameters.envMap)switch(parameters.envMapMode){case CubeRefractionMapping:case EquirectangularRefractionMapping:envMapModeDefine="ENVMAP_MODE_REFRACTION"}return envMapModeDefine}
function generateEnvMapBlendingDefine(parameters){var envMapBlendingDefine="ENVMAP_BLENDING_NONE";if(parameters.envMap)switch(parameters.combine){case MultiplyOperation:envMapBlendingDefine="ENVMAP_BLENDING_MULTIPLY";break;case MixOperation:envMapBlendingDefine="ENVMAP_BLENDING_MIX";break;case AddOperation:envMapBlendingDefine="ENVMAP_BLENDING_ADD"}return envMapBlendingDefine}function WebGLProgram(renderer,cacheKey,parameters,bindingStates){var gl=renderer.getContext(),defines=parameters.defines,
vertexShader=parameters.vertexShader,fragmentShader=parameters.fragmentShader,shadowMapTypeDefine=generateShadowMapTypeDefine(parameters),envMapTypeDefine=generateEnvMapTypeDefine(parameters),envMapModeDefine=generateEnvMapModeDefine(parameters),envMapBlendingDefine=generateEnvMapBlendingDefine(parameters),gammaFactorDefine=0<renderer.gammaFactor?renderer.gammaFactor:1,customExtensions=parameters.isWebGL2?"":[parameters.extensionDerivatives||parameters.envMapCubeUV||parameters.bumpMap||parameters.tangentSpaceNormalMap||
parameters.clearcoatNormalMap||parameters.flatShading||"physical"===parameters.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(parameters.extensionFragDepth||parameters.logarithmicDepthBuffer)&&parameters.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",parameters.extensionDrawBuffers&&parameters.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(parameters.extensionShaderTextureLOD||parameters.envMap)&&parameters.rendererExtensionShaderTextureLod?
"#extension GL_EXT_shader_texture_lod : enable":""].filter(filterEmptyLine).join("\n"),customDefines=generateDefines(defines),program=gl.createProgram();parameters.isRawShaderMaterial?(defines=[customDefines].filter(filterEmptyLine).join("\n"),0<defines.length&&(defines+="\n"),shadowMapTypeDefine=[customExtensions,customDefines].filter(filterEmptyLine).join("\n"),0<shadowMapTypeDefine.length&&(shadowMapTypeDefine+="\n")):(defines=[generatePrecision(parameters),"#define SHADER_NAME "+parameters.shaderName,
customDefines,parameters.instancing?"#define USE_INSTANCING":"",parameters.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+gammaFactorDefine,"#define MAX_BONES "+parameters.maxBones,parameters.useFog&&parameters.fog?"#define USE_FOG":"",parameters.useFog&&parameters.fogExp2?"#define FOG_EXP2":"",parameters.map?"#define USE_MAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.envMap?"#define "+envMapModeDefine:"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.aoMap?
"#define USE_AOMAP":"",parameters.emissiveMap?"#define USE_EMISSIVEMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.normalMap&&parameters.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",parameters.normalMap&&parameters.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",parameters.clearcoatMap?"#define USE_CLEARCOATMAP":"",parameters.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",parameters.clearcoatNormalMap?
"#define USE_CLEARCOAT_NORMALMAP":"",parameters.displacementMap&&parameters.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.roughnessMap?"#define USE_ROUGHNESSMAP":"",parameters.metalnessMap?"#define USE_METALNESSMAP":"",parameters.alphaMap?"#define USE_ALPHAMAP":"",parameters.vertexTangents?"#define USE_TANGENT":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.vertexUvs?"#define USE_UV":"",parameters.uvsVertexOnly?
"#define UVS_VERTEX_ONLY":"",parameters.flatShading?"#define FLAT_SHADED":"",parameters.skinning?"#define USE_SKINNING":"",parameters.useVertexTexture?"#define BONE_TEXTURE":"",parameters.morphTargets?"#define USE_MORPHTARGETS":"",parameters.morphNormals&&!1===parameters.flatShading?"#define USE_MORPHNORMALS":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?"#define "+
shadowMapTypeDefine:"",parameters.sizeAttenuation?"#define USE_SIZEATTENUATION":"",parameters.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;",
"#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;",
"\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),shadowMapTypeDefine=[customExtensions,generatePrecision(parameters),"#define SHADER_NAME "+parameters.shaderName,customDefines,parameters.alphaTest?"#define ALPHATEST "+parameters.alphaTest+(parameters.alphaTest%
1?"":".0"):"","#define GAMMA_FACTOR "+gammaFactorDefine,parameters.useFog&&parameters.fog?"#define USE_FOG":"",parameters.useFog&&parameters.fogExp2?"#define FOG_EXP2":"",parameters.map?"#define USE_MAP":"",parameters.matcap?"#define USE_MATCAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.envMap?"#define "+envMapTypeDefine:"",parameters.envMap?"#define "+envMapModeDefine:"",parameters.envMap?"#define "+envMapBlendingDefine:"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.aoMap?
"#define USE_AOMAP":"",parameters.emissiveMap?"#define USE_EMISSIVEMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.normalMap&&parameters.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",parameters.normalMap&&parameters.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",parameters.clearcoatMap?"#define USE_CLEARCOATMAP":"",parameters.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",parameters.clearcoatNormalMap?
"#define USE_CLEARCOAT_NORMALMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.roughnessMap?"#define USE_ROUGHNESSMAP":"",parameters.metalnessMap?"#define USE_METALNESSMAP":"",parameters.alphaMap?"#define USE_ALPHAMAP":"",parameters.sheen?"#define USE_SHEEN":"",parameters.vertexTangents?"#define USE_TANGENT":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.vertexUvs?"#define USE_UV":"",parameters.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",parameters.gradientMap?"#define USE_GRADIENTMAP":
"",parameters.flatShading?"#define FLAT_SHADED":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?"#define "+shadowMapTypeDefine:"",parameters.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",parameters.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",parameters.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?
"#define USE_LOGDEPTHBUF_EXT":"",(parameters.extensionShaderTextureLOD||parameters.envMap)&&parameters.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",parameters.toneMapping!==NoToneMapping?"#define TONE_MAPPING":"",parameters.toneMapping!==NoToneMapping?ShaderChunk.tonemapping_pars_fragment:"",parameters.toneMapping!==NoToneMapping?getToneMappingFunction("toneMapping",parameters.toneMapping):"",
parameters.dithering?"#define DITHERING":"",ShaderChunk.encodings_pars_fragment,parameters.map?getTexelDecodingFunction("mapTexelToLinear",parameters.mapEncoding):"",parameters.matcap?getTexelDecodingFunction("matcapTexelToLinear",parameters.matcapEncoding):"",parameters.envMap?getTexelDecodingFunction("envMapTexelToLinear",parameters.envMapEncoding):"",parameters.emissiveMap?getTexelDecodingFunction("emissiveMapTexelToLinear",parameters.emissiveMapEncoding):"",parameters.lightMap?getTexelDecodingFunction("lightMapTexelToLinear",
parameters.lightMapEncoding):"",getTexelEncodingFunction("linearToOutputTexel",parameters.outputEncoding),parameters.depthPacking?"#define DEPTH_PACKING "+parameters.depthPacking:"","\n"].filter(filterEmptyLine).join("\n"));vertexShader=vertexShader.replace(includePattern,includeReplacer);vertexShader=replaceLightNums(vertexShader,parameters);vertexShader=replaceClippingPlaneNums(vertexShader,parameters);fragmentShader=fragmentShader.replace(includePattern,includeReplacer);fragmentShader=replaceLightNums(fragmentShader,
parameters);fragmentShader=replaceClippingPlaneNums(fragmentShader,parameters);vertexShader=vertexShader.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer);fragmentShader=fragmentShader.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer);parameters.isWebGL2&&!parameters.isRawShaderMaterial&&(envMapTypeDefine=!1,envMapModeDefine=/^\s*#version\s+300\s+es\s*\n/,parameters.isShaderMaterial&&null!==vertexShader.match(envMapModeDefine)&&
null!==fragmentShader.match(envMapModeDefine)&&(envMapTypeDefine=!0,vertexShader=vertexShader.replace(envMapModeDefine,""),fragmentShader=fragmentShader.replace(envMapModeDefine,"")),defines="#version 300 es\n\n#define attribute in\n#define varying out\n#define texture2D texture\n"+defines,shadowMapTypeDefine=["#version 300 es\n\n#define varying in",envMapTypeDefine?"":"out highp vec4 pc_fragColor;",envMapTypeDefine?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth\n#define texture2D texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad"].join("\n")+
"\n"+shadowMapTypeDefine);fragmentShader=shadowMapTypeDefine+fragmentShader;vertexShader=WebGLShader(gl,35633,defines+vertexShader);fragmentShader=WebGLShader(gl,35632,fragmentShader);gl.attachShader(program,vertexShader);gl.attachShader(program,fragmentShader);void 0!==parameters.index0AttributeName?gl.bindAttribLocation(program,0,parameters.index0AttributeName):!0===parameters.morphTargets&&gl.bindAttribLocation(program,0,"position");gl.linkProgram(program);if(renderer.debug.checkShaderErrors){renderer=
gl.getProgramInfoLog(program).trim();envMapTypeDefine=gl.getShaderInfoLog(vertexShader).trim();envMapModeDefine=gl.getShaderInfoLog(fragmentShader).trim();gammaFactorDefine=envMapBlendingDefine=!0;if(!1===gl.getProgramParameter(program,35714))envMapBlendingDefine=!1,customExtensions=getShaderErrors(gl,vertexShader,"vertex"),customDefines=getShaderErrors(gl,fragmentShader,"fragment"),console.error("THREE.WebGLProgram: shader error: ",gl.getError(),"35715",gl.getProgramParameter(program,35715),"gl.getProgramInfoLog",
renderer,customExtensions,customDefines);else if(""!==renderer)console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",renderer);else if(""===envMapTypeDefine||""===envMapModeDefine)gammaFactorDefine=!1;gammaFactorDefine&&(this.diagnostics={runnable:envMapBlendingDefine,programLog:renderer,vertexShader:{log:envMapTypeDefine,prefix:defines},fragmentShader:{log:envMapModeDefine,prefix:shadowMapTypeDefine}})}gl.deleteShader(vertexShader);gl.deleteShader(fragmentShader);var cachedUniforms;this.getUniforms=
function(){void 0===cachedUniforms&&(cachedUniforms=new WebGLUniforms(gl,program));return cachedUniforms};var cachedAttributes;this.getAttributes=function(){if(void 0===cachedAttributes){for(var attributes={},n=gl.getProgramParameter(program,35721),_i120=0;_i120<n;_i120++){var name=gl.getActiveAttrib(program,_i120).name;attributes[name]=gl.getAttribLocation(program,name)}cachedAttributes=attributes}return cachedAttributes};this.destroy=function(){bindingStates.releaseStatesOfProgram(this);gl.deleteProgram(program);
this.program=void 0};this.name=parameters.shaderName;this.id=programIdCount++;this.cacheKey=cacheKey;this.usedTimes=1;this.program=program;this.vertexShader=vertexShader;this.fragmentShader=fragmentShader;return this}function WebGLPrograms(renderer,extensions,capabilities,bindingStates){function getTextureEncodingFromMap(map){if(map)map.isTexture?encoding=map.encoding:map.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),
encoding=map.texture.encoding);else var encoding=LinearEncoding;return encoding}var programs=[],isWebGL2=capabilities.isWebGL2,logarithmicDepthBuffer=capabilities.logarithmicDepthBuffer,floatVertexTextures=capabilities.floatVertexTextures,maxVertexUniforms=capabilities.maxVertexUniforms,vertexTextures=capabilities.vertexTextures,precision=capabilities.precision,shaderIDs={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",
MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},parameterNames="precision isWebGL2 supportsVertexTextures outputEncoding instancing map mapEncoding matcap matcapEncoding envMap envMapMode envMapEncoding envMapCubeUV lightMap lightMapEncoding aoMap emissiveMap emissiveMapEncoding bumpMap normalMap objectSpaceNormalMap tangentSpaceNormalMap clearcoatMap clearcoatRoughnessMap clearcoatNormalMap displacementMap specularMap roughnessMap metalnessMap gradientMap alphaMap combine vertexColors vertexTangents vertexUvs uvsVertexOnly fog useFog fogExp2 flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights numRectAreaLights numDirLightShadows numPointLightShadows numSpotLightShadows shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes numClipIntersection depthPacking dithering sheen".split(" ");
return{getParameters:function(material,lights,shadows,scene,nClipPlanes,nClipIntersection,object){var fog=scene.fog;scene=material.isMeshStandardMaterial?scene.environment:null;scene=material.envMap||scene;var shaderID=shaderIDs[material.type];if(object.isSkinnedMesh){var JSCompiler_temp=object.skeleton.bones;if(floatVertexTextures)JSCompiler_temp=1024;else{var maxBones=Math.min(Math.floor((maxVertexUniforms-20)/4),JSCompiler_temp.length);maxBones<JSCompiler_temp.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+
JSCompiler_temp.length+" bones. This GPU supports "+maxBones+"."),JSCompiler_temp=0):JSCompiler_temp=maxBones}}else JSCompiler_temp=0;null!==material.precision&&(precision=capabilities.getMaxPrecision(material.precision),precision!==material.precision&&console.warn("THREE.WebGLProgram.getParameters:",material.precision,"not supported, using",precision,"instead."));shaderID?(maxBones=ShaderLib[shaderID],maxBones={name:material.name||material.type,uniforms:UniformsUtils.clone(maxBones.uniforms),vertexShader:maxBones.vertexShader,
fragmentShader:maxBones.fragmentShader}):maxBones={name:material.name||material.type,uniforms:material.uniforms,vertexShader:material.vertexShader,fragmentShader:material.fragmentShader};material.onBeforeCompile(maxBones,renderer);var currentRenderTarget=renderer.getRenderTarget();return{isWebGL2:isWebGL2,shaderID:shaderID,shaderName:maxBones.name,uniforms:maxBones.uniforms,vertexShader:maxBones.vertexShader,fragmentShader:maxBones.fragmentShader,defines:material.defines,isRawShaderMaterial:material.isRawShaderMaterial,
isShaderMaterial:material.isShaderMaterial,precision:precision,instancing:!0===object.isInstancedMesh,supportsVertexTextures:vertexTextures,outputEncoding:null!==currentRenderTarget?getTextureEncodingFromMap(currentRenderTarget.texture):renderer.outputEncoding,map:!!material.map,mapEncoding:getTextureEncodingFromMap(material.map),matcap:!!material.matcap,matcapEncoding:getTextureEncodingFromMap(material.matcap),envMap:!!scene,envMapMode:scene&&scene.mapping,envMapEncoding:getTextureEncodingFromMap(scene),
envMapCubeUV:!!scene&&(scene.mapping===CubeUVReflectionMapping||scene.mapping===CubeUVRefractionMapping),lightMap:!!material.lightMap,lightMapEncoding:getTextureEncodingFromMap(material.lightMap),aoMap:!!material.aoMap,emissiveMap:!!material.emissiveMap,emissiveMapEncoding:getTextureEncodingFromMap(material.emissiveMap),bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,objectSpaceNormalMap:material.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:material.normalMapType===TangentSpaceNormalMap,
clearcoatMap:!!material.clearcoatMap,clearcoatRoughnessMap:!!material.clearcoatRoughnessMap,clearcoatNormalMap:!!material.clearcoatNormalMap,displacementMap:!!material.displacementMap,roughnessMap:!!material.roughnessMap,metalnessMap:!!material.metalnessMap,specularMap:!!material.specularMap,alphaMap:!!material.alphaMap,gradientMap:!!material.gradientMap,sheen:!!material.sheen,combine:material.combine,vertexTangents:material.normalMap&&material.vertexTangents,vertexColors:material.vertexColors,vertexUvs:!!material.map||
!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatMap||!!material.clearcoatRoughnessMap||!!material.clearcoatNormalMap||!!material.displacementMap,uvsVertexOnly:!(material.map||material.bumpMap||material.normalMap||material.specularMap||material.alphaMap||material.emissiveMap||material.roughnessMap||material.metalnessMap||material.clearcoatNormalMap)&&!!material.displacementMap,
fog:!!fog,useFog:material.fog,fogExp2:fog&&fog.isFogExp2,flatShading:material.flatShading,sizeAttenuation:material.sizeAttenuation,logarithmicDepthBuffer:logarithmicDepthBuffer,skinning:material.skinning&&0<JSCompiler_temp,maxBones:JSCompiler_temp,useVertexTexture:floatVertexTextures,morphTargets:material.morphTargets,morphNormals:material.morphNormals,maxMorphTargets:renderer.maxMorphTargets,maxMorphNormals:renderer.maxMorphNormals,numDirLights:lights.directional.length,numPointLights:lights.point.length,
numSpotLights:lights.spot.length,numRectAreaLights:lights.rectArea.length,numHemiLights:lights.hemi.length,numDirLightShadows:lights.directionalShadowMap.length,numPointLightShadows:lights.pointShadowMap.length,numSpotLightShadows:lights.spotShadowMap.length,numClippingPlanes:nClipPlanes,numClipIntersection:nClipIntersection,dithering:material.dithering,shadowMapEnabled:renderer.shadowMap.enabled&&0<shadows.length,shadowMapType:renderer.shadowMap.type,toneMapping:material.toneMapped?renderer.toneMapping:
NoToneMapping,physicallyCorrectLights:renderer.physicallyCorrectLights,premultipliedAlpha:material.premultipliedAlpha,alphaTest:material.alphaTest,doubleSided:material.side===DoubleSide,flipSided:material.side===BackSide,depthPacking:void 0!==material.depthPacking?material.depthPacking:!1,index0AttributeName:material.index0AttributeName,extensionDerivatives:material.extensions&&material.extensions.derivatives,extensionFragDepth:material.extensions&&material.extensions.fragDepth,extensionDrawBuffers:material.extensions&&
material.extensions.drawBuffers,extensionShaderTextureLOD:material.extensions&&material.extensions.shaderTextureLOD,rendererExtensionFragDepth:isWebGL2||null!==extensions.get("EXT_frag_depth"),rendererExtensionDrawBuffers:isWebGL2||null!==extensions.get("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:isWebGL2||null!==extensions.get("EXT_shader_texture_lod"),customProgramCacheKey:material.customProgramCacheKey()}},getProgramCacheKey:function(parameters){var array=[];parameters.shaderID?array.push(parameters.shaderID):
(array.push(parameters.fragmentShader),array.push(parameters.vertexShader));if(void 0!==parameters.defines)for(var name in parameters.defines)array.push(name),array.push(parameters.defines[name]);if(void 0===parameters.isRawShaderMaterial){for(name=0;name<parameterNames.length;name++)array.push(parameters[parameterNames[name]]);array.push(renderer.outputEncoding);array.push(renderer.gammaFactor)}array.push(parameters.customProgramCacheKey);return array.join()},acquireProgram:function(parameters,cacheKey){for(var program,
p=0,pl=programs.length;p<pl;p++){var preexistingProgram=programs[p];if(preexistingProgram.cacheKey===cacheKey){program=preexistingProgram;++program.usedTimes;break}}void 0===program&&(program=new WebGLProgram(renderer,cacheKey,parameters,bindingStates),programs.push(program));return program},releaseProgram:function(program){if(0===--program.usedTimes){var _i123=programs.indexOf(program);programs[_i123]=programs[programs.length-1];programs.pop();program.destroy()}},programs:programs}}function WebGLProperties(){var properties=
new WeakMap;return{get:function(object){var map=properties.get(object);void 0===map&&(map={},properties.set(object,map));return map},remove:function(object){properties["delete"](object)},update:function(object,key,value){properties.get(object)[key]=value},dispose:function(){properties=new WeakMap}}}function painterSortStable(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.program!==b.program?a.program.id-b.program.id:a.material.id!==
b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function reversePainterSortStable(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function WebGLRenderList(){function getNextRenderItem(object,geometry,material,groupOrder,z,group){var renderItem=renderItems[renderItemsIndex];void 0===renderItem?(renderItem={id:object.id,object:object,geometry:geometry,material:material,program:material.program||
defaultProgram,groupOrder:groupOrder,renderOrder:object.renderOrder,z:z,group:group},renderItems[renderItemsIndex]=renderItem):(renderItem.id=object.id,renderItem.object=object,renderItem.geometry=geometry,renderItem.material=material,renderItem.program=material.program||defaultProgram,renderItem.groupOrder=groupOrder,renderItem.renderOrder=object.renderOrder,renderItem.z=z,renderItem.group=group);renderItemsIndex++;return renderItem}var renderItems=[],renderItemsIndex=0,opaque=[],transparent=[],
defaultProgram={id:-1};return{opaque:opaque,transparent:transparent,init:function(){renderItemsIndex=0;opaque.length=0;transparent.length=0},push:function(object,geometry,material,groupOrder,z,group){object=getNextRenderItem(object,geometry,material,groupOrder,z,group);(!0===material.transparent?transparent:opaque).push(object)},unshift:function(object,geometry,material,groupOrder,z,group){object=getNextRenderItem(object,geometry,material,groupOrder,z,group);(!0===material.transparent?transparent:
opaque).unshift(object)},finish:function(){for(var _i124=renderItemsIndex,il=renderItems.length;_i124<il;_i124++){var renderItem=renderItems[_i124];if(null===renderItem.id)break;renderItem.id=null;renderItem.object=null;renderItem.geometry=null;renderItem.material=null;renderItem.program=null;renderItem.group=null}},sort:function(customOpaqueSort,customTransparentSort){1<opaque.length&&opaque.sort(customOpaqueSort||painterSortStable);1<transparent.length&&transparent.sort(customTransparentSort||reversePainterSortStable)}}}
function WebGLRenderLists(){function onSceneDispose(event){event=event.target;event.removeEventListener("dispose",onSceneDispose);lists["delete"](event)}var lists=new WeakMap;return{get:function(scene,camera){var cameras=lists.get(scene);if(void 0===cameras){var list=new WebGLRenderList;lists.set(scene,new WeakMap);lists.get(scene).set(camera,list);scene.addEventListener("dispose",onSceneDispose)}else list=cameras.get(camera),void 0===list&&(list=new WebGLRenderList,cameras.set(camera,list));return list},
dispose:function(){lists=new WeakMap}}}function UniformsCache(){var lights={};return{get:function(light){if(void 0!==lights[light.id])return lights[light.id];switch(light.type){case "DirectionalLight":var uniforms={direction:new Vector3,color:new Color};break;case "SpotLight":uniforms={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case "PointLight":uniforms={position:new Vector3,color:new Color,distance:0,decay:0};break;case "HemisphereLight":uniforms=
{direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case "RectAreaLight":uniforms={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3}}return lights[light.id]=uniforms}}}function ShadowUniformsCache(){var lights={};return{get:function(light){if(void 0!==lights[light.id])return lights[light.id];switch(light.type){case "DirectionalLight":var uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case "SpotLight":uniforms=
{shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case "PointLight":uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1E3}}return lights[light.id]=uniforms}}}function shadowCastingLightsFirst(lightA,lightB){return(lightB.castShadow?1:0)-(lightA.castShadow?1:0)}function WebGLLights(){for(var cache=new UniformsCache,shadowCache=ShadowUniformsCache(),state={version:0,hash:{directionalLength:-1,pointLength:-1,
spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},_i125=0;9>_i125;_i125++)state.probe.push(new Vector3);var vector3=new Vector3,matrix4=new Matrix4,matrix42=new Matrix4;return{setup:function(lights,
shadows,camera){for(var g=shadows=0,b=0,_i126=0;9>_i126;_i126++)state.probe[_i126].set(0,0,0);var pointLength=_i126=0,spotLength=0,rectAreaLength=0,hemiLength=0,numDirectionalShadows=0,numPointShadows=0,numSpotShadows=0;camera=camera.matrixWorldInverse;lights.sort(shadowCastingLightsFirst);for(var _i127=0,l=lights.length;_i127<l;_i127++){var light=lights[_i127],color=light.color,intensity=light.intensity,distance=light.distance,shadowMap=light.shadow&&light.shadow.map?light.shadow.map.texture:null;
if(light.isAmbientLight)shadows+=color.r*intensity,g+=color.g*intensity,b+=color.b*intensity;else if(light.isLightProbe)for(shadowMap=0;9>shadowMap;shadowMap++)state.probe[shadowMap].addScaledVector(light.sh.coefficients[shadowMap],intensity);else if(light.isDirectionalLight){intensity=cache.get(light);intensity.color.copy(light.color).multiplyScalar(light.intensity);intensity.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);intensity.direction.sub(vector3);
intensity.direction.transformDirection(camera);if(light.castShadow){var shadow=light.shadow;color=shadowCache.get(light);color.shadowBias=shadow.bias;color.shadowNormalBias=shadow.normalBias;color.shadowRadius=shadow.radius;color.shadowMapSize=shadow.mapSize;state.directionalShadow[_i126]=color;state.directionalShadowMap[_i126]=shadowMap;state.directionalShadowMatrix[_i126]=light.shadow.matrix;numDirectionalShadows++}state.directional[_i126]=intensity;_i126++}else light.isSpotLight?(shadow=cache.get(light),
shadow.position.setFromMatrixPosition(light.matrixWorld),shadow.position.applyMatrix4(camera),shadow.color.copy(color).multiplyScalar(intensity),shadow.distance=distance,shadow.direction.setFromMatrixPosition(light.matrixWorld),vector3.setFromMatrixPosition(light.target.matrixWorld),shadow.direction.sub(vector3),shadow.direction.transformDirection(camera),shadow.coneCos=Math.cos(light.angle),shadow.penumbraCos=Math.cos(light.angle*(1-light.penumbra)),shadow.decay=light.decay,light.castShadow&&(intensity=
light.shadow,color=shadowCache.get(light),color.shadowBias=intensity.bias,color.shadowNormalBias=intensity.normalBias,color.shadowRadius=intensity.radius,color.shadowMapSize=intensity.mapSize,state.spotShadow[spotLength]=color,state.spotShadowMap[spotLength]=shadowMap,state.spotShadowMatrix[spotLength]=light.shadow.matrix,numSpotShadows++),state.spot[spotLength]=shadow,spotLength++):light.isRectAreaLight?(shadowMap=cache.get(light),shadowMap.color.copy(color).multiplyScalar(intensity),shadowMap.position.setFromMatrixPosition(light.matrixWorld),
shadowMap.position.applyMatrix4(camera),matrix42.identity(),matrix4.copy(light.matrixWorld),matrix4.premultiply(camera),matrix42.extractRotation(matrix4),shadowMap.halfWidth.set(.5*light.width,0,0),shadowMap.halfHeight.set(0,.5*light.height,0),shadowMap.halfWidth.applyMatrix4(matrix42),shadowMap.halfHeight.applyMatrix4(matrix42),state.rectArea[rectAreaLength]=shadowMap,rectAreaLength++):light.isPointLight?(intensity=cache.get(light),intensity.position.setFromMatrixPosition(light.matrixWorld),intensity.position.applyMatrix4(camera),
intensity.color.copy(light.color).multiplyScalar(light.intensity),intensity.distance=light.distance,intensity.decay=light.decay,light.castShadow&&(shadow=light.shadow,color=shadowCache.get(light),color.shadowBias=shadow.bias,color.shadowNormalBias=shadow.normalBias,color.shadowRadius=shadow.radius,color.shadowMapSize=shadow.mapSize,color.shadowCameraNear=shadow.camera.near,color.shadowCameraFar=shadow.camera.far,state.pointShadow[pointLength]=color,state.pointShadowMap[pointLength]=shadowMap,state.pointShadowMatrix[pointLength]=
light.shadow.matrix,numPointShadows++),state.point[pointLength]=intensity,pointLength++):light.isHemisphereLight&&(shadowMap=cache.get(light),shadowMap.direction.setFromMatrixPosition(light.matrixWorld),shadowMap.direction.transformDirection(camera),shadowMap.direction.normalize(),shadowMap.skyColor.copy(light.color).multiplyScalar(intensity),shadowMap.groundColor.copy(light.groundColor).multiplyScalar(intensity),state.hemi[hemiLength]=shadowMap,hemiLength++)}state.ambient[0]=shadows;state.ambient[1]=
g;state.ambient[2]=b;lights=state.hash;if(lights.directionalLength!==_i126||lights.pointLength!==pointLength||lights.spotLength!==spotLength||lights.rectAreaLength!==rectAreaLength||lights.hemiLength!==hemiLength||lights.numDirectionalShadows!==numDirectionalShadows||lights.numPointShadows!==numPointShadows||lights.numSpotShadows!==numSpotShadows)state.directional.length=_i126,state.spot.length=spotLength,state.rectArea.length=rectAreaLength,state.point.length=pointLength,state.hemi.length=hemiLength,
state.directionalShadow.length=numDirectionalShadows,state.directionalShadowMap.length=numDirectionalShadows,state.pointShadow.length=numPointShadows,state.pointShadowMap.length=numPointShadows,state.spotShadow.length=numSpotShadows,state.spotShadowMap.length=numSpotShadows,state.directionalShadowMatrix.length=numDirectionalShadows,state.pointShadowMatrix.length=numPointShadows,state.spotShadowMatrix.length=numSpotShadows,lights.directionalLength=_i126,lights.pointLength=pointLength,lights.spotLength=
spotLength,lights.rectAreaLength=rectAreaLength,lights.hemiLength=hemiLength,lights.numDirectionalShadows=numDirectionalShadows,lights.numPointShadows=numPointShadows,lights.numSpotShadows=numSpotShadows,state.version=nextVersion++},state:state}}function WebGLRenderState(){var lights=new WebGLLights,lightsArray=[],shadowsArray=[];return{init:function(){lightsArray.length=0;shadowsArray.length=0},state:{lightsArray:lightsArray,shadowsArray:shadowsArray,lights:lights},setupLights:function(camera){lights.setup(lightsArray,
shadowsArray,camera)},pushLight:function(light){lightsArray.push(light)},pushShadow:function(shadowLight){shadowsArray.push(shadowLight)}}}function WebGLRenderStates(){function onSceneDispose(event){event=event.target;event.removeEventListener("dispose",onSceneDispose);renderStates["delete"](event)}var renderStates=new WeakMap;return{get:function(scene,camera){if(!1===renderStates.has(scene)){var renderState=new WebGLRenderState;renderStates.set(scene,new WeakMap);renderStates.get(scene).set(camera,
renderState);scene.addEventListener("dispose",onSceneDispose)}else!1===renderStates.get(scene).has(camera)?(renderState=new WebGLRenderState,renderStates.get(scene).set(camera,renderState)):renderState=renderStates.get(scene).get(camera);return renderState},dispose:function(){renderStates=new WeakMap}}}function MeshDepthMaterial(parameters){Material.call(this);this.type="MeshDepthMaterial";this.depthPacking=BasicDepthPacking;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=
null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.fog=!1;this.setValues(parameters)}function MeshDistanceMaterial(parameters){Material.call(this);this.type="MeshDistanceMaterial";this.referencePosition=new Vector3;this.nearDistance=1;this.farDistance=1E3;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.fog=!1;this.setValues(parameters)}function WebGLShadowMap(_renderer,
_objects,maxTextureSize){function getDepthMaterialVariant(useMorphing,useSkinning,useInstancing){useInstancing=useMorphing<<0|useSkinning<<1|useInstancing<<2;var material=_depthMaterials[useInstancing];void 0===material&&(material=new MeshDepthMaterial({depthPacking:RGBADepthPacking,morphTargets:useMorphing,skinning:useSkinning}),_depthMaterials[useInstancing]=material);return material}function getDistanceMaterialVariant(useMorphing,useSkinning,useInstancing){useInstancing=useMorphing<<0|useSkinning<<
1|useInstancing<<2;var material=_distanceMaterials[useInstancing];void 0===material&&(material=new MeshDistanceMaterial({morphTargets:useMorphing,skinning:useSkinning}),_distanceMaterials[useInstancing]=material);return material}function getDepthMaterial(object,geometry,material,light,shadowCameraNear,shadowCameraFar,type){var getMaterialVariant=getDepthMaterialVariant,customMaterial=object.customDepthMaterial;!0===light.isPointLight&&(getMaterialVariant=getDistanceMaterialVariant,customMaterial=
object.customDistanceMaterial);void 0===customMaterial?(customMaterial=!1,!0===material.morphTargets&&(customMaterial=geometry.morphAttributes&&geometry.morphAttributes.position&&0<geometry.morphAttributes.position.length),geometry=!1,!0===object.isSkinnedMesh&&(!0===material.skinning?geometry=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",object)),object=getMaterialVariant(customMaterial,geometry,!0===object.isInstancedMesh)):object=customMaterial;
_renderer.localClippingEnabled&&!0===material.clipShadows&&0!==material.clippingPlanes.length&&(customMaterial=object.uuid,getMaterialVariant=material.uuid,geometry=_materialCache[customMaterial],void 0===geometry&&(geometry={},_materialCache[customMaterial]=geometry),customMaterial=geometry[getMaterialVariant],void 0===customMaterial&&(customMaterial=object.clone(),geometry[getMaterialVariant]=customMaterial),object=customMaterial);object.visible=material.visible;object.wireframe=material.wireframe;
object.side=type===VSMShadowMap?null!==material.shadowSide?material.shadowSide:material.side:null!==material.shadowSide?material.shadowSide:shadowSide[material.side];object.clipShadows=material.clipShadows;object.clippingPlanes=material.clippingPlanes;object.clipIntersection=material.clipIntersection;object.wireframeLinewidth=material.wireframeLinewidth;object.linewidth=material.linewidth;!0===light.isPointLight&&!0===object.isMeshDistanceMaterial&&(object.referencePosition.setFromMatrixPosition(light.matrixWorld),
object.nearDistance=shadowCameraNear,object.farDistance=shadowCameraFar);return object}function renderObject(object,camera,shadowCamera,light,type){if(!1!==object.visible){if(object.layers.test(camera.layers)&&(object.isMesh||object.isLine||object.isPoints)&&(object.castShadow||object.receiveShadow&&type===VSMShadowMap)&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);var geometry=_objects.update(object),
material=object.material;if(Array.isArray(material))for(var groups=geometry.groups,k=0,kl=groups.length;k<kl;k++){var group=groups[k],groupMaterial=material[group.materialIndex];groupMaterial&&groupMaterial.visible&&(groupMaterial=getDepthMaterial(object,geometry,groupMaterial,light,shadowCamera.near,shadowCamera.far,type),_renderer.renderBufferDirect(shadowCamera,null,geometry,groupMaterial,object,group))}else material.visible&&(material=getDepthMaterial(object,geometry,material,light,shadowCamera.near,
shadowCamera.far,type),_renderer.renderBufferDirect(shadowCamera,null,geometry,material,object,null))}object=object.children;geometry=0;for(material=object.length;geometry<material;geometry++)renderObject(object[geometry],camera,shadowCamera,light,type)}}var _frustum=new Frustum,_shadowMapSize=new Vector2,_viewportSize=new Vector2,_viewport=new Vector4,_depthMaterials=[],_distanceMaterials=[],_materialCache={},shadowSide={0:BackSide,1:FrontSide,2:DoubleSide},shadowMaterialVertical=new ShaderMaterial({defines:{SAMPLE_RATE:.25,
HALF_SAMPLE_RATE:.125},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:vsm_vert,fragmentShader:vsm_frag}),shadowMaterialHorizonal=shadowMaterialVertical.clone();shadowMaterialHorizonal.defines.HORIZONAL_PASS=1;var fullScreenTri=new BufferGeometry;fullScreenTri.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var fullScreenMesh=new Mesh(fullScreenTri,shadowMaterialVertical),scope=this;this.enabled=!1;this.autoUpdate=
!0;this.needsUpdate=!1;this.type=PCFShadowMap;this.render=function(lights,scene,camera){if(!1!==scope.enabled&&(!1!==scope.autoUpdate||!1!==scope.needsUpdate)&&0!==lights.length){var currentRenderTarget=_renderer.getRenderTarget(),activeCubeFace=_renderer.getActiveCubeFace(),activeMipmapLevel=_renderer.getActiveMipmapLevel(),_state=_renderer.state;_state.setBlending(NoBlending);_state.buffers.color.setClear(1,1,1,1);_state.buffers.depth.setTest(!0);_state.setScissorTest(!1);for(var _i128=0,il=lights.length;_i128<
il;_i128++){var light=lights[_i128],shadow=light.shadow;if(!1!==shadow.autoUpdate||!1!==shadow.needsUpdate)if(void 0===shadow)console.warn("THREE.WebGLShadowMap:",light,"has no shadow.");else{_shadowMapSize.copy(shadow.mapSize);var shadowFrameExtents=shadow.getFrameExtents();_shadowMapSize.multiply(shadowFrameExtents);_viewportSize.copy(shadow.mapSize);if(_shadowMapSize.x>maxTextureSize||_shadowMapSize.y>maxTextureSize)_shadowMapSize.x>maxTextureSize&&(_viewportSize.x=Math.floor(maxTextureSize/shadowFrameExtents.x),
_shadowMapSize.x=_viewportSize.x*shadowFrameExtents.x,shadow.mapSize.x=_viewportSize.x),_shadowMapSize.y>maxTextureSize&&(_viewportSize.y=Math.floor(maxTextureSize/shadowFrameExtents.y),_shadowMapSize.y=_viewportSize.y*shadowFrameExtents.y,shadow.mapSize.y=_viewportSize.y);null!==shadow.map||shadow.isPointLightShadow||this.type!==VSMShadowMap||(shadowFrameExtents={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat},shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,shadowFrameExtents),
shadow.map.texture.name=light.name+".shadowMap",shadow.mapPass=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,shadowFrameExtents),shadow.camera.updateProjectionMatrix());null===shadow.map&&(shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,{minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat}),shadow.map.texture.name=light.name+".shadowMap",shadow.camera.updateProjectionMatrix());_renderer.setRenderTarget(shadow.map);_renderer.clear();shadowFrameExtents=shadow.getViewportCount();
for(var vp=0;vp<shadowFrameExtents;vp++){var viewport=shadow.getViewport(vp);_viewport.set(_viewportSize.x*viewport.x,_viewportSize.y*viewport.y,_viewportSize.x*viewport.z,_viewportSize.y*viewport.w);_state.viewport(_viewport);shadow.updateMatrices(light,vp);_frustum=shadow.getFrustum();renderObject(scene,camera,shadow.camera,light,this.type)}shadow.isPointLightShadow||this.type!==VSMShadowMap||(light=shadow,shadowFrameExtents=camera,vp=_objects.update(fullScreenMesh),shadowMaterialVertical.uniforms.shadow_pass.value=
light.map.texture,shadowMaterialVertical.uniforms.resolution.value=light.mapSize,shadowMaterialVertical.uniforms.radius.value=light.radius,_renderer.setRenderTarget(light.mapPass),_renderer.clear(),_renderer.renderBufferDirect(shadowFrameExtents,null,vp,shadowMaterialVertical,fullScreenMesh,null),shadowMaterialHorizonal.uniforms.shadow_pass.value=light.mapPass.texture,shadowMaterialHorizonal.uniforms.resolution.value=light.mapSize,shadowMaterialHorizonal.uniforms.radius.value=light.radius,_renderer.setRenderTarget(light.map),
_renderer.clear(),_renderer.renderBufferDirect(shadowFrameExtents,null,vp,shadowMaterialHorizonal,fullScreenMesh,null));shadow.needsUpdate=!1}}scope.needsUpdate=!1;_renderer.setRenderTarget(currentRenderTarget,activeCubeFace,activeMipmapLevel)}}}function WebGLState(gl,extensions,capabilities){function createTexture(type,target,count){var data=new Uint8Array(4),texture=gl.createTexture();gl.bindTexture(type,texture);gl.texParameteri(type,10241,9728);gl.texParameteri(type,10240,9728);for(type=0;type<
count;type++)gl.texImage2D(target+type,0,6408,1,1,0,6408,5121,data);return texture}function enable(id){!0!==enabledCapabilities[id]&&(gl.enable(id),enabledCapabilities[id]=!0)}function disable(id){!1!==enabledCapabilities[id]&&(gl.disable(id),enabledCapabilities[id]=!1)}function setBlending(blending,blendEquation,blendSrc,blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,premultipliedAlpha){if(blending===NoBlending)currentBlendingEnabled&&(disable(3042),currentBlendingEnabled=!1);else if(currentBlendingEnabled||
(enable(3042),currentBlendingEnabled=!0),blending!==CustomBlending){if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(currentBlendEquation!==AddEquation||currentBlendEquationAlpha!==AddEquation)gl.blendEquation(32774),currentBlendEquationAlpha=currentBlendEquation=AddEquation;if(premultipliedAlpha)switch(blending){case NormalBlending:gl.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:gl.blendFunc(1,1);break;case SubtractiveBlending:gl.blendFuncSeparate(0,
0,769,771);break;case MultiplyBlending:gl.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",blending)}else switch(blending){case NormalBlending:gl.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:gl.blendFunc(770,1);break;case SubtractiveBlending:gl.blendFunc(0,769);break;case MultiplyBlending:gl.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",blending)}currentBlendDstAlpha=currentBlendSrcAlpha=currentBlendDst=
currentBlendSrc=null;currentBlending=blending;currentPremultipledAlpha=premultipliedAlpha}}else{blendEquationAlpha=blendEquationAlpha||blendEquation;blendSrcAlpha=blendSrcAlpha||blendSrc;blendDstAlpha=blendDstAlpha||blendDst;if(blendEquation!==currentBlendEquation||blendEquationAlpha!==currentBlendEquationAlpha)gl.blendEquationSeparate(equationToGL[blendEquation],equationToGL[blendEquationAlpha]),currentBlendEquation=blendEquation,currentBlendEquationAlpha=blendEquationAlpha;if(blendSrc!==currentBlendSrc||
blendDst!==currentBlendDst||blendSrcAlpha!==currentBlendSrcAlpha||blendDstAlpha!==currentBlendDstAlpha)gl.blendFuncSeparate(factorToGL[blendSrc],factorToGL[blendDst],factorToGL[blendSrcAlpha],factorToGL[blendDstAlpha]),currentBlendSrc=blendSrc,currentBlendDst=blendDst,currentBlendSrcAlpha=blendSrcAlpha,currentBlendDstAlpha=blendDstAlpha;currentBlending=blending;currentPremultipledAlpha=null}}function setFlipSided(flipSided){currentFlipSided!==flipSided&&(flipSided?gl.frontFace(2304):gl.frontFace(2305),
currentFlipSided=flipSided)}function setCullFace(cullFace){cullFace!==CullFaceNone?(enable(2884),cullFace!==currentCullFace&&(cullFace===CullFaceBack?gl.cullFace(1029):cullFace===CullFaceFront?gl.cullFace(1028):gl.cullFace(1032))):disable(2884);currentCullFace=cullFace}function setPolygonOffset(polygonOffset,factor,units){if(polygonOffset){if(enable(32823),currentPolygonOffsetFactor!==factor||currentPolygonOffsetUnits!==units)gl.polygonOffset(factor,units),currentPolygonOffsetFactor=factor,currentPolygonOffsetUnits=
units}else disable(32823)}function activeTexture(webglSlot){void 0===webglSlot&&(webglSlot=33984+maxTextures-1);currentTextureSlot!==webglSlot&&(gl.activeTexture(webglSlot),currentTextureSlot=webglSlot)}var _equationToGL,_factorToGL;capabilities=capabilities.isWebGL2;var colorBuffer=new function(){var locked=!1,color=new Vector4,currentColorMask=null,currentColorClear=new Vector4(0,0,0,0);return{setMask:function(colorMask){currentColorMask===colorMask||locked||(gl.colorMask(colorMask,colorMask,colorMask,
colorMask),currentColorMask=colorMask)},setLocked:function(lock){locked=lock},setClear:function(r,g,b,a,premultipliedAlpha){!0===premultipliedAlpha&&(r*=a,g*=a,b*=a);color.set(r,g,b,a);!1===currentColorClear.equals(color)&&(gl.clearColor(r,g,b,a),currentColorClear.copy(color))},reset:function(){locked=!1;currentColorMask=null;currentColorClear.set(-1,0,0,0)}}},depthBuffer=new function(){var locked=!1,currentDepthMask=null,currentDepthFunc=null,currentDepthClear=null;return{setTest:function(depthTest){depthTest?
enable(2929):disable(2929)},setMask:function(depthMask){currentDepthMask===depthMask||locked||(gl.depthMask(depthMask),currentDepthMask=depthMask)},setFunc:function(depthFunc){if(currentDepthFunc!==depthFunc){if(depthFunc)switch(depthFunc){case NeverDepth:gl.depthFunc(512);break;case AlwaysDepth:gl.depthFunc(519);break;case LessDepth:gl.depthFunc(513);break;case LessEqualDepth:gl.depthFunc(515);break;case EqualDepth:gl.depthFunc(514);break;case GreaterEqualDepth:gl.depthFunc(518);break;case GreaterDepth:gl.depthFunc(516);
break;case NotEqualDepth:gl.depthFunc(517);break;default:gl.depthFunc(515)}else gl.depthFunc(515);currentDepthFunc=depthFunc}},setLocked:function(lock){locked=lock},setClear:function(depth){currentDepthClear!==depth&&(gl.clearDepth(depth),currentDepthClear=depth)},reset:function(){locked=!1;currentDepthClear=currentDepthFunc=currentDepthMask=null}}},stencilBuffer=new function(){var locked=!1,currentStencilMask=null,currentStencilFunc=null,currentStencilRef=null,currentStencilFuncMask=null,currentStencilFail=
null,currentStencilZFail=null,currentStencilZPass=null,currentStencilClear=null;return{setTest:function(stencilTest){locked||(stencilTest?enable(2960):disable(2960))},setMask:function(stencilMask){currentStencilMask===stencilMask||locked||(gl.stencilMask(stencilMask),currentStencilMask=stencilMask)},setFunc:function(stencilFunc,stencilRef,stencilMask){if(currentStencilFunc!==stencilFunc||currentStencilRef!==stencilRef||currentStencilFuncMask!==stencilMask)gl.stencilFunc(stencilFunc,stencilRef,stencilMask),
currentStencilFunc=stencilFunc,currentStencilRef=stencilRef,currentStencilFuncMask=stencilMask},setOp:function(stencilFail,stencilZFail,stencilZPass){if(currentStencilFail!==stencilFail||currentStencilZFail!==stencilZFail||currentStencilZPass!==stencilZPass)gl.stencilOp(stencilFail,stencilZFail,stencilZPass),currentStencilFail=stencilFail,currentStencilZFail=stencilZFail,currentStencilZPass=stencilZPass},setLocked:function(lock){locked=lock},setClear:function(stencil){currentStencilClear!==stencil&&
(gl.clearStencil(stencil),currentStencilClear=stencil)},reset:function(){locked=!1;currentStencilClear=currentStencilZPass=currentStencilZFail=currentStencilFail=currentStencilFuncMask=currentStencilRef=currentStencilFunc=currentStencilMask=null}}},enabledCapabilities={},currentProgram=null,currentBlendingEnabled=null,currentBlending=null,currentBlendEquation=null,currentBlendSrc=null,currentBlendDst=null,currentBlendEquationAlpha=null,currentBlendSrcAlpha=null,currentBlendDstAlpha=null,currentPremultipledAlpha=
!1,currentFlipSided=null,currentCullFace=null,currentLineWidth=null,currentPolygonOffsetFactor=null,currentPolygonOffsetUnits=null,maxTextures=gl.getParameter(35661),lineWidthAvailable=!1,version=0;version=gl.getParameter(7938);-1!==version.indexOf("WebGL")?(version=parseFloat(/^WebGL ([0-9])/.exec(version)[1]),lineWidthAvailable=1<=version):-1!==version.indexOf("OpenGL ES")&&(version=parseFloat(/^OpenGL ES ([0-9])/.exec(version)[1]),lineWidthAvailable=2<=version);var currentTextureSlot=null,currentBoundTextures=
{},currentScissor=new Vector4,currentViewport=new Vector4,emptyTextures={};emptyTextures[3553]=createTexture(3553,3553,1);emptyTextures[34067]=createTexture(34067,34069,6);colorBuffer.setClear(0,0,0,1);depthBuffer.setClear(1);stencilBuffer.setClear(0);enable(2929);depthBuffer.setFunc(LessEqualDepth);setFlipSided(!1);setCullFace(CullFaceBack);enable(2884);setBlending(NoBlending);var equationToGL=(_equationToGL={},_defineProperty(_equationToGL,AddEquation,32774),_defineProperty(_equationToGL,SubtractEquation,
32778),_defineProperty(_equationToGL,ReverseSubtractEquation,32779),_equationToGL);capabilities?(equationToGL[MinEquation]=32775,equationToGL[MaxEquation]=32776):(extensions=extensions.get("EXT_blend_minmax"),null!==extensions&&(equationToGL[MinEquation]=extensions.MIN_EXT,equationToGL[MaxEquation]=extensions.MAX_EXT));var factorToGL=(_factorToGL={},_defineProperty(_factorToGL,ZeroFactor,0),_defineProperty(_factorToGL,OneFactor,1),_defineProperty(_factorToGL,SrcColorFactor,768),_defineProperty(_factorToGL,
SrcAlphaFactor,770),_defineProperty(_factorToGL,SrcAlphaSaturateFactor,776),_defineProperty(_factorToGL,DstColorFactor,774),_defineProperty(_factorToGL,DstAlphaFactor,772),_defineProperty(_factorToGL,OneMinusSrcColorFactor,769),_defineProperty(_factorToGL,OneMinusSrcAlphaFactor,771),_defineProperty(_factorToGL,OneMinusDstColorFactor,775),_defineProperty(_factorToGL,OneMinusDstAlphaFactor,773),_factorToGL);return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},enable:enable,disable:disable,
useProgram:function(program){return currentProgram!==program?(gl.useProgram(program),currentProgram=program,!0):!1},setBlending:setBlending,setMaterial:function(material,frontFaceCW){material.side===DoubleSide?disable(2884):enable(2884);var flipSided=material.side===BackSide;frontFaceCW&&(flipSided=!flipSided);setFlipSided(flipSided);material.blending===NormalBlending&&!1===material.transparent?setBlending(NoBlending):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,
material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.premultipliedAlpha);depthBuffer.setFunc(material.depthFunc);depthBuffer.setTest(material.depthTest);depthBuffer.setMask(material.depthWrite);colorBuffer.setMask(material.colorWrite);frontFaceCW=material.stencilWrite;stencilBuffer.setTest(frontFaceCW);frontFaceCW&&(stencilBuffer.setMask(material.stencilWriteMask),stencilBuffer.setFunc(material.stencilFunc,material.stencilRef,material.stencilFuncMask),stencilBuffer.setOp(material.stencilFail,
material.stencilZFail,material.stencilZPass));setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits)},setFlipSided:setFlipSided,setCullFace:setCullFace,setLineWidth:function(width){width!==currentLineWidth&&(lineWidthAvailable&&gl.lineWidth(width),currentLineWidth=width)},setPolygonOffset:setPolygonOffset,setScissorTest:function(scissorTest){scissorTest?enable(3089):disable(3089)},activeTexture:activeTexture,bindTexture:function(webglType,webglTexture){null===
currentTextureSlot&&activeTexture();var boundTexture=currentBoundTextures[currentTextureSlot];void 0===boundTexture&&(boundTexture={type:void 0,texture:void 0},currentBoundTextures[currentTextureSlot]=boundTexture);if(boundTexture.type!==webglType||boundTexture.texture!==webglTexture)gl.bindTexture(webglType,webglTexture||emptyTextures[webglType]),boundTexture.type=webglType,boundTexture.texture=webglTexture},unbindTexture:function(){var boundTexture=currentBoundTextures[currentTextureSlot];void 0!==
boundTexture&&void 0!==boundTexture.type&&(gl.bindTexture(boundTexture.type,null),boundTexture.type=void 0,boundTexture.texture=void 0)},compressedTexImage2D:function(){try{gl.compressedTexImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texImage2D:function(){try{gl.texImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texImage3D:function(){try{gl.texImage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},
scissor:function(scissor){!1===currentScissor.equals(scissor)&&(gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w),currentScissor.copy(scissor))},viewport:function(viewport){!1===currentViewport.equals(viewport)&&(gl.viewport(viewport.x,viewport.y,viewport.z,viewport.w),currentViewport.copy(viewport))},reset:function(){enabledCapabilities={};currentTextureSlot=null;currentBoundTextures={};currentCullFace=currentFlipSided=currentBlending=currentProgram=null;colorBuffer.reset();depthBuffer.reset();
stencilBuffer.reset()}}}function WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info){function createCanvas(width,height){return useOffscreenCanvas?new OffscreenCanvas(width,height):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function resizeImage(image,needsPowerOfTwo,needsNewCanvas,maxSize){var scale=1;if(image.width>maxSize||image.height>maxSize)scale=maxSize/Math.max(image.width,image.height);if(1>scale||!0===needsPowerOfTwo){if("undefined"!==typeof HTMLImageElement&&
image instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&image instanceof ImageBitmap)return maxSize=needsPowerOfTwo?MathUtils.floorPowerOfTwo:Math.floor,needsPowerOfTwo=maxSize(scale*image.width),scale=maxSize(scale*image.height),void 0===_canvas&&(_canvas=createCanvas(needsPowerOfTwo,scale)),needsNewCanvas=needsNewCanvas?createCanvas(needsPowerOfTwo,scale):_canvas,needsNewCanvas.width=needsPowerOfTwo,needsNewCanvas.height=
scale,needsNewCanvas.getContext("2d").drawImage(image,0,0,needsPowerOfTwo,scale),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+image.width+"x"+image.height+") to ("+needsPowerOfTwo+"x"+scale+")."),needsNewCanvas;"data"in image&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+image.width+"x"+image.height+").")}return image}function isPowerOfTwo(image){return MathUtils.isPowerOfTwo(image.width)&&MathUtils.isPowerOfTwo(image.height)}function textureNeedsGenerateMipmaps(texture,
supportsMips){return texture.generateMipmaps&&supportsMips&&texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter}function generateMipmap(target,texture,width,height){_gl.generateMipmap(target);properties.get(texture).__maxMipLevel=Math.log(Math.max(width,height))*Math.LOG2E}function getInternalFormat(internalFormatName,glFormat,glType){if(!1===isWebGL2)return glFormat;if(null!==internalFormatName){if(void 0!==_gl[internalFormatName])return _gl[internalFormatName];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+
internalFormatName+"'")}internalFormatName=glFormat;6403===glFormat&&(5126===glType&&(internalFormatName=33326),5131===glType&&(internalFormatName=33325),5121===glType&&(internalFormatName=33321));6407===glFormat&&(5126===glType&&(internalFormatName=34837),5131===glType&&(internalFormatName=34843),5121===glType&&(internalFormatName=32849));6408===glFormat&&(5126===glType&&(internalFormatName=34836),5131===glType&&(internalFormatName=34842),5121===glType&&(internalFormatName=32856));33325!==internalFormatName&&
33326!==internalFormatName&&34842!==internalFormatName&&34836!==internalFormatName||extensions.get("EXT_color_buffer_float");return internalFormatName}function filterFallback(f){return f===NearestFilter||f===NearestMipmapNearestFilter||f===NearestMipmapLinearFilter?9728:9729}function onTextureDispose(event){event=event.target;event.removeEventListener("dispose",onTextureDispose);var textureProperties=properties.get(event);void 0!==textureProperties.__webglInit&&(_gl.deleteTexture(textureProperties.__webglTexture),
properties.remove(event));if(event.isVideoTexture)_videoTextures["delete"](event);info.memory.textures--}function onRenderTargetDispose(event){event=event.target;event.removeEventListener("dispose",onRenderTargetDispose);var renderTargetProperties=properties.get(event),textureProperties=properties.get(event.texture);if(event){void 0!==textureProperties.__webglTexture&&_gl.deleteTexture(textureProperties.__webglTexture);event.depthTexture&&event.depthTexture.dispose();if(event.isWebGLCubeRenderTarget)for(textureProperties=
0;6>textureProperties;textureProperties++)_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[textureProperties]),renderTargetProperties.__webglDepthbuffer&&_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[textureProperties]);else _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer),renderTargetProperties.__webglDepthbuffer&&_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer),renderTargetProperties.__webglMultisampledFramebuffer&&_gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer),
renderTargetProperties.__webglColorRenderbuffer&&_gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer),renderTargetProperties.__webglDepthRenderbuffer&&_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);properties.remove(event.texture);properties.remove(event)}info.memory.textures--}function setTexture2D(texture,slot){var textureProperties=properties.get(texture);if(texture.isVideoTexture){var frame=info.render.frame;_videoTextures.get(texture)!==frame&&(_videoTextures.set(texture,
frame),texture.update())}if(0<texture.version&&textureProperties.__version!==texture.version)if(frame=texture.image,void 0===frame)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===frame.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{uploadTexture(textureProperties,texture,slot);return}state.activeTexture(33984+slot);state.bindTexture(3553,textureProperties.__webglTexture)}function setTextureCube(texture,
slot){if(6===texture.image.length){var textureProperties=properties.get(texture);if(0<texture.version&&textureProperties.__version!==texture.version){initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);var isCompressed=texture&&(texture.isCompressedTexture||texture.image[0].isCompressedTexture),isDataTexture=texture.image[0]&&texture.image[0].isDataTexture;slot=[];for(var _i132=0;6>_i132;_i132++)slot[_i132]=
isCompressed||isDataTexture?isDataTexture?texture.image[_i132].image:texture.image[_i132]:resizeImage(texture.image[_i132],!1,!0,maxCubemapSize);_i132=slot[0];var supportsMips=isPowerOfTwo(_i132)||isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(34067,texture,supportsMips);if(isCompressed){for(isDataTexture=0;6>isDataTexture;isDataTexture++){var mipmaps=slot[isDataTexture].mipmaps;
for(isCompressed=0;isCompressed<mipmaps.length;isCompressed++){var mipmap=mipmaps[isCompressed];texture.format!==RGBAFormat&&texture.format!==RGBFormat?null!==glFormat?state.compressedTexImage2D(34069+isDataTexture,isCompressed,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):state.texImage2D(34069+isDataTexture,isCompressed,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,
glType,mipmap.data)}}textureProperties.__maxMipLevel=mipmaps.length-1}else{mipmaps=texture.mipmaps;for(isCompressed=0;6>isCompressed;isCompressed++)if(isDataTexture)for(state.texImage2D(34069+isCompressed,0,glInternalFormat,slot[isCompressed].width,slot[isCompressed].height,0,glFormat,glType,slot[isCompressed].data),mipmap=0;mipmap<mipmaps.length;mipmap++){var mipmapImage=mipmaps[mipmap].image[isCompressed].image;state.texImage2D(34069+isCompressed,mipmap+1,glInternalFormat,mipmapImage.width,mipmapImage.height,
0,glFormat,glType,mipmapImage.data)}else for(state.texImage2D(34069+isCompressed,0,glInternalFormat,glFormat,glType,slot[isCompressed]),mipmap=0;mipmap<mipmaps.length;mipmap++)state.texImage2D(34069+isCompressed,mipmap+1,glInternalFormat,glFormat,glType,mipmaps[mipmap].image[isCompressed]);textureProperties.__maxMipLevel=mipmaps.length}textureNeedsGenerateMipmaps(texture,supportsMips)&&generateMipmap(34067,texture,_i132.width,_i132.height);textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture)}else state.activeTexture(33984+
slot),state.bindTexture(34067,textureProperties.__webglTexture)}}function setTextureCubeDynamic(texture,slot){state.activeTexture(33984+slot);state.bindTexture(34067,properties.get(texture).__webglTexture)}function setTextureParameters(textureType,texture,supportsMips){supportsMips?(_gl.texParameteri(textureType,10242,wrappingToGL[texture.wrapS]),_gl.texParameteri(textureType,10243,wrappingToGL[texture.wrapT]),32879!==textureType&&35866!==textureType||_gl.texParameteri(textureType,32882,wrappingToGL[texture.wrapR]),
_gl.texParameteri(textureType,10240,filterToGL[texture.magFilter]),_gl.texParameteri(textureType,10241,filterToGL[texture.minFilter])):(_gl.texParameteri(textureType,10242,33071),_gl.texParameteri(textureType,10243,33071),32879!==textureType&&35866!==textureType||_gl.texParameteri(textureType,32882,33071),texture.wrapS===ClampToEdgeWrapping&&texture.wrapT===ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),
_gl.texParameteri(textureType,10240,filterFallback(texture.magFilter)),_gl.texParameteri(textureType,10241,filterFallback(texture.minFilter)),texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));!(supportsMips=extensions.get("EXT_texture_filter_anisotropic"))||texture.type===FloatType&&null===extensions.get("OES_texture_float_linear")||texture.type===
HalfFloatType&&null===(isWebGL2||extensions.get("OES_texture_half_float_linear"))||!(1<texture.anisotropy||properties.get(texture).__currentAnisotropy)||(_gl.texParameterf(textureType,supportsMips.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,capabilities.getMaxAnisotropy())),properties.get(texture).__currentAnisotropy=texture.anisotropy)}function initTexture(textureProperties,texture){void 0===textureProperties.__webglInit&&(textureProperties.__webglInit=!0,texture.addEventListener("dispose",
onTextureDispose),textureProperties.__webglTexture=_gl.createTexture(),info.memory.textures++)}function uploadTexture(textureProperties,texture,slot){var textureType=3553;texture.isDataTexture2DArray&&(textureType=35866);texture.isDataTexture3D&&(textureType=32879);initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(textureType,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,
texture.unpackAlignment);slot=isWebGL2?!1:texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping||texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;slot=slot&&!1===isPowerOfTwo(texture.image);slot=resizeImage(texture.image,slot,!1,maxTextureSize);var supportsMips=isPowerOfTwo(slot)||isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(textureType,
texture,supportsMips);var mipmaps=texture.mipmaps;if(texture.isDepthTexture)glInternalFormat=6402,isWebGL2?glInternalFormat=texture.type===FloatType?36012:texture.type===UnsignedIntType?33190:texture.type===UnsignedInt248Type?35056:33189:texture.type===FloatType&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),texture.format===DepthFormat&&6402===glInternalFormat&&texture.type!==UnsignedShortType&&texture.type!==UnsignedIntType&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),
texture.type=UnsignedShortType,glType=utils.convert(texture.type)),texture.format===DepthStencilFormat&&6402===glInternalFormat&&(glInternalFormat=34041,texture.type!==UnsignedInt248Type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),texture.type=UnsignedInt248Type,glType=utils.convert(texture.type))),state.texImage2D(3553,0,glInternalFormat,slot.width,slot.height,0,glFormat,glType,null);else if(texture.isDataTexture)if(0<mipmaps.length&&supportsMips){for(var _i135=
0,il=mipmaps.length;_i135<il;_i135++){var mipmap=mipmaps[_i135];state.texImage2D(3553,_i135,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data)}texture.generateMipmaps=!1;textureProperties.__maxMipLevel=mipmaps.length-1}else state.texImage2D(3553,0,glInternalFormat,slot.width,slot.height,0,glFormat,glType,slot.data),textureProperties.__maxMipLevel=0;else if(texture.isCompressedTexture){_i135=0;for(il=mipmaps.length;_i135<il;_i135++)mipmap=mipmaps[_i135],texture.format!==RGBAFormat&&
texture.format!==RGBFormat?null!==glFormat?state.compressedTexImage2D(3553,_i135,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):state.texImage2D(3553,_i135,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);textureProperties.__maxMipLevel=mipmaps.length-1}else if(texture.isDataTexture2DArray)state.texImage3D(35866,0,glInternalFormat,slot.width,slot.height,
slot.depth,0,glFormat,glType,slot.data),textureProperties.__maxMipLevel=0;else if(texture.isDataTexture3D)state.texImage3D(32879,0,glInternalFormat,slot.width,slot.height,slot.depth,0,glFormat,glType,slot.data),textureProperties.__maxMipLevel=0;else if(0<mipmaps.length&&supportsMips){_i135=0;for(il=mipmaps.length;_i135<il;_i135++)mipmap=mipmaps[_i135],state.texImage2D(3553,_i135,glInternalFormat,glFormat,glType,mipmap);texture.generateMipmaps=!1;textureProperties.__maxMipLevel=mipmaps.length-1}else state.texImage2D(3553,
0,glInternalFormat,glFormat,glType,slot),textureProperties.__maxMipLevel=0;textureNeedsGenerateMipmaps(texture,supportsMips)&&generateMipmap(textureType,texture,slot.width,slot.height);textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture)}function setupFrameBufferTexture(framebuffer,renderTarget,attachment,textureTarget){var glFormat=utils.convert(renderTarget.texture.format),glType=utils.convert(renderTarget.texture.type),glInternalFormat=getInternalFormat(renderTarget.texture.internalFormat,
glFormat,glType);state.texImage2D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);_gl.bindFramebuffer(36160,framebuffer);_gl.framebufferTexture2D(36160,attachment,textureTarget,properties.get(renderTarget.texture).__webglTexture,0);_gl.bindFramebuffer(36160,null)}function setupRenderBufferStorage(renderbuffer,renderTarget,isMultisample){_gl.bindRenderbuffer(36161,renderbuffer);if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){var glInternalFormat=
33189;isMultisample?((isMultisample=renderTarget.depthTexture)&&isMultisample.isDepthTexture&&(isMultisample.type===FloatType?glInternalFormat=36012:isMultisample.type===UnsignedIntType&&(glInternalFormat=33190)),isMultisample=getRenderTargetSamples(renderTarget),_gl.renderbufferStorageMultisample(36161,isMultisample,glInternalFormat,renderTarget.width,renderTarget.height)):_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);_gl.framebufferRenderbuffer(36160,36096,
36161,renderbuffer)}else renderTarget.depthBuffer&&renderTarget.stencilBuffer?(isMultisample?(isMultisample=getRenderTargetSamples(renderTarget),_gl.renderbufferStorageMultisample(36161,isMultisample,35056,renderTarget.width,renderTarget.height)):_gl.renderbufferStorage(36161,34041,renderTarget.width,renderTarget.height),_gl.framebufferRenderbuffer(36160,33306,36161,renderbuffer)):(renderbuffer=utils.convert(renderTarget.texture.format),glInternalFormat=utils.convert(renderTarget.texture.type),renderbuffer=
getInternalFormat(renderTarget.texture.internalFormat,renderbuffer,glInternalFormat),isMultisample?(isMultisample=getRenderTargetSamples(renderTarget),_gl.renderbufferStorageMultisample(36161,isMultisample,renderbuffer,renderTarget.width,renderTarget.height)):_gl.renderbufferStorage(36161,renderbuffer,renderTarget.width,renderTarget.height));_gl.bindRenderbuffer(36161,null)}function getRenderTargetSamples(renderTarget){return isWebGL2&&renderTarget.isWebGLMultisampleRenderTarget?Math.min(maxSamples,
renderTarget.samples):0}var _wrappingToGL,_filterToGL,isWebGL2=capabilities.isWebGL2,maxTextures=capabilities.maxTextures,maxCubemapSize=capabilities.maxCubemapSize,maxTextureSize=capabilities.maxTextureSize,maxSamples=capabilities.maxSamples,_videoTextures=new WeakMap,_canvas,useOffscreenCanvas=!1;try{useOffscreenCanvas="undefined"!==typeof OffscreenCanvas&&null!==(new OffscreenCanvas(1,1)).getContext("2d")}catch(err){}var textureUnits=0,wrappingToGL=(_wrappingToGL={},_defineProperty(_wrappingToGL,
RepeatWrapping,10497),_defineProperty(_wrappingToGL,ClampToEdgeWrapping,33071),_defineProperty(_wrappingToGL,MirroredRepeatWrapping,33648),_wrappingToGL),filterToGL=(_filterToGL={},_defineProperty(_filterToGL,NearestFilter,9728),_defineProperty(_filterToGL,NearestMipmapNearestFilter,9984),_defineProperty(_filterToGL,NearestMipmapLinearFilter,9986),_defineProperty(_filterToGL,LinearFilter,9729),_defineProperty(_filterToGL,LinearMipmapNearestFilter,9985),_defineProperty(_filterToGL,LinearMipmapLinearFilter,
9987),_filterToGL),warnedTexture2D=!1,warnedTextureCube=!1;this.allocateTextureUnit=function(){var textureUnit=textureUnits;textureUnit>=maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+textureUnit+" texture units while this GPU supports only "+maxTextures);textureUnits+=1;return textureUnit};this.resetTextureUnits=function(){textureUnits=0};this.setTexture2D=setTexture2D;this.setTexture2DArray=function(texture,slot){var textureProperties=properties.get(texture);0<texture.version&&
textureProperties.__version!==texture.version?uploadTexture(textureProperties,texture,slot):(state.activeTexture(33984+slot),state.bindTexture(35866,textureProperties.__webglTexture))};this.setTexture3D=function(texture,slot){var textureProperties=properties.get(texture);0<texture.version&&textureProperties.__version!==texture.version?uploadTexture(textureProperties,texture,slot):(state.activeTexture(33984+slot),state.bindTexture(32879,textureProperties.__webglTexture))};this.setTextureCube=setTextureCube;
this.setTextureCubeDynamic=setTextureCubeDynamic;this.setupRenderTarget=function(renderTarget){var renderTargetProperties=properties.get(renderTarget),textureProperties=properties.get(renderTarget.texture);renderTarget.addEventListener("dispose",onRenderTargetDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;var isCube=!0===renderTarget.isWebGLCubeRenderTarget,isMultisample=!0===renderTarget.isWebGLMultisampleRenderTarget,supportsMips=isPowerOfTwo(renderTarget)||
isWebGL2;!isWebGL2||renderTarget.texture.format!==RGBFormat||renderTarget.texture.type!==FloatType&&renderTarget.texture.type!==HalfFloatType||(renderTarget.texture.format=RGBAFormat,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead."));if(isCube)for(renderTargetProperties.__webglFramebuffer=[],isMultisample=0;6>isMultisample;isMultisample++)renderTargetProperties.__webglFramebuffer[isMultisample]=_gl.createFramebuffer();else if(renderTargetProperties.__webglFramebuffer=
_gl.createFramebuffer(),isMultisample)if(isWebGL2){renderTargetProperties.__webglMultisampledFramebuffer=_gl.createFramebuffer();renderTargetProperties.__webglColorRenderbuffer=_gl.createRenderbuffer();_gl.bindRenderbuffer(36161,renderTargetProperties.__webglColorRenderbuffer);isMultisample=utils.convert(renderTarget.texture.format);var glType=utils.convert(renderTarget.texture.type);isMultisample=getInternalFormat(renderTarget.texture.internalFormat,isMultisample,glType);glType=getRenderTargetSamples(renderTarget);
_gl.renderbufferStorageMultisample(36161,glType,isMultisample,renderTarget.width,renderTarget.height);_gl.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);_gl.framebufferRenderbuffer(36160,36064,36161,renderTargetProperties.__webglColorRenderbuffer);_gl.bindRenderbuffer(36161,null);renderTarget.depthBuffer&&(renderTargetProperties.__webglDepthRenderbuffer=_gl.createRenderbuffer(),setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer,renderTarget,!0));
_gl.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(isCube){state.bindTexture(34067,textureProperties.__webglTexture);setTextureParameters(34067,renderTarget.texture,supportsMips);for(textureProperties=0;6>textureProperties;textureProperties++)setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[textureProperties],renderTarget,36064,34069+textureProperties);textureNeedsGenerateMipmaps(renderTarget.texture,
supportsMips)&&generateMipmap(34067,renderTarget.texture,renderTarget.width,renderTarget.height);state.bindTexture(34067,null)}else state.bindTexture(3553,textureProperties.__webglTexture),setTextureParameters(3553,renderTarget.texture,supportsMips),setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,36064,3553),textureNeedsGenerateMipmaps(renderTarget.texture,supportsMips)&&generateMipmap(3553,renderTarget.texture,renderTarget.width,renderTarget.height),state.bindTexture(3553,
null);if(renderTarget.depthBuffer){renderTargetProperties=properties.get(renderTarget);supportsMips=!0===renderTarget.isWebGLCubeRenderTarget;if(renderTarget.depthTexture){if(supportsMips)throw Error("target.depthTexture not supported in Cube render targets");if(renderTarget&&renderTarget.isWebGLCubeRenderTarget)throw Error("Depth Texture with cube render targets is not supported");_gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer);if(!renderTarget.depthTexture||!renderTarget.depthTexture.isDepthTexture)throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
properties.get(renderTarget.depthTexture).__webglTexture&&renderTarget.depthTexture.image.width===renderTarget.width&&renderTarget.depthTexture.image.height===renderTarget.height||(renderTarget.depthTexture.image.width=renderTarget.width,renderTarget.depthTexture.image.height=renderTarget.height,renderTarget.depthTexture.needsUpdate=!0);setTexture2D(renderTarget.depthTexture,0);renderTargetProperties=properties.get(renderTarget.depthTexture).__webglTexture;if(renderTarget.depthTexture.format===DepthFormat)_gl.framebufferTexture2D(36160,
36096,3553,renderTargetProperties,0);else if(renderTarget.depthTexture.format===DepthStencilFormat)_gl.framebufferTexture2D(36160,33306,3553,renderTargetProperties,0);else throw Error("Unknown depthTexture format");}else if(supportsMips)for(renderTargetProperties.__webglDepthbuffer=[],supportsMips=0;6>supportsMips;supportsMips++)_gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer[supportsMips]),renderTargetProperties.__webglDepthbuffer[supportsMips]=_gl.createRenderbuffer(),setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[supportsMips],
renderTarget,!1);else _gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer),renderTargetProperties.__webglDepthbuffer=_gl.createRenderbuffer(),setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer,renderTarget,!1);_gl.bindFramebuffer(36160,null)}};this.updateRenderTargetMipmap=function(renderTarget){var texture=renderTarget.texture,supportsMips=isPowerOfTwo(renderTarget)||isWebGL2;if(textureNeedsGenerateMipmaps(texture,supportsMips)){supportsMips=renderTarget.isWebGLCubeRenderTarget?
34067:3553;var webglTexture=properties.get(texture).__webglTexture;state.bindTexture(supportsMips,webglTexture);generateMipmap(supportsMips,texture,renderTarget.width,renderTarget.height);state.bindTexture(supportsMips,null)}};this.updateMultisampleRenderTarget=function(renderTarget){if(renderTarget.isWebGLMultisampleRenderTarget)if(isWebGL2){var renderTargetProperties=properties.get(renderTarget);_gl.bindFramebuffer(36008,renderTargetProperties.__webglMultisampledFramebuffer);_gl.bindFramebuffer(36009,
renderTargetProperties.__webglFramebuffer);var width=renderTarget.width,height=renderTarget.height,mask=16384;renderTarget.depthBuffer&&(mask|=256);renderTarget.stencilBuffer&&(mask|=1024);_gl.blitFramebuffer(0,0,width,height,0,0,width,height,mask,9728);_gl.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")};this.safeSetTexture2D=function(texture,slot){texture&&texture.isWebGLRenderTarget&&
(!1===warnedTexture2D&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),warnedTexture2D=!0),texture=texture.texture);setTexture2D(texture,slot)};this.safeSetTextureCube=function(texture,slot){texture&&texture.isWebGLCubeRenderTarget&&(!1===warnedTextureCube&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),warnedTextureCube=!0),texture=
texture.texture);texture&&texture.isCubeTexture||Array.isArray(texture.image)&&6===texture.image.length?setTextureCube(texture,slot):setTextureCubeDynamic(texture,slot)}}function WebGLUtils(gl,extensions,capabilities){var isWebGL2=capabilities.isWebGL2;return{convert:function(p){if(p===UnsignedByteType)return 5121;if(p===UnsignedShort4444Type)return 32819;if(p===UnsignedShort5551Type)return 32820;if(p===UnsignedShort565Type)return 33635;if(p===ByteType)return 5120;if(p===ShortType)return 5122;if(p===
UnsignedShortType)return 5123;if(p===IntType)return 5124;if(p===UnsignedIntType)return 5125;if(p===FloatType)return 5126;if(p===HalfFloatType){if(isWebGL2)return 5131;var extension=extensions.get("OES_texture_half_float");return null!==extension?extension.HALF_FLOAT_OES:null}if(p===AlphaFormat)return 6406;if(p===RGBFormat)return 6407;if(p===RGBAFormat)return 6408;if(p===LuminanceFormat)return 6409;if(p===LuminanceAlphaFormat)return 6410;if(p===DepthFormat)return 6402;if(p===DepthStencilFormat)return 34041;
if(p===RedFormat)return 6403;if(p===RedIntegerFormat)return 36244;if(p===RGFormat)return 33319;if(p===RGIntegerFormat)return 33320;if(p===RGBIntegerFormat)return 36248;if(p===RGBAIntegerFormat)return 36249;if(p===RGB_S3TC_DXT1_Format||p===RGBA_S3TC_DXT1_Format||p===RGBA_S3TC_DXT3_Format||p===RGBA_S3TC_DXT5_Format)if(extension=extensions.get("WEBGL_compressed_texture_s3tc"),null!==extension){if(p===RGB_S3TC_DXT1_Format)return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT1_Format)return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;
if(p===RGBA_S3TC_DXT3_Format)return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===RGBA_S3TC_DXT5_Format)return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(p===RGB_PVRTC_4BPPV1_Format||p===RGB_PVRTC_2BPPV1_Format||p===RGBA_PVRTC_4BPPV1_Format||p===RGBA_PVRTC_2BPPV1_Format)if(extension=extensions.get("WEBGL_compressed_texture_pvrtc"),null!==extension){if(p===RGB_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===RGB_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
if(p===RGBA_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===RGBA_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(p===RGB_ETC1_Format)return extension=extensions.get("WEBGL_compressed_texture_etc1"),null!==extension?extension.COMPRESSED_RGB_ETC1_WEBGL:null;if(p===RGB_ETC2_Format||p===RGBA_ETC2_EAC_Format)if(extension=extensions.get("WEBGL_compressed_texture_etc"),null!==extension){if(p===RGB_ETC2_Format)return extension.COMPRESSED_RGB8_ETC2;
if(p===RGBA_ETC2_EAC_Format)return extension.COMPRESSED_RGBA8_ETC2_EAC}if(p===RGBA_ASTC_4x4_Format||p===RGBA_ASTC_5x4_Format||p===RGBA_ASTC_5x5_Format||p===RGBA_ASTC_6x5_Format||p===RGBA_ASTC_6x6_Format||p===RGBA_ASTC_8x5_Format||p===RGBA_ASTC_8x6_Format||p===RGBA_ASTC_8x8_Format||p===RGBA_ASTC_10x5_Format||p===RGBA_ASTC_10x6_Format||p===RGBA_ASTC_10x8_Format||p===RGBA_ASTC_10x10_Format||p===RGBA_ASTC_12x10_Format||p===RGBA_ASTC_12x12_Format||p===SRGB8_ALPHA8_ASTC_4x4_Format||p===SRGB8_ALPHA8_ASTC_5x4_Format||
p===SRGB8_ALPHA8_ASTC_5x5_Format||p===SRGB8_ALPHA8_ASTC_6x5_Format||p===SRGB8_ALPHA8_ASTC_6x6_Format||p===SRGB8_ALPHA8_ASTC_8x5_Format||p===SRGB8_ALPHA8_ASTC_8x6_Format||p===SRGB8_ALPHA8_ASTC_8x8_Format||p===SRGB8_ALPHA8_ASTC_10x5_Format||p===SRGB8_ALPHA8_ASTC_10x6_Format||p===SRGB8_ALPHA8_ASTC_10x8_Format||p===SRGB8_ALPHA8_ASTC_10x10_Format||p===SRGB8_ALPHA8_ASTC_12x10_Format||p===SRGB8_ALPHA8_ASTC_12x12_Format)return extension=extensions.get("WEBGL_compressed_texture_astc"),null!==extension?p:null;
if(p===RGBA_BPTC_Format)return extension=extensions.get("EXT_texture_compression_bptc"),null!==extension?p:null;if(p===UnsignedInt248Type){if(isWebGL2)return 34042;extension=extensions.get("WEBGL_depth_texture");return null!==extension?extension.UNSIGNED_INT_24_8_WEBGL:null}}}}function ArrayCamera(array){PerspectiveCamera.call(this);this.cameras=array||[]}function Group(){Object3D.call(this);this.type="Group"}function WebXRController(){this._grip=this._targetRay=null}function WebXRManager(renderer,
gl){function onSessionEvent(event){var controller=inputSourcesMap.get(event.inputSource);controller&&controller.dispatchEvent({type:event.type})}function onSessionEnd(){inputSourcesMap.forEach(function(controller,inputSource){controller.disconnect(inputSource)});inputSourcesMap.clear();renderer.setFramebuffer(null);renderer.setRenderTarget(renderer.getRenderTarget());animation.stop();scope.isPresenting=!1;scope.dispatchEvent({type:"sessionend"})}function onRequestReferenceSpace(value){referenceSpace=
value;animation.setContext(session);animation.start();scope.isPresenting=!0;scope.dispatchEvent({type:"sessionstart"})}function updateInputSources(event){for(var inputSources=session.inputSources,_i141=0;_i141<controllers.length;_i141++)inputSourcesMap.set(inputSources[_i141],controllers[_i141]);for(inputSources=0;inputSources<event.removed.length;inputSources++){_i141=event.removed[inputSources];var controller=inputSourcesMap.get(_i141);controller&&(controller.dispatchEvent({type:"disconnected",
data:_i141}),inputSourcesMap["delete"](_i141))}for(inputSources=0;inputSources<event.added.length;inputSources++)_i141=event.added[inputSources],(controller=inputSourcesMap.get(_i141))&&controller.dispatchEvent({type:"connected",data:_i141})}function updateCamera(camera,parent){null===parent?camera.matrixWorld.copy(camera.matrix):camera.matrixWorld.multiplyMatrices(parent.matrixWorld,camera.matrix);camera.matrixWorldInverse.getInverse(camera.matrixWorld)}var scope=this,session=null,framebufferScaleFactor=
1,referenceSpace=null,referenceSpaceType="local-floor",pose=null,controllers=[],inputSourcesMap=new Map,cameraL=new PerspectiveCamera;cameraL.layers.enable(1);cameraL.viewport=new Vector4;var cameraR=new PerspectiveCamera;cameraR.layers.enable(2);cameraR.viewport=new Vector4;var cameras$jscomp$0=[cameraL,cameraR],cameraVR=new ArrayCamera;cameraVR.layers.enable(1);cameraVR.layers.enable(2);var _currentDepthNear=null,_currentDepthFar=null;this.isPresenting=this.enabled=!1;this.getController=function(index){var controller=
controllers[index];void 0===controller&&(controller=new WebXRController,controllers[index]=controller);return controller.getTargetRaySpace()};this.getControllerGrip=function(index){var controller=controllers[index];void 0===controller&&(controller=new WebXRController,controllers[index]=controller);return controller.getGripSpace()};this.setFramebufferScaleFactor=function(value){framebufferScaleFactor=value;!0===scope.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")};
this.setReferenceSpaceType=function(value){referenceSpaceType=value;!0===scope.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")};this.getReferenceSpace=function(){return referenceSpace};this.getSession=function(){return session};this.setSession=function(value){session=value;null!==session&&(session.addEventListener("select",onSessionEvent),session.addEventListener("selectstart",onSessionEvent),session.addEventListener("selectend",onSessionEvent),
session.addEventListener("squeeze",onSessionEvent),session.addEventListener("squeezestart",onSessionEvent),session.addEventListener("squeezeend",onSessionEvent),session.addEventListener("end",onSessionEnd),value=gl.getContextAttributes(),!0!==value.xrCompatible&&gl.makeXRCompatible(),value=new XRWebGLLayer(session,gl,{antialias:value.antialias,alpha:value.alpha,depth:value.depth,stencil:value.stencil,framebufferScaleFactor:framebufferScaleFactor}),session.updateRenderState({baseLayer:value}),session.requestReferenceSpace(referenceSpaceType).then(onRequestReferenceSpace),
session.addEventListener("inputsourceschange",updateInputSources))};var cameraLPos=new Vector3,cameraRPos=new Vector3;this.getCamera=function(camera){cameraVR.near=cameraR.near=cameraL.near=camera.near;cameraVR.far=cameraR.far=cameraL.far=camera.far;if(_currentDepthNear!==cameraVR.near||_currentDepthFar!==cameraVR.far)session.updateRenderState({depthNear:cameraVR.near,depthFar:cameraVR.far}),_currentDepthNear=cameraVR.near,_currentDepthFar=cameraVR.far;var parent=camera.parent,cameras=cameraVR.cameras;
updateCamera(cameraVR,parent);for(var _i144=0;_i144<cameras.length;_i144++)updateCamera(cameras[_i144],parent);camera.matrixWorld.copy(cameraVR.matrixWorld);camera=camera.children;parent=0;for(_i144=camera.length;parent<_i144;parent++)camera[parent].updateMatrixWorld(!0);if(2===cameras.length){cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);cameras=cameraLPos.distanceTo(cameraRPos);var projL=cameraL.projectionMatrix.elements,projR=cameraR.projectionMatrix.elements,
near=projL[14]/(projL[10]-1);camera=projL[14]/(projL[10]+1);parent=(projL[9]+1)/projL[5];_i144=(projL[9]-1)/projL[5];var leftFov=(projL[8]-1)/projL[0],rightFov=(projR[8]+1)/projR[0];projR=near*leftFov;projL=near*rightFov;rightFov=cameras/(-leftFov+rightFov);leftFov=rightFov*-leftFov;cameraL.matrixWorld.decompose(cameraVR.position,cameraVR.quaternion,cameraVR.scale);cameraVR.translateX(leftFov);cameraVR.translateZ(rightFov);cameraVR.matrixWorld.compose(cameraVR.position,cameraVR.quaternion,cameraVR.scale);
cameraVR.matrixWorldInverse.getInverse(cameraVR.matrixWorld);near+=rightFov;rightFov=camera+rightFov;cameraVR.projectionMatrix.makePerspective(projR-leftFov,projL+(cameras-leftFov),parent*camera/rightFov*near,_i144*camera/rightFov*near,near,rightFov)}else cameraVR.projectionMatrix.copy(cameraL.projectionMatrix);return cameraVR};var onAnimationFrameCallback=null,animation=new WebGLAnimation;animation.setAnimationLoop(function(time,frame){pose=frame.getViewerPose(referenceSpace);if(null!==pose){var views=
pose.views,baseLayer=session.renderState.baseLayer;renderer.setFramebuffer(baseLayer.framebuffer);var cameraVRNeedsUpdate=!1;views.length!==cameraVR.cameras.length&&(cameraVR.cameras.length=0,cameraVRNeedsUpdate=!0);for(var _i146=0;_i146<views.length;_i146++){var view=views[_i146],viewport=baseLayer.getViewport(view),camera=cameras$jscomp$0[_i146];camera.matrix.fromArray(view.transform.matrix);camera.projectionMatrix.fromArray(view.projectionMatrix);camera.viewport.set(viewport.x,viewport.y,viewport.width,
viewport.height);0===_i146&&cameraVR.matrix.copy(camera.matrix);!0===cameraVRNeedsUpdate&&cameraVR.cameras.push(camera)}}views=session.inputSources;for(baseLayer=0;baseLayer<controllers.length;baseLayer++)controllers[baseLayer].update(views[baseLayer],frame,referenceSpace);onAnimationFrameCallback&&onAnimationFrameCallback(time,frame)});this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback};this.dispose=function(){}}function WebGLMaterials(properties){function refreshUniformsCommon(uniforms,
material,environment){uniforms.opacity.value=material.opacity;material.color&&uniforms.diffuse.value.copy(material.color);material.emissive&&uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);material.map&&(uniforms.map.value=material.map);material.alphaMap&&(uniforms.alphaMap.value=material.alphaMap);material.specularMap&&(uniforms.specularMap.value=material.specularMap);if(environment=material.envMap||environment)uniforms.envMap.value=environment,uniforms.flipEnvMap.value=
environment.isCubeTexture?-1:1,uniforms.reflectivity.value=material.reflectivity,uniforms.refractionRatio.value=material.refractionRatio,uniforms.maxMipLevel.value=properties.get(environment).__maxMipLevel;material.lightMap&&(uniforms.lightMap.value=material.lightMap,uniforms.lightMapIntensity.value=material.lightMapIntensity);material.aoMap&&(uniforms.aoMap.value=material.aoMap,uniforms.aoMapIntensity.value=material.aoMapIntensity);if(material.map)var uvScaleMap=material.map;else material.specularMap?
uvScaleMap=material.specularMap:material.displacementMap?uvScaleMap=material.displacementMap:material.normalMap?uvScaleMap=material.normalMap:material.bumpMap?uvScaleMap=material.bumpMap:material.roughnessMap?uvScaleMap=material.roughnessMap:material.metalnessMap?uvScaleMap=material.metalnessMap:material.alphaMap?uvScaleMap=material.alphaMap:material.emissiveMap&&(uvScaleMap=material.emissiveMap);void 0!==uvScaleMap&&(uvScaleMap.isWebGLRenderTarget&&(uvScaleMap=uvScaleMap.texture),!0===uvScaleMap.matrixAutoUpdate&&
uvScaleMap.updateMatrix(),uniforms.uvTransform.value.copy(uvScaleMap.matrix));if(material.aoMap)var uv2ScaleMap=material.aoMap;else material.lightMap&&(uv2ScaleMap=material.lightMap);void 0!==uv2ScaleMap&&(uv2ScaleMap.isWebGLRenderTarget&&(uv2ScaleMap=uv2ScaleMap.texture),!0===uv2ScaleMap.matrixAutoUpdate&&uv2ScaleMap.updateMatrix(),uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix))}function refreshUniformsStandard(uniforms,material,environment){uniforms.roughness.value=material.roughness;uniforms.metalness.value=
material.metalness;material.roughnessMap&&(uniforms.roughnessMap.value=material.roughnessMap);material.metalnessMap&&(uniforms.metalnessMap.value=material.metalnessMap);material.emissiveMap&&(uniforms.emissiveMap.value=material.emissiveMap);material.bumpMap&&(uniforms.bumpMap.value=material.bumpMap,uniforms.bumpScale.value=material.bumpScale,material.side===BackSide&&(uniforms.bumpScale.value*=-1));material.normalMap&&(uniforms.normalMap.value=material.normalMap,uniforms.normalScale.value.copy(material.normalScale),
material.side===BackSide&&uniforms.normalScale.value.negate());material.displacementMap&&(uniforms.displacementMap.value=material.displacementMap,uniforms.displacementScale.value=material.displacementScale,uniforms.displacementBias.value=material.displacementBias);if(material.envMap||environment)uniforms.envMapIntensity.value=material.envMapIntensity}return{refreshFogUniforms:function(uniforms,fog){uniforms.fogColor.value.copy(fog.color);fog.isFog?(uniforms.fogNear.value=fog.near,uniforms.fogFar.value=
fog.far):fog.isFogExp2&&(uniforms.fogDensity.value=fog.density)},refreshMaterialUniforms:function(uniforms,material,environment,pixelRatio,height){if(material.isMeshBasicMaterial)refreshUniformsCommon(uniforms,material);else if(material.isMeshLambertMaterial)refreshUniformsCommon(uniforms,material),material.emissiveMap&&(uniforms.emissiveMap.value=material.emissiveMap);else if(material.isMeshToonMaterial)refreshUniformsCommon(uniforms,material),material.gradientMap&&(uniforms.gradientMap.value=material.gradientMap),
material.emissiveMap&&(uniforms.emissiveMap.value=material.emissiveMap),material.bumpMap&&(uniforms.bumpMap.value=material.bumpMap,uniforms.bumpScale.value=material.bumpScale,material.side===BackSide&&(uniforms.bumpScale.value*=-1)),material.normalMap&&(uniforms.normalMap.value=material.normalMap,uniforms.normalScale.value.copy(material.normalScale),material.side===BackSide&&uniforms.normalScale.value.negate()),material.displacementMap&&(uniforms.displacementMap.value=material.displacementMap,uniforms.displacementScale.value=
material.displacementScale,uniforms.displacementBias.value=material.displacementBias);else if(material.isMeshPhongMaterial)refreshUniformsCommon(uniforms,material),uniforms.specular.value.copy(material.specular),uniforms.shininess.value=Math.max(material.shininess,1E-4),material.emissiveMap&&(uniforms.emissiveMap.value=material.emissiveMap),material.bumpMap&&(uniforms.bumpMap.value=material.bumpMap,uniforms.bumpScale.value=material.bumpScale,material.side===BackSide&&(uniforms.bumpScale.value*=-1)),
material.normalMap&&(uniforms.normalMap.value=material.normalMap,uniforms.normalScale.value.copy(material.normalScale),material.side===BackSide&&uniforms.normalScale.value.negate()),material.displacementMap&&(uniforms.displacementMap.value=material.displacementMap,uniforms.displacementScale.value=material.displacementScale,uniforms.displacementBias.value=material.displacementBias);else if(material.isMeshStandardMaterial)refreshUniformsCommon(uniforms,material,environment),material.isMeshPhysicalMaterial?
(refreshUniformsStandard(uniforms,material,environment),uniforms.reflectivity.value=material.reflectivity,uniforms.clearcoat.value=material.clearcoat,uniforms.clearcoatRoughness.value=material.clearcoatRoughness,material.sheen&&uniforms.sheen.value.copy(material.sheen),material.clearcoatMap&&(uniforms.clearcoatMap.value=material.clearcoatMap),material.clearcoatRoughnessMap&&(uniforms.clearcoatRoughnessMap.value=material.clearcoatRoughnessMap),material.clearcoatNormalMap&&(uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale),
uniforms.clearcoatNormalMap.value=material.clearcoatNormalMap,material.side===BackSide&&uniforms.clearcoatNormalScale.value.negate()),uniforms.transparency.value=material.transparency):refreshUniformsStandard(uniforms,material,environment);else if(material.isMeshMatcapMaterial)refreshUniformsCommon(uniforms,material),material.matcap&&(uniforms.matcap.value=material.matcap),material.bumpMap&&(uniforms.bumpMap.value=material.bumpMap,uniforms.bumpScale.value=material.bumpScale,material.side===BackSide&&
(uniforms.bumpScale.value*=-1)),material.normalMap&&(uniforms.normalMap.value=material.normalMap,uniforms.normalScale.value.copy(material.normalScale),material.side===BackSide&&uniforms.normalScale.value.negate()),material.displacementMap&&(uniforms.displacementMap.value=material.displacementMap,uniforms.displacementScale.value=material.displacementScale,uniforms.displacementBias.value=material.displacementBias);else if(material.isMeshDepthMaterial)refreshUniformsCommon(uniforms,material),material.displacementMap&&
(uniforms.displacementMap.value=material.displacementMap,uniforms.displacementScale.value=material.displacementScale,uniforms.displacementBias.value=material.displacementBias);else if(material.isMeshDistanceMaterial)refreshUniformsCommon(uniforms,material),material.displacementMap&&(uniforms.displacementMap.value=material.displacementMap,uniforms.displacementScale.value=material.displacementScale,uniforms.displacementBias.value=material.displacementBias),uniforms.referencePosition.value.copy(material.referencePosition),
uniforms.nearDistance.value=material.nearDistance,uniforms.farDistance.value=material.farDistance;else if(material.isMeshNormalMaterial)refreshUniformsCommon(uniforms,material),material.bumpMap&&(uniforms.bumpMap.value=material.bumpMap,uniforms.bumpScale.value=material.bumpScale,material.side===BackSide&&(uniforms.bumpScale.value*=-1)),material.normalMap&&(uniforms.normalMap.value=material.normalMap,uniforms.normalScale.value.copy(material.normalScale),material.side===BackSide&&uniforms.normalScale.value.negate()),
material.displacementMap&&(uniforms.displacementMap.value=material.displacementMap,uniforms.displacementScale.value=material.displacementScale,uniforms.displacementBias.value=material.displacementBias);else if(material.isLineBasicMaterial)uniforms.diffuse.value.copy(material.color),uniforms.opacity.value=material.opacity,material.isLineDashedMaterial&&(uniforms.dashSize.value=material.dashSize,uniforms.totalSize.value=material.dashSize+material.gapSize,uniforms.scale.value=material.scale);else if(material.isPointsMaterial){uniforms.diffuse.value.copy(material.color);
uniforms.opacity.value=material.opacity;uniforms.size.value=material.size*pixelRatio;uniforms.scale.value=.5*height;material.map&&(uniforms.map.value=material.map);material.alphaMap&&(uniforms.alphaMap.value=material.alphaMap);if(material.map)var uvScaleMap=material.map;else material.alphaMap&&(uvScaleMap=material.alphaMap);void 0!==uvScaleMap&&(!0===uvScaleMap.matrixAutoUpdate&&uvScaleMap.updateMatrix(),uniforms.uvTransform.value.copy(uvScaleMap.matrix))}else if(material.isSpriteMaterial){uniforms.diffuse.value.copy(material.color);
uniforms.opacity.value=material.opacity;uniforms.rotation.value=material.rotation;material.map&&(uniforms.map.value=material.map);material.alphaMap&&(uniforms.alphaMap.value=material.alphaMap);if(material.map)var uvScaleMap$jscomp$0=material.map;else material.alphaMap&&(uvScaleMap$jscomp$0=material.alphaMap);void 0!==uvScaleMap$jscomp$0&&(!0===uvScaleMap$jscomp$0.matrixAutoUpdate&&uvScaleMap$jscomp$0.updateMatrix(),uniforms.uvTransform.value.copy(uvScaleMap$jscomp$0.matrix))}else material.isShadowMaterial?
(uniforms.color.value.copy(material.color),uniforms.opacity.value=material.opacity):material.isShaderMaterial&&(material.uniformsNeedUpdate=!1)}}}function WebGLRenderer(parameters){function getContext(contextNames,contextAttributes){for(var _i148=0;_i148<contextNames.length;_i148++){var context=_canvas.getContext(contextNames[_i148],contextAttributes);if(null!==context)return context}return null}function initGLContext(){extensions=new WebGLExtensions(_gl);capabilities=new WebGLCapabilities(_gl,extensions,
parameters);!1===capabilities.isWebGL2&&(extensions.get("WEBGL_depth_texture"),extensions.get("OES_texture_float"),extensions.get("OES_texture_half_float"),extensions.get("OES_texture_half_float_linear"),extensions.get("OES_standard_derivatives"),extensions.get("OES_element_index_uint"),extensions.get("OES_vertex_array_object"),extensions.get("ANGLE_instanced_arrays"));extensions.get("OES_texture_float_linear");utils=new WebGLUtils(_gl,extensions,capabilities);state=new WebGLState(_gl,extensions,
capabilities);state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());info=new WebGLInfo(_gl);properties=new WebGLProperties;textures=new WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info);attributes=new WebGLAttributes(_gl,capabilities);bindingStates=new WebGLBindingStates(_gl,extensions,attributes,capabilities);geometries=new WebGLGeometries(_gl,attributes,info,bindingStates);
objects=new WebGLObjects(_gl,geometries,attributes,info);morphtargets=new WebGLMorphtargets(_gl);programCache=new WebGLPrograms(_this,extensions,capabilities,bindingStates);materials=new WebGLMaterials(properties);renderLists=new WebGLRenderLists;renderStates=new WebGLRenderStates;background=new WebGLBackground(_this,state,objects,_premultipliedAlpha);bufferRenderer=new WebGLBufferRenderer(_gl,extensions,info,capabilities);indexedBufferRenderer=new WebGLIndexedBufferRenderer(_gl,extensions,info,capabilities);
info.programs=programCache.programs;_this.capabilities=capabilities;_this.extensions=extensions;_this.properties=properties;_this.renderLists=renderLists;_this.state=state;_this.info=info}function onContextLost(event){event.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");_isContextLost=!0}function onContextRestore(){console.log("THREE.WebGLRenderer: Context Restored.");_isContextLost=!1;initGLContext()}function onMaterialDispose(event){event=event.target;event.removeEventListener("dispose",
onMaterialDispose);releaseMaterialProgramReference(event);properties.remove(event)}function releaseMaterialProgramReference(material){var programInfo=properties.get(material).program;material.program=void 0;void 0!==programInfo&&programCache.releaseProgram(programInfo)}function renderObjectImmediate(object$jscomp$0,program){object$jscomp$0.render(function(object){_this.renderBufferImmediate(object,program)})}function projectObject(object,camera,groupOrder,sortObjects){if(!1!==object.visible){if(object.layers.test(camera.layers))if(object.isGroup)groupOrder=
object.renderOrder;else if(object.isLOD)!0===object.autoUpdate&&object.update(camera);else if(object.isLight)currentRenderState.pushLight(object),object.castShadow&&currentRenderState.pushShadow(object);else if(object.isSprite){if(!object.frustumCulled||_frustum.intersectsSprite(object)){sortObjects&&_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);var geometry=objects.update(object),material=object.material;material.visible&&currentRenderList.push(object,geometry,
material,groupOrder,_vector3.z,null)}}else if(object.isImmediateRenderObject)sortObjects&&_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix),currentRenderList.push(object,null,object.material,groupOrder,_vector3.z,null);else if(object.isMesh||object.isLine||object.isPoints)if(object.isSkinnedMesh&&object.skeleton.frame!==info.render.frame&&(object.skeleton.update(),object.skeleton.frame=info.render.frame),!object.frustumCulled||_frustum.intersectsObject(object))if(sortObjects&&
_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix),geometry=objects.update(object),material=object.material,Array.isArray(material))for(var groups=geometry.groups,_i150=0,l=groups.length;_i150<l;_i150++){var group=groups[_i150],groupMaterial=material[group.materialIndex];groupMaterial&&groupMaterial.visible&&currentRenderList.push(object,geometry,groupMaterial,groupOrder,_vector3.z,group)}else material.visible&&currentRenderList.push(object,geometry,material,groupOrder,
_vector3.z,null);object=object.children;geometry=0;for(material=object.length;geometry<material;geometry++)projectObject(object[geometry],camera,groupOrder,sortObjects)}}function renderObjects(renderList,scene,camera){for(var overrideMaterial=!0===scene.isScene?scene.overrideMaterial:null,_i152=0,l=renderList.length;_i152<l;_i152++){var renderItem=renderList[_i152],object=renderItem.object,geometry=renderItem.geometry,material=null===overrideMaterial?renderItem.material:overrideMaterial;renderItem=
renderItem.group;if(camera.isArrayCamera){_currentArrayCamera=camera;for(var cameras=camera.cameras,j=0,jl=cameras.length;j<jl;j++){var camera2=cameras[j];object.layers.test(camera2.layers)&&(state.viewport(_currentViewport.copy(camera2.viewport)),currentRenderState.setupLights(camera2),renderObject(object,scene,camera2,geometry,material,renderItem))}}else _currentArrayCamera=null,renderObject(object,scene,camera,geometry,material,renderItem)}}function renderObject(object,scene,camera,geometry,material,
group){object.onBeforeRender(_this,scene,camera,geometry,material,group);currentRenderState=renderStates.get(scene,_currentArrayCamera||camera);object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object.normalMatrix.getNormalMatrix(object.modelViewMatrix);if(object.isImmediateRenderObject){var program=setProgram(camera,scene,material,object);state.setMaterial(material);bindingStates.reset();renderObjectImmediate(object,program)}else _this.renderBufferDirect(camera,
scene,geometry,material,object,group);object.onAfterRender(_this,scene,camera,geometry,material,group);currentRenderState=renderStates.get(scene,_currentArrayCamera||camera)}function initMaterial(material,scene,object){!0!==scene.isScene&&(scene=_emptyScene);var materialProperties=properties.get(material),lights=currentRenderState.state.lights,lightsStateVersion=lights.state.version;object=programCache.getParameters(material,lights.state,currentRenderState.state.shadowsArray,scene,_clipping.numPlanes,
_clipping.numIntersection,object);var programCacheKey=programCache.getProgramCacheKey(object),program=materialProperties.program,programChange=!0;if(void 0===program)material.addEventListener("dispose",onMaterialDispose);else if(program.cacheKey!==programCacheKey)releaseMaterialProgramReference(material);else{if(materialProperties.lightsStateVersion!==lightsStateVersion)materialProperties.lightsStateVersion=lightsStateVersion;else if(void 0!==object.shaderID)return;programChange=!1}programChange&&
(program=programCache.acquireProgram(object,programCacheKey),materialProperties.program=program,materialProperties.uniforms=object.uniforms,materialProperties.outputEncoding=object.outputEncoding,material.program=program);object=program.getAttributes();if(material.morphTargets)for(programCacheKey=material.numSupportedMorphTargets=0;programCacheKey<_this.maxMorphTargets;programCacheKey++)0<=object["morphTarget"+programCacheKey]&&material.numSupportedMorphTargets++;if(material.morphNormals)for(programCacheKey=
material.numSupportedMorphNormals=0;programCacheKey<_this.maxMorphNormals;programCacheKey++)0<=object["morphNormal"+programCacheKey]&&material.numSupportedMorphNormals++;object=materialProperties.uniforms;if(!material.isShaderMaterial&&!material.isRawShaderMaterial||!0===material.clipping)materialProperties.numClippingPlanes=_clipping.numPlanes,materialProperties.numIntersection=_clipping.numIntersection,object.clippingPlanes=_clipping.uniform;materialProperties.environment=material.isMeshStandardMaterial?
scene.environment:null;materialProperties.fog=scene.fog;materialProperties.needsLights=material.isMeshLambertMaterial||material.isMeshToonMaterial||material.isMeshPhongMaterial||material.isMeshStandardMaterial||material.isShadowMaterial||material.isShaderMaterial&&!0===material.lights;materialProperties.lightsStateVersion=lightsStateVersion;materialProperties.needsLights&&(object.ambientLightColor.value=lights.state.ambient,object.lightProbe.value=lights.state.probe,object.directionalLights.value=
lights.state.directional,object.directionalLightShadows.value=lights.state.directionalShadow,object.spotLights.value=lights.state.spot,object.spotLightShadows.value=lights.state.spotShadow,object.rectAreaLights.value=lights.state.rectArea,object.pointLights.value=lights.state.point,object.pointLightShadows.value=lights.state.pointShadow,object.hemisphereLights.value=lights.state.hemi,object.directionalShadowMap.value=lights.state.directionalShadowMap,object.directionalShadowMatrix.value=lights.state.directionalShadowMatrix,
object.spotShadowMap.value=lights.state.spotShadowMap,object.spotShadowMatrix.value=lights.state.spotShadowMatrix,object.pointShadowMap.value=lights.state.pointShadowMap,object.pointShadowMatrix.value=lights.state.pointShadowMatrix);material=materialProperties.program.getUniforms();material=WebGLUniforms.seqWithValue(material.seq,object);materialProperties.uniformsList=material}function setProgram(camera,scene,material,object){!0!==scene.isScene&&(scene=_emptyScene);textures.resetTextureUnits();var fog=
scene.fog,environment=material.isMeshStandardMaterial?scene.environment:null,encoding=null===_currentRenderTarget?_this.outputEncoding:_currentRenderTarget.texture.encoding,materialProperties=properties.get(material),lights=currentRenderState.state.lights;!0!==_clippingEnabled||!0!==_localClippingEnabled&&camera===_currentCamera||_clipping.setState(material.clippingPlanes,material.clipIntersection,material.clipShadows,camera,materialProperties,camera===_currentCamera&&material.id===_currentMaterialId);
material.version===materialProperties.__version?void 0===materialProperties.program?initMaterial(material,scene,object):material.fog&&materialProperties.fog!==fog?initMaterial(material,scene,object):materialProperties.environment!==environment?initMaterial(material,scene,object):materialProperties.needsLights&&materialProperties.lightsStateVersion!==lights.state.version?initMaterial(material,scene,object):void 0===materialProperties.numClippingPlanes||materialProperties.numClippingPlanes===_clipping.numPlanes&&
materialProperties.numIntersection===_clipping.numIntersection?materialProperties.outputEncoding!==encoding&&initMaterial(material,scene,object):initMaterial(material,scene,object):(initMaterial(material,scene,object),materialProperties.__version=material.version);var refreshProgram=!1,refreshMaterial=!1,refreshLights=!1;scene=materialProperties.program;encoding=scene.getUniforms();lights=materialProperties.uniforms;state.useProgram(scene.program)&&(refreshLights=refreshMaterial=refreshProgram=!0);
material.id!==_currentMaterialId&&(_currentMaterialId=material.id,refreshMaterial=!0);if(refreshProgram||_currentCamera!==camera){encoding.setValue(_gl,"projectionMatrix",camera.projectionMatrix);capabilities.logarithmicDepthBuffer&&encoding.setValue(_gl,"logDepthBufFC",2/(Math.log(camera.far+1)/Math.LN2));_currentCamera!==camera&&(_currentCamera=camera,refreshLights=refreshMaterial=!0);if(material.isShaderMaterial||material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshStandardMaterial||
material.envMap)refreshProgram=encoding.map.cameraPosition,void 0!==refreshProgram&&refreshProgram.setValue(_gl,_vector3.setFromMatrixPosition(camera.matrixWorld));(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial)&&encoding.setValue(_gl,"isOrthographic",!0===camera.isOrthographicCamera);(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||
material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial||material.isShadowMaterial||material.skinning)&&encoding.setValue(_gl,"viewMatrix",camera.matrixWorldInverse)}if(material.skinning&&(encoding.setOptional(_gl,object,"bindMatrix"),encoding.setOptional(_gl,object,"bindMatrixInverse"),camera=object.skeleton))if(refreshProgram=camera.bones,capabilities.floatVertexTextures){if(void 0===camera.boneTexture){refreshProgram=Math.sqrt(4*refreshProgram.length);refreshProgram=
MathUtils.ceilPowerOfTwo(refreshProgram);refreshProgram=Math.max(refreshProgram,4);var boneMatrices=new Float32Array(refreshProgram*refreshProgram*4);boneMatrices.set(camera.boneMatrices);var boneTexture=new DataTexture(boneMatrices,refreshProgram,refreshProgram,RGBAFormat,FloatType);camera.boneMatrices=boneMatrices;camera.boneTexture=boneTexture;camera.boneTextureSize=refreshProgram}encoding.setValue(_gl,"boneTexture",camera.boneTexture,textures);encoding.setValue(_gl,"boneTextureSize",camera.boneTextureSize)}else encoding.setOptional(_gl,
camera,"boneMatrices");if(refreshMaterial||materialProperties.receiveShadow!==object.receiveShadow)materialProperties.receiveShadow=object.receiveShadow,encoding.setValue(_gl,"receiveShadow",object.receiveShadow);refreshMaterial&&(encoding.setValue(_gl,"toneMappingExposure",_this.toneMappingExposure),materialProperties.needsLights&&(refreshMaterial=refreshLights,lights.ambientLightColor.needsUpdate=refreshMaterial,lights.lightProbe.needsUpdate=refreshMaterial,lights.directionalLights.needsUpdate=
refreshMaterial,lights.directionalLightShadows.needsUpdate=refreshMaterial,lights.pointLights.needsUpdate=refreshMaterial,lights.pointLightShadows.needsUpdate=refreshMaterial,lights.spotLights.needsUpdate=refreshMaterial,lights.spotLightShadows.needsUpdate=refreshMaterial,lights.rectAreaLights.needsUpdate=refreshMaterial,lights.hemisphereLights.needsUpdate=refreshMaterial),fog&&material.fog&&materials.refreshFogUniforms(lights,fog),materials.refreshMaterialUniforms(lights,material,environment,_pixelRatio,
_height),void 0!==lights.ltc_1&&(lights.ltc_1.value=UniformsLib.LTC_1),void 0!==lights.ltc_2&&(lights.ltc_2.value=UniformsLib.LTC_2),WebGLUniforms.upload(_gl,materialProperties.uniformsList,lights,textures));material.isShaderMaterial&&!0===material.uniformsNeedUpdate&&(WebGLUniforms.upload(_gl,materialProperties.uniformsList,lights,textures),material.uniformsNeedUpdate=!1);material.isSpriteMaterial&&encoding.setValue(_gl,"center",object.center);encoding.setValue(_gl,"modelViewMatrix",object.modelViewMatrix);
encoding.setValue(_gl,"normalMatrix",object.normalMatrix);encoding.setValue(_gl,"modelMatrix",object.matrixWorld);return scene}parameters=parameters||{};var _canvas=void 0!==parameters.canvas?parameters.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),_context=void 0!==parameters.context?parameters.context:null,_alpha=void 0!==parameters.alpha?parameters.alpha:!1,_depth=void 0!==parameters.depth?parameters.depth:!0,_stencil=void 0!==parameters.stencil?parameters.stencil:!0,
_antialias=void 0!==parameters.antialias?parameters.antialias:!1,_premultipliedAlpha=void 0!==parameters.premultipliedAlpha?parameters.premultipliedAlpha:!0,_preserveDrawingBuffer=void 0!==parameters.preserveDrawingBuffer?parameters.preserveDrawingBuffer:!1,_powerPreference=void 0!==parameters.powerPreference?parameters.powerPreference:"default",_failIfMajorPerformanceCaveat=void 0!==parameters.failIfMajorPerformanceCaveat?parameters.failIfMajorPerformanceCaveat:!1,currentRenderList=null,currentRenderState=
null;this.domElement=_canvas;this.debug={checkShaderErrors:!0};this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.clippingPlanes=[];this.localClippingEnabled=!1;this.gammaFactor=2;this.outputEncoding=LinearEncoding;this.physicallyCorrectLights=!1;this.toneMapping=NoToneMapping;this.toneMappingExposure=1;this.maxMorphTargets=8;this.maxMorphNormals=4;var _this=this,_isContextLost=!1,_framebuffer=null,_currentActiveCubeFace=0,_currentActiveMipmapLevel=
0,_currentRenderTarget=null,_currentFramebuffer=null,_currentMaterialId=-1,_currentCamera=null,_currentArrayCamera=null,_currentViewport=new Vector4,_currentScissor=new Vector4,_currentScissorTest=null,_width=_canvas.width,_height=_canvas.height,_pixelRatio=1,_opaqueSort=null,_transparentSort=null,_viewport=new Vector4(0,0,_width,_height),_scissor=new Vector4(0,0,_width,_height),_scissorTest=!1,_frustum=new Frustum,_clipping=new WebGLClipping,_clippingEnabled=!1,_localClippingEnabled=!1,_projScreenMatrix=
new Matrix4,_vector3=new Vector3,_emptyScene={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0},_gl=_context;try{_context={alpha:_alpha,depth:_depth,stencil:_stencil,antialias:_antialias,premultipliedAlpha:_premultipliedAlpha,preserveDrawingBuffer:_preserveDrawingBuffer,powerPreference:_powerPreference,failIfMajorPerformanceCaveat:_failIfMajorPerformanceCaveat};_canvas.addEventListener("webglcontextlost",onContextLost,!1);_canvas.addEventListener("webglcontextrestored",onContextRestore,
!1);if(null===_gl&&(_alpha=["webgl2","webgl","experimental-webgl"],!0===_this.isWebGL1Renderer&&_alpha.shift(),_gl=getContext(_alpha,_context),null===_gl)){if(getContext(_alpha))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.");}void 0===_gl.getShaderPrecisionFormat&&(_gl.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(error){throw console.error("THREE.WebGLRenderer: "+error.message),error;
}var extensions,capabilities,state,info,properties,textures,attributes,geometries,objects,programCache,materials,renderLists,renderStates,background,morphtargets,bufferRenderer,indexedBufferRenderer,utils,bindingStates;initGLContext();var xr=new WebXRManager(_this,_gl);this.xr=xr;var shadowMap=new WebGLShadowMap(_this,objects,capabilities.maxTextureSize);this.shadowMap=shadowMap;this.getContext=function(){return _gl};this.getContextAttributes=function(){return _gl.getContextAttributes()};this.forceContextLoss=
function(){var extension=extensions.get("WEBGL_lose_context");extension&&extension.loseContext()};this.forceContextRestore=function(){var extension=extensions.get("WEBGL_lose_context");extension&&extension.restoreContext()};this.getPixelRatio=function(){return _pixelRatio};this.setPixelRatio=function(value){void 0!==value&&(_pixelRatio=value,this.setSize(_width,_height,!1))};this.getSize=function(target){void 0===target&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),
target=new Vector2);return target.set(_width,_height)};this.setSize=function(width,height,updateStyle){xr.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(_width=width,_height=height,_canvas.width=Math.floor(width*_pixelRatio),_canvas.height=Math.floor(height*_pixelRatio),!1!==updateStyle&&(_canvas.style.width=width+"px",_canvas.style.height=height+"px"),this.setViewport(0,0,width,height))};this.getDrawingBufferSize=function(target){void 0===target&&
(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),target=new Vector2);return target.set(_width*_pixelRatio,_height*_pixelRatio).floor()};this.setDrawingBufferSize=function(width,height,pixelRatio){_width=width;_height=height;_pixelRatio=pixelRatio;_canvas.width=Math.floor(width*pixelRatio);_canvas.height=Math.floor(height*pixelRatio);this.setViewport(0,0,width,height)};this.getCurrentViewport=function(target){void 0===target&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),
target=new Vector4);return target.copy(_currentViewport)};this.getViewport=function(target){return target.copy(_viewport)};this.setViewport=function(x,y,width,height){x.isVector4?_viewport.set(x.x,x.y,x.z,x.w):_viewport.set(x,y,width,height);state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor())};this.getScissor=function(target){return target.copy(_scissor)};this.setScissor=function(x,y,width,height){x.isVector4?_scissor.set(x.x,x.y,x.z,x.w):_scissor.set(x,y,width,height);
state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor())};this.getScissorTest=function(){return _scissorTest};this.setScissorTest=function(_boolean){state.setScissorTest(_scissorTest=_boolean)};this.setOpaqueSort=function(method){_opaqueSort=method};this.setTransparentSort=function(method){_transparentSort=method};this.getClearColor=function(){return background.getClearColor()};this.setClearColor=function(){background.setClearColor.apply(background,arguments)};this.getClearAlpha=
function(){return background.getClearAlpha()};this.setClearAlpha=function(){background.setClearAlpha.apply(background,arguments)};this.clear=function(color,depth,stencil){var bits=0;if(void 0===color||color)bits|=16384;if(void 0===depth||depth)bits|=256;if(void 0===stencil||stencil)bits|=1024;_gl.clear(bits)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,!1,!0)};this.dispose=function(){_canvas.removeEventListener("webglcontextlost",
onContextLost,!1);_canvas.removeEventListener("webglcontextrestored",onContextRestore,!1);renderLists.dispose();renderStates.dispose();properties.dispose();objects.dispose();bindingStates.dispose();xr.dispose();animation.stop()};this.renderBufferImmediate=function(object,program){bindingStates.initAttributes();var buffers=properties.get(object);object.hasPositions&&!buffers.position&&(buffers.position=_gl.createBuffer());object.hasNormals&&!buffers.normal&&(buffers.normal=_gl.createBuffer());object.hasUvs&&
!buffers.uv&&(buffers.uv=_gl.createBuffer());object.hasColors&&!buffers.color&&(buffers.color=_gl.createBuffer());program=program.getAttributes();object.hasPositions&&(_gl.bindBuffer(34962,buffers.position),_gl.bufferData(34962,object.positionArray,35048),bindingStates.enableAttribute(program.position),_gl.vertexAttribPointer(program.position,3,5126,!1,0,0));object.hasNormals&&(_gl.bindBuffer(34962,buffers.normal),_gl.bufferData(34962,object.normalArray,35048),bindingStates.enableAttribute(program.normal),
_gl.vertexAttribPointer(program.normal,3,5126,!1,0,0));object.hasUvs&&(_gl.bindBuffer(34962,buffers.uv),_gl.bufferData(34962,object.uvArray,35048),bindingStates.enableAttribute(program.uv),_gl.vertexAttribPointer(program.uv,2,5126,!1,0,0));object.hasColors&&(_gl.bindBuffer(34962,buffers.color),_gl.bufferData(34962,object.colorArray,35048),bindingStates.enableAttribute(program.color),_gl.vertexAttribPointer(program.color,3,5126,!1,0,0));bindingStates.disableUnusedAttributes();_gl.drawArrays(4,0,object.count);
object.count=0};this.renderBufferDirect=function(camera,scene,geometry,material,object,group){null===scene&&(scene=_emptyScene);var frontFaceCW=object.isMesh&&0>object.matrixWorld.determinant();camera=setProgram(camera,scene,material,object);state.setMaterial(material,frontFaceCW);frontFaceCW=geometry.index;scene=geometry.attributes.position;if(null===frontFaceCW){if(void 0===scene||0===scene.count)return}else if(0===frontFaceCW.count)return;var rangeFactor=1;!0===material.wireframe&&(frontFaceCW=
geometries.getWireframeAttribute(geometry),rangeFactor=2);(material.morphTargets||material.morphNormals)&&morphtargets.update(object,geometry,material,camera);bindingStates.setup(object,material,camera,geometry,frontFaceCW);camera=bufferRenderer;if(null!==frontFaceCW){var attribute=attributes.get(frontFaceCW);camera=indexedBufferRenderer;camera.setIndex(attribute)}var rangeStart=geometry.drawRange.start*rangeFactor,groupStart=null!==group?group.start*rangeFactor:0;attribute=Math.max(rangeStart,groupStart);
group=Math.max(0,Math.min(null!==frontFaceCW?frontFaceCW.count:scene.count,rangeStart+geometry.drawRange.count*rangeFactor,groupStart+(null!==group?group.count*rangeFactor:Infinity))-1-attribute+1);0!==group&&(object.isMesh?!0===material.wireframe?(state.setLineWidth(material.wireframeLinewidth*(null===_currentRenderTarget?_pixelRatio:1)),camera.setMode(1)):camera.setMode(4):object.isLine?(material=material.linewidth,void 0===material&&(material=1),state.setLineWidth(material*(null===_currentRenderTarget?
_pixelRatio:1)),object.isLineSegments?camera.setMode(1):object.isLineLoop?camera.setMode(2):camera.setMode(3)):object.isPoints?camera.setMode(0):object.isSprite&&camera.setMode(4),object.isInstancedMesh?camera.renderInstances(geometry,attribute,group,object.count):geometry.isInstancedBufferGeometry?camera.renderInstances(geometry,attribute,group,Math.min(geometry.instanceCount,geometry._maxInstanceCount)):camera.render(attribute,group))};this.compile=function(scene,camera){currentRenderState=renderStates.get(scene,
camera);currentRenderState.init();scene.traverse(function(object){object.isLight&&(currentRenderState.pushLight(object),object.castShadow&&currentRenderState.pushShadow(object))});currentRenderState.setupLights(camera);var compiled=new WeakMap;scene.traverse(function(object){var material=object.material;if(material)if(Array.isArray(material))for(var _i149=0;_i149<material.length;_i149++){var material2=material[_i149];!1===compiled.has(material2)&&(initMaterial(material2,scene,object),compiled.set(material2))}else!1===
compiled.has(material)&&(initMaterial(material,scene,object),compiled.set(material))})};var onAnimationFrameCallback=null,animation=new WebGLAnimation;animation.setAnimationLoop(function(time){xr.isPresenting||onAnimationFrameCallback&&onAnimationFrameCallback(time)});"undefined"!==typeof window&&animation.setContext(window);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;xr.setAnimationLoop(callback);null===callback?animation.stop():animation.start()};this.render=function(scene,
camera,JSCompiler_OptimizeArgumentsArray_p4,JSCompiler_OptimizeArgumentsArray_p5){if(void 0!==JSCompiler_OptimizeArgumentsArray_p4){console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.");var renderTarget=JSCompiler_OptimizeArgumentsArray_p4}if(void 0!==JSCompiler_OptimizeArgumentsArray_p5){console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.");var forceClear=JSCompiler_OptimizeArgumentsArray_p5}if(void 0!==
camera&&!0!==camera.isCamera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else if(!0!==_isContextLost){bindingStates.resetDefaultState();_currentMaterialId=-1;_currentCamera=null;!0===scene.autoUpdate&&scene.updateMatrixWorld();null===camera.parent&&camera.updateMatrixWorld();!0===xr.enabled&&!0===xr.isPresenting&&(camera=xr.getCamera(camera));if(!0===scene.isScene)scene.onBeforeRender(_this,scene,camera,renderTarget||_currentRenderTarget);currentRenderState=
renderStates.get(scene,camera);currentRenderState.init();_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromProjectionMatrix(_projScreenMatrix);_localClippingEnabled=this.localClippingEnabled;_clippingEnabled=_clipping.init(this.clippingPlanes,_localClippingEnabled,camera);currentRenderList=renderLists.get(scene,camera);currentRenderList.init();projectObject(scene,camera,0,_this.sortObjects);currentRenderList.finish();!0===_this.sortObjects&&currentRenderList.sort(_opaqueSort,
_transparentSort);!0===_clippingEnabled&&_clipping.beginShadows();shadowMap.render(currentRenderState.state.shadowsArray,scene,camera);currentRenderState.setupLights(camera);!0===_clippingEnabled&&_clipping.endShadows();!0===this.info.autoReset&&this.info.reset();void 0!==renderTarget&&this.setRenderTarget(renderTarget);background.render(currentRenderList,scene,camera,forceClear);JSCompiler_OptimizeArgumentsArray_p4=currentRenderList.opaque;JSCompiler_OptimizeArgumentsArray_p5=currentRenderList.transparent;
0<JSCompiler_OptimizeArgumentsArray_p4.length&&renderObjects(JSCompiler_OptimizeArgumentsArray_p4,scene,camera);0<JSCompiler_OptimizeArgumentsArray_p5.length&&renderObjects(JSCompiler_OptimizeArgumentsArray_p5,scene,camera);if(!0===scene.isScene)scene.onAfterRender(_this,scene,camera);null!==_currentRenderTarget&&(textures.updateRenderTargetMipmap(_currentRenderTarget),textures.updateMultisampleRenderTarget(_currentRenderTarget));state.buffers.depth.setTest(!0);state.buffers.depth.setMask(!0);state.buffers.color.setMask(!0);
state.setPolygonOffset(!1);currentRenderState=currentRenderList=null}};this.setFramebuffer=function(value){_framebuffer!==value&&null===_currentRenderTarget&&_gl.bindFramebuffer(36160,value);_framebuffer=value};this.getActiveCubeFace=function(){return _currentActiveCubeFace};this.getActiveMipmapLevel=function(){return _currentActiveMipmapLevel};this.getRenderTarget=function(){return _currentRenderTarget};this.setRenderTarget=function(renderTarget,activeCubeFace,activeMipmapLevel){_currentRenderTarget=
renderTarget;_currentActiveCubeFace=activeCubeFace;_currentActiveMipmapLevel=activeMipmapLevel;renderTarget&&void 0===properties.get(renderTarget).__webglFramebuffer&&textures.setupRenderTarget(renderTarget);var framebuffer=_framebuffer,isCube=!1;renderTarget?(framebuffer=properties.get(renderTarget).__webglFramebuffer,renderTarget.isWebGLCubeRenderTarget?(framebuffer=framebuffer[activeCubeFace||0],isCube=!0):framebuffer=renderTarget.isWebGLMultisampleRenderTarget?properties.get(renderTarget).__webglMultisampledFramebuffer:
framebuffer,_currentViewport.copy(renderTarget.viewport),_currentScissor.copy(renderTarget.scissor),_currentScissorTest=renderTarget.scissorTest):(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor(),_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor(),_currentScissorTest=_scissorTest);_currentFramebuffer!==framebuffer&&(_gl.bindFramebuffer(36160,framebuffer),_currentFramebuffer=framebuffer);state.viewport(_currentViewport);state.scissor(_currentScissor);state.setScissorTest(_currentScissorTest);
isCube&&(renderTarget=properties.get(renderTarget.texture),_gl.framebufferTexture2D(36160,36064,34069+(activeCubeFace||0),renderTarget.__webglTexture,activeMipmapLevel||0))};this.readRenderTargetPixels=function(renderTarget,x,y,width,height,buffer,activeCubeFaceIndex){if(renderTarget&&renderTarget.isWebGLRenderTarget){var framebuffer=properties.get(renderTarget).__webglFramebuffer;renderTarget.isWebGLCubeRenderTarget&&void 0!==activeCubeFaceIndex&&(framebuffer=framebuffer[activeCubeFaceIndex]);if(framebuffer){activeCubeFaceIndex=
!1;framebuffer!==_currentFramebuffer&&(_gl.bindFramebuffer(36160,framebuffer),activeCubeFaceIndex=!0);try{var texture=renderTarget.texture,textureFormat=texture.format,textureType=texture.type;textureFormat!==RGBAFormat&&utils.convert(textureFormat)!==_gl.getParameter(35739)?console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."):textureType===UnsignedByteType||utils.convert(textureType)===_gl.getParameter(35738)||textureType===FloatType&&
(capabilities.isWebGL2||extensions.get("OES_texture_float")||extensions.get("WEBGL_color_buffer_float"))||textureType===HalfFloatType&&(capabilities.isWebGL2?extensions.get("EXT_color_buffer_float"):extensions.get("EXT_color_buffer_half_float"))?36053===_gl.checkFramebufferStatus(36160)?0<=x&&x<=renderTarget.width-width&&0<=y&&y<=renderTarget.height-height&&_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),buffer):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."):
console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.")}finally{activeCubeFaceIndex&&_gl.bindFramebuffer(36160,_currentFramebuffer)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")};this.copyFramebufferToTexture=function(position,texture,level){void 0===level&&(level=0);var levelScale=Math.pow(2,-level),width=Math.floor(texture.image.width*levelScale);levelScale=
Math.floor(texture.image.height*levelScale);var glFormat=utils.convert(texture.format);textures.setTexture2D(texture,0);_gl.copyTexImage2D(3553,level,glFormat,position.x,position.y,width,levelScale,0);state.unbindTexture()};this.copyTextureToTexture=function(position,srcTexture,dstTexture,level){void 0===level&&(level=0);var width=srcTexture.image.width,height=srcTexture.image.height,glFormat=utils.convert(dstTexture.format),glType=utils.convert(dstTexture.type);textures.setTexture2D(dstTexture,0);
_gl.pixelStorei(37440,dstTexture.flipY);_gl.pixelStorei(37441,dstTexture.premultiplyAlpha);_gl.pixelStorei(3317,dstTexture.unpackAlignment);srcTexture.isDataTexture?_gl.texSubImage2D(3553,level,position.x,position.y,width,height,glFormat,glType,srcTexture.image.data):srcTexture.isCompressedTexture?_gl.compressedTexSubImage2D(3553,level,position.x,position.y,srcTexture.mipmaps[0].width,srcTexture.mipmaps[0].height,glFormat,srcTexture.mipmaps[0].data):_gl.texSubImage2D(3553,level,position.x,position.y,
glFormat,glType,srcTexture.image);0===level&&dstTexture.generateMipmaps&&_gl.generateMipmap(3553);state.unbindTexture()};this.initTexture=function(texture){textures.setTexture2D(texture,0);state.unbindTexture()};"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function WebGL1Renderer(parameters){WebGLRenderer.call(this,parameters)}function FogExp2(color,density){this.name="";this.color=new Color(color);this.density=void 0!==density?
density:2.5E-4}function Fog(color,near,far){this.name="";this.color=new Color(color);this.near=void 0!==near?near:1;this.far=void 0!==far?far:1E3}function InterleavedBuffer(array,stride){this.array=array;this.stride=stride;this.count=void 0!==array?array.length/stride:0;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;this.uuid=MathUtils.generateUUID()}function InterleavedBufferAttribute(interleavedBuffer,itemSize,offset,normalized){this.name="";this.data=interleavedBuffer;
this.itemSize=itemSize;this.offset=offset;this.normalized=!0===normalized}function SpriteMaterial(parameters){Material.call(this);this.type="SpriteMaterial";this.color=new Color(16777215);this.alphaMap=this.map=null;this.rotation=0;this.transparent=this.sizeAttenuation=!0;this.setValues(parameters)}function Sprite(material){Object3D.call(this);this.type="Sprite";if(void 0===_geometry){_geometry=new BufferGeometry;var float32Array=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,
1]);float32Array=new InterleavedBuffer(float32Array,5);_geometry.setIndex([0,1,2,0,2,3]);_geometry.setAttribute("position",new InterleavedBufferAttribute(float32Array,3,0,!1));_geometry.setAttribute("uv",new InterleavedBufferAttribute(float32Array,2,3,!1))}this.geometry=_geometry;this.material=void 0!==material?material:new SpriteMaterial;this.center=new Vector2(.5,.5)}function transformVertex(vertexPosition,mvPosition,center,scale,sin,cos){_alignedPosition.subVectors(vertexPosition,center).addScalar(.5).multiply(scale);
void 0!==sin?(_rotatedPosition.x=cos*_alignedPosition.x-sin*_alignedPosition.y,_rotatedPosition.y=sin*_alignedPosition.x+cos*_alignedPosition.y):_rotatedPosition.copy(_alignedPosition);vertexPosition.copy(mvPosition);vertexPosition.x+=_rotatedPosition.x;vertexPosition.y+=_rotatedPosition.y;vertexPosition.applyMatrix4(_viewWorldMatrix)}function LOD(){Object3D.call(this);this._currentLevel=0;this.type="LOD";Object.defineProperties(this,{levels:{enumerable:!0,value:[]}});this.autoUpdate=!0}function SkinnedMesh(geometry,
material){geometry&&geometry.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");Mesh.call(this,geometry,material);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new Matrix4;this.bindMatrixInverse=new Matrix4}function Skeleton(bones,boneInverses){bones=bones||[];this.bones=bones.slice(0);this.boneMatrices=new Float32Array(16*this.bones.length);this.frame=-1;if(void 0===boneInverses)this.calculateInverses();else if(this.bones.length===
boneInverses.length)this.boneInverses=boneInverses.slice(0);else for(console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[],bones=0,boneInverses=this.bones.length;bones<boneInverses;bones++)this.boneInverses.push(new Matrix4)}function Bone(){Object3D.call(this);this.type="Bone"}function InstancedMesh(geometry,material,count){Mesh.call(this,geometry,material);this.instanceMatrix=new BufferAttribute(new Float32Array(16*count),16);this.count=count;this.frustumCulled=!1}
function LineBasicMaterial(parameters){Material.call(this);this.type="LineBasicMaterial";this.color=new Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.morphTargets=!1;this.setValues(parameters)}function Line(geometry,material,mode){1===mode&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.");Object3D.call(this);this.type="Line";this.geometry=void 0!==geometry?geometry:new BufferGeometry;this.material=void 0!==material?
material:new LineBasicMaterial;this.updateMorphTargets()}function LineSegments(geometry,material){Line.call(this,geometry,material);this.type="LineSegments"}function LineLoop(geometry,material){Line.call(this,geometry,material);this.type="LineLoop"}function PointsMaterial(parameters){Material.call(this);this.type="PointsMaterial";this.color=new Color(16777215);this.alphaMap=this.map=null;this.size=1;this.sizeAttenuation=!0;this.morphTargets=!1;this.setValues(parameters)}function Points(geometry,material){Object3D.call(this);
this.type="Points";this.geometry=void 0!==geometry?geometry:new BufferGeometry;this.material=void 0!==material?material:new PointsMaterial;this.updateMorphTargets()}function testPoint(point,index,localThresholdSq,matrixWorld,raycaster,intersects,object){var rayPointDistanceSq=_ray$2.distanceSqToPoint(point);rayPointDistanceSq<localThresholdSq&&(localThresholdSq=new Vector3,_ray$2.closestPointToPoint(point,localThresholdSq),localThresholdSq.applyMatrix4(matrixWorld),point=raycaster.ray.origin.distanceTo(localThresholdSq),
point<raycaster.near||point>raycaster.far||intersects.push({distance:point,distanceToRay:Math.sqrt(rayPointDistanceSq),point:localThresholdSq,index:index,face:null,object:object}))}function VideoTexture(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){Texture.call(this,video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.format=void 0!==format?format:RGBFormat;this.minFilter=void 0!==minFilter?minFilter:LinearFilter;this.magFilter=void 0!==magFilter?magFilter:
LinearFilter;this.generateMipmaps=!1}function CompressedTexture(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={width:width,height:height};this.mipmaps=mipmaps;this.generateMipmaps=this.flipY=!1}function CanvasTexture(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){Texture.call(this,canvas,mapping,wrapS,wrapT,magFilter,minFilter,
format,type,anisotropy);this.needsUpdate=!0}function DepthTexture(width,height,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,format){format=void 0!==format?format:DepthFormat;if(format!==DepthFormat&&format!==DepthStencilFormat)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===type&&format===DepthFormat&&(type=UnsignedShortType);void 0===type&&format===DepthStencilFormat&&(type=UnsignedInt248Type);Texture.call(this,null,mapping,wrapS,
wrapT,magFilter,minFilter,format,type,anisotropy);this.image={width:width,height:height};this.magFilter=void 0!==magFilter?magFilter:NearestFilter;this.minFilter=void 0!==minFilter?minFilter:NearestFilter;this.generateMipmaps=this.flipY=!1}function WireframeGeometry(geometry){BufferGeometry.call(this);this.type="WireframeGeometry";var vertices=[],edge=[0,0],edges={},keys=["a","b","c"];if(geometry&&geometry.isGeometry){for(var faces=geometry.faces,_i182=0,l=faces.length;_i182<l;_i182++)for(var face=
faces[_i182],j=0;3>j;j++){var edge1=face[keys[j]],edge2=face[keys[(j+1)%3]];edge[0]=Math.min(edge1,edge2);edge[1]=Math.max(edge1,edge2);edge1=edge[0]+","+edge[1];void 0===edges[edge1]&&(edges[edge1]={index1:edge[0],index2:edge[1]})}for(var _key3 in edges)edge=edges[_key3],faces=geometry.vertices[edge.index1],vertices.push(faces.x,faces.y,faces.z),faces=geometry.vertices[edge.index2],vertices.push(faces.x,faces.y,faces.z)}else if(geometry&&geometry.isBufferGeometry)if(_key3=new Vector3,null!==geometry.index){keys=
geometry.attributes.position;_i182=geometry.index;geometry=geometry.groups;0===geometry.length&&(geometry=[{start:0,count:_i182.count,materialIndex:0}]);l=0;for(face=geometry.length;l<face;++l)for(edge1=geometry[l],j=edge2=edge1.start,edge1=edge2+edge1.count;j<edge1;j+=3)for(edge2=0;3>edge2;edge2++){var _edge=_i182.getX(j+edge2),_edge3=_i182.getX(j+(edge2+1)%3);edge[0]=Math.min(_edge,_edge3);edge[1]=Math.max(_edge,_edge3);_edge=edge[0]+","+edge[1];void 0===edges[_edge]&&(edges[_edge]={index1:edge[0],
index2:edge[1]})}for(faces in edges)edge=edges[faces],_key3.fromBufferAttribute(keys,edge.index1),vertices.push(_key3.x,_key3.y,_key3.z),_key3.fromBufferAttribute(keys,edge.index2),vertices.push(_key3.x,_key3.y,_key3.z)}else for(edges=geometry.attributes.position,edge=0,faces=edges.count/3;edge<faces;edge++)for(geometry=0;3>geometry;geometry++)_key3.fromBufferAttribute(edges,3*edge+geometry),vertices.push(_key3.x,_key3.y,_key3.z),_key3.fromBufferAttribute(edges,3*edge+(geometry+1)%3),vertices.push(_key3.x,
_key3.y,_key3.z);this.setAttribute("position",new Float32BufferAttribute(vertices,3))}function ParametricGeometry(func,slices,stacks){Geometry.call(this);this.type="ParametricGeometry";this.parameters={func:func,slices:slices,stacks:stacks};this.fromBufferGeometry(new ParametricBufferGeometry(func,slices,stacks));this.mergeVertices()}function ParametricBufferGeometry(func,slices,stacks){BufferGeometry.call(this);this.type="ParametricBufferGeometry";this.parameters={func:func,slices:slices,stacks:stacks};
var indices=[],vertices=[],normals=[],uvs=[],normal=new Vector3,p0=new Vector3,p1=new Vector3,pu=new Vector3,pv=new Vector3;3>func.length&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");for(var sliceCount=slices+1,_i185=0;_i185<=stacks;_i185++)for(var v=_i185/stacks,j=0;j<=slices;j++){var u=j/slices;func(u,v,p0);vertices.push(p0.x,p0.y,p0.z);0<=u-1E-5?(func(u-1E-5,v,p1),pu.subVectors(p0,p1)):(func(u+1E-5,v,p1),pu.subVectors(p1,p0));0<=v-1E-5?(func(u,
v-1E-5,p1),pv.subVectors(p0,p1)):(func(u,v+1E-5,p1),pv.subVectors(p1,p0));normal.crossVectors(pu,pv).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(u,v)}for(func=0;func<stacks;func++)for(normal=0;normal<slices;normal++)p0=func*sliceCount+normal+1,p1=(func+1)*sliceCount+normal+1,pu=(func+1)*sliceCount+normal,indices.push(func*sliceCount+normal,p0,pu),indices.push(p0,p1,pu);this.setIndex(indices);this.setAttribute("position",new Float32BufferAttribute(vertices,3));this.setAttribute("normal",
new Float32BufferAttribute(normals,3));this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}function PolyhedronGeometry(vertices,indices,radius,detail){Geometry.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:vertices,indices:indices,radius:radius,detail:detail};this.fromBufferGeometry(new PolyhedronBufferGeometry(vertices,indices,radius,detail));this.mergeVertices()}function PolyhedronBufferGeometry(vertices,indices,radius$jscomp$0,detail$jscomp$0){function pushVertex(vertex){vertexBuffer.push(vertex.x,
vertex.y,vertex.z)}function getVertexByIndex(index,vertex){index*=3;vertex.x=vertices[index+0];vertex.y=vertices[index+1];vertex.z=vertices[index+2]}function correctUV(uv,stride,vector,azimuth){0>azimuth&&1===uv.x&&(uvBuffer[stride]=uv.x-1);0===vector.x&&0===vector.z&&(uvBuffer[stride]=azimuth/2/Math.PI+.5)}BufferGeometry.call(this);this.type="PolyhedronBufferGeometry";this.parameters={vertices:vertices,indices:indices,radius:radius$jscomp$0,detail:detail$jscomp$0};radius$jscomp$0=radius$jscomp$0||
1;detail$jscomp$0=detail$jscomp$0||0;var vertexBuffer=[],uvBuffer=[];(function(detail){for(var a=new Vector3,b=new Vector3,c=new Vector3,_i187=0;_i187<indices.length;_i187+=3){getVertexByIndex(indices[_i187+0],a);getVertexByIndex(indices[_i187+1],b);getVertexByIndex(indices[_i187+2],c);for(var a$jscomp$0=a,b$jscomp$0=b,c$jscomp$0=c,cols=Math.pow(2,detail),v=[],_i188=0;_i188<=cols;_i188++){v[_i188]=[];for(var aj=a$jscomp$0.clone().lerp(c$jscomp$0,_i188/cols),bj=b$jscomp$0.clone().lerp(c$jscomp$0,_i188/
cols),rows=cols-_i188,j=0;j<=rows;j++)v[_i188][j]=0===j&&_i188===cols?aj:aj.clone().lerp(bj,j/rows)}for(a$jscomp$0=0;a$jscomp$0<cols;a$jscomp$0++)for(b$jscomp$0=0;b$jscomp$0<2*(cols-a$jscomp$0)-1;b$jscomp$0++)c$jscomp$0=Math.floor(b$jscomp$0/2),0===b$jscomp$0%2?(pushVertex(v[a$jscomp$0][c$jscomp$0+1]),pushVertex(v[a$jscomp$0+1][c$jscomp$0]),pushVertex(v[a$jscomp$0][c$jscomp$0])):(pushVertex(v[a$jscomp$0][c$jscomp$0+1]),pushVertex(v[a$jscomp$0+1][c$jscomp$0+1]),pushVertex(v[a$jscomp$0+1][c$jscomp$0]))}})(detail$jscomp$0);
(function(radius){for(var vertex=new Vector3,_i190=0;_i190<vertexBuffer.length;_i190+=3)vertex.x=vertexBuffer[_i190+0],vertex.y=vertexBuffer[_i190+1],vertex.z=vertexBuffer[_i190+2],vertex.normalize().multiplyScalar(radius),vertexBuffer[_i190+0]=vertex.x,vertexBuffer[_i190+1]=vertex.y,vertexBuffer[_i190+2]=vertex.z})(radius$jscomp$0);(function(){for(var vertex=new Vector3,_i191=0;_i191<vertexBuffer.length;_i191+=3)vertex.x=vertexBuffer[_i191+0],vertex.y=vertexBuffer[_i191+1],vertex.z=vertexBuffer[_i191+
2],uvBuffer.push(Math.atan2(vertex.z,-vertex.x)/2/Math.PI+.5,1-(Math.atan2(-vertex.y,Math.sqrt(vertex.x*vertex.x+vertex.z*vertex.z))/Math.PI+.5));vertex=new Vector3;_i191=new Vector3;for(var c=new Vector3,centroid=new Vector3,uvA=new Vector2,uvB=new Vector2,uvC=new Vector2,_i193=0,j=0;_i193<vertexBuffer.length;_i193+=9,j+=6){vertex.set(vertexBuffer[_i193+0],vertexBuffer[_i193+1],vertexBuffer[_i193+2]);_i191.set(vertexBuffer[_i193+3],vertexBuffer[_i193+4],vertexBuffer[_i193+5]);c.set(vertexBuffer[_i193+
6],vertexBuffer[_i193+7],vertexBuffer[_i193+8]);uvA.set(uvBuffer[j+0],uvBuffer[j+1]);uvB.set(uvBuffer[j+2],uvBuffer[j+3]);uvC.set(uvBuffer[j+4],uvBuffer[j+5]);centroid.copy(vertex).add(_i191).add(c).divideScalar(3);var azi=Math.atan2(centroid.z,-centroid.x);correctUV(uvA,j+0,vertex,azi);correctUV(uvB,j+2,_i191,azi);correctUV(uvC,j+4,c,azi)}for(vertex=0;vertex<uvBuffer.length;vertex+=6)_i191=uvBuffer[vertex+0],c=uvBuffer[vertex+2],centroid=uvBuffer[vertex+4],uvA=Math.min(_i191,c,centroid),.9<Math.max(_i191,
c,centroid)&&.1>uvA&&(.2>_i191&&(uvBuffer[vertex+0]+=1),.2>c&&(uvBuffer[vertex+2]+=1),.2>centroid&&(uvBuffer[vertex+4]+=1))})();this.setAttribute("position",new Float32BufferAttribute(vertexBuffer,3));this.setAttribute("normal",new Float32BufferAttribute(vertexBuffer.slice(),3));this.setAttribute("uv",new Float32BufferAttribute(uvBuffer,2));0===detail$jscomp$0?this.computeVertexNormals():this.normalizeNormals()}function TetrahedronGeometry(radius,detail){Geometry.call(this);this.type="TetrahedronGeometry";
this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new TetrahedronBufferGeometry(radius,detail));this.mergeVertices()}function TetrahedronBufferGeometry(radius,detail){PolyhedronBufferGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],radius,detail);this.type="TetrahedronBufferGeometry";this.parameters={radius:radius,detail:detail}}function OctahedronGeometry(radius,detail){Geometry.call(this);this.type="OctahedronGeometry";this.parameters={radius:radius,
detail:detail};this.fromBufferGeometry(new OctahedronBufferGeometry(radius,detail));this.mergeVertices()}function OctahedronBufferGeometry(radius,detail){PolyhedronBufferGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],radius,detail);this.type="OctahedronBufferGeometry";this.parameters={radius:radius,detail:detail}}function IcosahedronGeometry(radius,detail){Geometry.call(this);this.type="IcosahedronGeometry";this.parameters={radius:radius,
detail:detail};this.fromBufferGeometry(new IcosahedronBufferGeometry(radius,detail));this.mergeVertices()}function IcosahedronBufferGeometry(radius,detail){var t=(1+Math.sqrt(5))/2;PolyhedronBufferGeometry.call(this,[-1,t,0,1,t,0,-1,-t,0,1,-t,0,0,-1,t,0,1,t,0,-1,-t,0,1,-t,t,0,-1,t,0,1,-t,0,-1,-t,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],radius,detail);this.type="IcosahedronBufferGeometry";this.parameters=
{radius:radius,detail:detail}}function DodecahedronGeometry(radius,detail){Geometry.call(this);this.type="DodecahedronGeometry";this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new DodecahedronBufferGeometry(radius,detail));this.mergeVertices()}function DodecahedronBufferGeometry(radius,detail){var t=(1+Math.sqrt(5))/2,r=1/t;PolyhedronBufferGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-t,0,-r,t,0,r,-t,0,r,t,-r,-t,0,-r,t,0,r,-t,0,r,t,0,-t,
0,-r,t,0,-r,-t,0,r,t,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],radius,detail);this.type="DodecahedronBufferGeometry";this.parameters={radius:radius,detail:detail}}function TubeGeometry(path,tubularSegments,radius,radialSegments,closed,taper){Geometry.call(this);this.type=
"TubeGeometry";this.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};void 0!==taper&&console.warn("THREE.TubeGeometry: taper has been removed.");path=new TubeBufferGeometry(path,tubularSegments,radius,radialSegments,closed);this.tangents=path.tangents;this.normals=path.normals;this.binormals=path.binormals;this.fromBufferGeometry(path);this.mergeVertices()}function TubeBufferGeometry(path,tubularSegments,radius,radialSegments,closed){function generateSegment(i){P=
path.getPointAt(i/tubularSegments,P);var N=frames.normals[i];i=frames.binormals[i];for(var j=0;j<=radialSegments;j++){var v=j/radialSegments*Math.PI*2,sin=Math.sin(v);v=-Math.cos(v);normal.x=v*N.x+sin*i.x;normal.y=v*N.y+sin*i.y;normal.z=v*N.z+sin*i.z;normal.normalize();normals.push(normal.x,normal.y,normal.z);vertex.x=P.x+radius*normal.x;vertex.y=P.y+radius*normal.y;vertex.z=P.z+radius*normal.z;vertices.push(vertex.x,vertex.y,vertex.z)}}BufferGeometry.call(this);this.type="TubeBufferGeometry";this.parameters=
{path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};tubularSegments=tubularSegments||64;radius=radius||1;radialSegments=radialSegments||8;closed=closed||!1;var frames=path.computeFrenetFrames(tubularSegments,closed);this.tangents=frames.tangents;this.normals=frames.normals;this.binormals=frames.binormals;var vertex=new Vector3,normal=new Vector3,uv=new Vector2,P=new Vector3,vertices=[],normals=[],uvs=[],indices=[];(function(){for(var _i194=0;_i194<
tubularSegments;_i194++)generateSegment(_i194);generateSegment(!1===closed?tubularSegments:0);for(_i194=0;_i194<=tubularSegments;_i194++)for(var j=0;j<=radialSegments;j++)uv.x=_i194/tubularSegments,uv.y=j/radialSegments,uvs.push(uv.x,uv.y);for(_i194=1;_i194<=tubularSegments;_i194++)for(j=1;j<=radialSegments;j++){var b=(radialSegments+1)*_i194+(j-1),c=(radialSegments+1)*_i194+j,d=(radialSegments+1)*(_i194-1)+j;indices.push((radialSegments+1)*(_i194-1)+(j-1),b,d);indices.push(b,c,d)}})();this.setIndex(indices);
this.setAttribute("position",new Float32BufferAttribute(vertices,3));this.setAttribute("normal",new Float32BufferAttribute(normals,3));this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}function TorusKnotGeometry(radius,tube,tubularSegments,radialSegments,p,q,heightScale){Geometry.call(this);this.type="TorusKnotGeometry";this.parameters={radius:radius,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p,q:q};void 0!==heightScale&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.");
this.fromBufferGeometry(new TorusKnotBufferGeometry(radius,tube,tubularSegments,radialSegments,p,q));this.mergeVertices()}function TorusKnotBufferGeometry(radius$jscomp$0,tube,tubularSegments,radialSegments,p$jscomp$0,q$jscomp$0){function calculatePositionOnCurve(u,p,q,radius,position){var su=Math.sin(u);p=q/p*u;q=Math.cos(p);position.x=radius*(2+q)*.5*Math.cos(u);position.y=radius*(2+q)*su*.5;position.z=radius*Math.sin(p)*.5}BufferGeometry.call(this);this.type="TorusKnotBufferGeometry";this.parameters=
{radius:radius$jscomp$0,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p$jscomp$0,q:q$jscomp$0};radius$jscomp$0=radius$jscomp$0||1;tube=tube||.4;tubularSegments=Math.floor(tubularSegments)||64;radialSegments=Math.floor(radialSegments)||8;p$jscomp$0=p$jscomp$0||2;q$jscomp$0=q$jscomp$0||3;for(var indices=[],vertices=[],normals=[],uvs=[],vertex=new Vector3,normal=new Vector3,P1=new Vector3,P2=new Vector3,B=new Vector3,T=new Vector3,N=new Vector3,_i197=0;_i197<=tubularSegments;++_i197){var u$jscomp$0=
_i197/tubularSegments*p$jscomp$0*Math.PI*2;calculatePositionOnCurve(u$jscomp$0,p$jscomp$0,q$jscomp$0,radius$jscomp$0,P1);calculatePositionOnCurve(u$jscomp$0+.01,p$jscomp$0,q$jscomp$0,radius$jscomp$0,P2);T.subVectors(P2,P1);N.addVectors(P2,P1);B.crossVectors(T,N);N.crossVectors(B,T);B.normalize();N.normalize();for(u$jscomp$0=0;u$jscomp$0<=radialSegments;++u$jscomp$0){var v=u$jscomp$0/radialSegments*Math.PI*2,cx=-tube*Math.cos(v);v=tube*Math.sin(v);vertex.x=P1.x+(cx*N.x+v*B.x);vertex.y=P1.y+(cx*N.y+
v*B.y);vertex.z=P1.z+(cx*N.z+v*B.z);vertices.push(vertex.x,vertex.y,vertex.z);normal.subVectors(vertex,P1).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(_i197/tubularSegments);uvs.push(u$jscomp$0/radialSegments)}}for(radius$jscomp$0=1;radius$jscomp$0<=tubularSegments;radius$jscomp$0++)for(tube=1;tube<=radialSegments;tube++)p$jscomp$0=(radialSegments+1)*radius$jscomp$0+(tube-1),q$jscomp$0=(radialSegments+1)*radius$jscomp$0+tube,vertex=(radialSegments+1)*(radius$jscomp$0-1)+tube,indices.push((radialSegments+
1)*(radius$jscomp$0-1)+(tube-1),p$jscomp$0,vertex),indices.push(p$jscomp$0,q$jscomp$0,vertex);this.setIndex(indices);this.setAttribute("position",new Float32BufferAttribute(vertices,3));this.setAttribute("normal",new Float32BufferAttribute(normals,3));this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}function TorusGeometry(radius,tube,radialSegments,tubularSegments,arc){Geometry.call(this);this.type="TorusGeometry";this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,
arc:arc};this.fromBufferGeometry(new TorusBufferGeometry(radius,tube,radialSegments,tubularSegments,arc));this.mergeVertices()}function TorusBufferGeometry(radius,tube,radialSegments,tubularSegments,arc){BufferGeometry.call(this);this.type="TorusBufferGeometry";this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};radius=radius||1;tube=tube||.4;radialSegments=Math.floor(radialSegments)||8;tubularSegments=Math.floor(tubularSegments)||6;arc=
arc||2*Math.PI;for(var indices=[],vertices=[],normals=[],uvs=[],center=new Vector3,vertex=new Vector3,normal=new Vector3,j=0;j<=radialSegments;j++)for(var _i199=0;_i199<=tubularSegments;_i199++){var u=_i199/tubularSegments*arc,v=j/radialSegments*Math.PI*2;vertex.x=(radius+tube*Math.cos(v))*Math.cos(u);vertex.y=(radius+tube*Math.cos(v))*Math.sin(u);vertex.z=tube*Math.sin(v);vertices.push(vertex.x,vertex.y,vertex.z);center.x=radius*Math.cos(u);center.y=radius*Math.sin(u);normal.subVectors(vertex,center).normalize();
normals.push(normal.x,normal.y,normal.z);uvs.push(_i199/tubularSegments);uvs.push(j/radialSegments)}for(radius=1;radius<=radialSegments;radius++)for(tube=1;tube<=tubularSegments;tube++)arc=(tubularSegments+1)*(radius-1)+tube-1,center=(tubularSegments+1)*(radius-1)+tube,vertex=(tubularSegments+1)*radius+tube,indices.push((tubularSegments+1)*radius+tube-1,arc,vertex),indices.push(arc,center,vertex);this.setIndex(indices);this.setAttribute("position",new Float32BufferAttribute(vertices,3));this.setAttribute("normal",
new Float32BufferAttribute(normals,3));this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}function linkedList(data,start,end,dim,clockwise){for(var last,sum=0,_i202=start,j=end-dim;_i202<end;_i202+=dim)sum+=(data[j]-data[_i202])*(data[_i202+1]+data[j+1]),j=_i202;if(clockwise===0<sum)for(clockwise=start;clockwise<end;clockwise+=dim)last=insertNode(clockwise,data[clockwise],data[clockwise+1],last);else for(clockwise=end-dim;clockwise>=start;clockwise-=dim)last=insertNode(clockwise,data[clockwise],
data[clockwise+1],last);last&&equals(last,last.next)&&(removeNode(last),last=last.next);return last}function filterPoints(start,end){if(!start)return start;end||(end=start);do{var again=!1;if(start.steiner||!equals(start,start.next)&&0!==area(start.prev,start,start.next))start=start.next;else{removeNode(start);start=end=start.prev;if(start===start.next)break;again=!0}}while(again||start!==end);return end}function earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if(ear){if(!pass&&invSize){var start=
ear,p=start;do null===p.z&&(p.z=zOrder(p.x,p.y,minX,minY,invSize)),p.prevZ=p.prev,p=p.nextZ=p.next;while(p!==start);p.prevZ.nextZ=null;p.prevZ=null;start=p;var i,numMerges,pSize,qSize,inSize=1;do{p=start;var tail=start=null;for(numMerges=0;p;){numMerges++;var q=p;for(i=pSize=0;i<inSize&&(pSize++,q=q.nextZ,q);i++);for(qSize=inSize;0<pSize||0<qSize&&q;)0!==pSize&&(0===qSize||!q||p.z<=q.z)?(i=p,p=p.nextZ,pSize--):(i=q,q=q.nextZ,qSize--),tail?tail.nextZ=i:start=i,i.prevZ=tail,tail=i;p=q}tail.nextZ=null;
inSize*=2}while(1<numMerges)}for(start=ear;ear.prev!==ear.next;){p=ear.prev;q=ear.next;if(invSize)tail=isEarHashed(ear,minX,minY,invSize);else a:if(tail=ear,numMerges=tail.prev,pSize=tail,inSize=tail.next,0<=area(numMerges,pSize,inSize))tail=!1;else{for(i=tail.next.next;i!==tail.prev;){if(pointInTriangle(numMerges.x,numMerges.y,pSize.x,pSize.y,inSize.x,inSize.y,i.x,i.y)&&0<=area(i.prev,i,i.next)){tail=!1;break a}i=i.next}tail=!0}if(tail)triangles.push(p.i/dim),triangles.push(ear.i/dim),triangles.push(q.i/
dim),removeNode(ear),start=ear=q.next;else if(ear=q,ear===start){if(!pass)earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);else if(1===pass){ear=filterPoints(ear);pass=triangles;start=dim;p=ear;do q=p.prev,tail=p.next.next,!equals(q,tail)&&intersects$jscomp$0(q,p,p.next,tail)&&locallyInside(q,tail)&&locallyInside(tail,q)&&(pass.push(q.i/start),pass.push(p.i/start),pass.push(tail.i/start),removeNode(p),removeNode(p.next),p=ear=tail),p=p.next;while(p!==ear);ear=filterPoints(p);earcutLinked(ear,
triangles,dim,minX,minY,invSize,2)}else if(2===pass)a:{pass=ear;do{for(start=pass.next.next;start!==pass.prev;){if(p=pass.i!==start.i){p=pass;q=start;if(tail=p.next.i!==q.i&&p.prev.i!==q.i){b:{tail=p;do{if(tail.i!==p.i&&tail.next.i!==p.i&&tail.i!==q.i&&tail.next.i!==q.i&&intersects$jscomp$0(tail,tail.next,p,q)){tail=!0;break b}tail=tail.next}while(tail!==p);tail=!1}tail=!tail}if(tail){if(tail=locallyInside(p,q)&&locallyInside(q,p)){tail=p;numMerges=!1;pSize=(p.x+q.x)/2;inSize=(p.y+q.y)/2;do tail.y>
inSize!==tail.next.y>inSize&&tail.next.y!==tail.y&&pSize<(tail.next.x-tail.x)*(inSize-tail.y)/(tail.next.y-tail.y)+tail.x&&(numMerges=!numMerges),tail=tail.next;while(tail!==p);tail=numMerges}tail=tail&&(area(p.prev,p,q.prev)||area(p,q.prev,q))||equals(p,q)&&0<area(p.prev,p,p.next)&&0<area(q.prev,q,q.next)}p=tail}if(p){ear=splitPolygon(pass,start);pass=filterPoints(pass,pass.next);ear=filterPoints(ear,ear.next);earcutLinked(pass,triangles,dim,minX,minY,invSize);earcutLinked(ear,triangles,dim,minX,
minY,invSize);break a}start=start.next}pass=pass.next}while(pass!==ear)}break}}}}function isEarHashed(ear,minX,minY,invSize){var a=ear.prev,c=ear.next;if(0<=area(a,ear,c))return!1;var maxTX=a.x>ear.x?a.x>c.x?a.x:c.x:ear.x>c.x?ear.x:c.x,maxTY=a.y>ear.y?a.y>c.y?a.y:c.y:ear.y>c.y?ear.y:c.y,minZ=zOrder(a.x<ear.x?a.x<c.x?a.x:c.x:ear.x<c.x?ear.x:c.x,a.y<ear.y?a.y<c.y?a.y:c.y:ear.y<c.y?ear.y:c.y,minX,minY,invSize);minX=zOrder(maxTX,maxTY,minX,minY,invSize);minY=ear.prevZ;for(invSize=ear.nextZ;minY&&minY.z>=
minZ&&invSize&&invSize.z<=minX;){if(minY!==ear.prev&&minY!==ear.next&&pointInTriangle(a.x,a.y,ear.x,ear.y,c.x,c.y,minY.x,minY.y)&&0<=area(minY.prev,minY,minY.next))return!1;minY=minY.prevZ;if(invSize!==ear.prev&&invSize!==ear.next&&pointInTriangle(a.x,a.y,ear.x,ear.y,c.x,c.y,invSize.x,invSize.y)&&0<=area(invSize.prev,invSize,invSize.next))return!1;invSize=invSize.nextZ}for(;minY&&minY.z>=minZ;){if(minY!==ear.prev&&minY!==ear.next&&pointInTriangle(a.x,a.y,ear.x,ear.y,c.x,c.y,minY.x,minY.y)&&0<=area(minY.prev,
minY,minY.next))return!1;minY=minY.prevZ}for(;invSize&&invSize.z<=minX;){if(invSize!==ear.prev&&invSize!==ear.next&&pointInTriangle(a.x,a.y,ear.x,ear.y,c.x,c.y,invSize.x,invSize.y)&&0<=area(invSize.prev,invSize,invSize.next))return!1;invSize=invSize.nextZ}return!0}function compareX(a,b){return a.x-b.x}function findHoleBridge(hole,outerNode){var p=outerNode,hx=hole.x,hy=hole.y,qx=-Infinity;do{if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){var x=p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx){qx=
x;if(x===hx){if(hy===p.y)return p;if(hy===p.next.y)return p.next}var m=p.x<p.next.x?p:p.next}}p=p.next}while(p!==outerNode);if(!m)return null;if(hx===qx)return m;outerNode=m;x=m.x;var my=m.y,tanMin=Infinity;p=m;do{if(hx>=p.x&&p.x>=x&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,x,my,hy<my?qx:hx,hy,p.x,p.y)){var tan=Math.abs(hy-p.y)/(hx-p.x);var JSCompiler_temp;if((JSCompiler_temp=locallyInside(p,hole))&&!(JSCompiler_temp=tan<tanMin)&&(JSCompiler_temp=tan===tanMin)&&!(JSCompiler_temp=p.x>m.x)&&(JSCompiler_temp=
p.x===m.x)){JSCompiler_temp=m;var p$jscomp$0=p;JSCompiler_temp=0>area(JSCompiler_temp.prev,JSCompiler_temp,p$jscomp$0.prev)&&0>area(p$jscomp$0.next,JSCompiler_temp,JSCompiler_temp.next)}JSCompiler_temp&&(m=p,tanMin=tan)}p=p.next}while(p!==outerNode);return m}function zOrder(x,y,minX,minY,invSize){x=32767*(x-minX)*invSize;y=32767*(y-minY)*invSize;x=(x|x<<8)&16711935;x=(x|x<<4)&252645135;x=(x|x<<2)&858993459;y=(y|y<<8)&16711935;y=(y|y<<4)&252645135;y=(y|y<<2)&858993459;return(x|x<<1)&1431655765|((y|
y<<1)&1431655765)<<1}function getLeftmost(start){var p=start,leftmost=start;do{if(p.x<leftmost.x||p.x===leftmost.x&&p.y<leftmost.y)leftmost=p;p=p.next}while(p!==start);return leftmost}function pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return 0<=(cx-px)*(ay-py)-(ax-px)*(cy-py)&&0<=(ax-px)*(by-py)-(bx-px)*(ay-py)&&0<=(bx-px)*(cy-py)-(cx-px)*(by-py)}function area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y)}function equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y}function intersects$jscomp$0(p1,
q1,p2,q2){var o1=sign$jscomp$0(area(p1,q1,p2)),o2=sign$jscomp$0(area(p1,q1,q2)),o3=sign$jscomp$0(area(p2,q2,p1)),o4=sign$jscomp$0(area(p2,q2,q1));return o1!==o2&&o3!==o4||0===o1&&onSegment(p1,p2,q1)||0===o2&&onSegment(p1,q2,q1)||0===o3&&onSegment(p2,p1,q2)||0===o4&&onSegment(p2,q1,q2)?!0:!1}function onSegment(p,q,r){return q.x<=Math.max(p.x,r.x)&&q.x>=Math.min(p.x,r.x)&&q.y<=Math.max(p.y,r.y)&&q.y>=Math.min(p.y,r.y)}function sign$jscomp$0(num){return 0<num?1:0>num?-1:0}function locallyInside(a,b){return 0>
area(a.prev,a,a.next)?0<=area(a,b,a.next)&&0<=area(a,a.prev,b):0>area(a,b,a.prev)||0>area(a,a.next,b)}function splitPolygon(a,b){var a2=new Node(a.i,a.x,a.y),b2=new Node(b.i,b.x,b.y),an=a.next,bp=b.prev;a.next=b;b.prev=a;a2.next=an;an.prev=a2;b2.next=a2;a2.prev=b2;bp.next=b2;b2.prev=bp;return b2}function insertNode(i,x,y,last){i=new Node(i,x,y);last?(i.next=last.next,i.prev=last,last.next.prev=i,last.next=i):(i.prev=i,i.next=i);return i}function removeNode(p){p.next.prev=p.prev;p.prev.next=p.next;
p.prevZ&&(p.prevZ.nextZ=p.nextZ);p.nextZ&&(p.nextZ.prevZ=p.prevZ)}function Node(i,x,y){this.i=i;this.x=x;this.y=y;this.nextZ=this.prevZ=this.z=this.next=this.prev=null;this.steiner=!1}function removeDupEndPts(points){var l=points.length;2<l&&points[l-1].equals(points[0])&&points.pop()}function addContour(vertices,contour){for(var _i205=0;_i205<contour.length;_i205++)vertices.push(contour[_i205].x),vertices.push(contour[_i205].y)}function ExtrudeGeometry(shapes,options){Geometry.call(this);this.type=
"ExtrudeGeometry";this.parameters={shapes:shapes,options:options};this.fromBufferGeometry(new ExtrudeBufferGeometry(shapes,options));this.mergeVertices()}function ExtrudeBufferGeometry(shapes,options){function addShape(shape){function scalePt2(pt,vec,size){vec||console.error("THREE.ExtrudeGeometry: vec does not exist");return vec.clone().multiplyScalar(size).add(pt)}function getBevelVec(inPt,inPrev,inNext){var v_trans_y=inPt.x-inPrev.x;var shrink_by=inPt.y-inPrev.y;var v_trans_x=inNext.x-inPt.x;var v_next_y=
inNext.y-inPt.y,v_prev_lensq=v_trans_y*v_trans_y+shrink_by*shrink_by;if(Math.abs(v_trans_y*v_next_y-shrink_by*v_trans_x)>Number.EPSILON){var v_prev_len=Math.sqrt(v_prev_lensq),v_next_len=Math.sqrt(v_trans_x*v_trans_x+v_next_y*v_next_y);v_prev_lensq=inPrev.x-shrink_by/v_prev_len;inPrev=inPrev.y+v_trans_y/v_prev_len;v_next_y=((inNext.x-v_next_y/v_next_len-v_prev_lensq)*v_next_y-(inNext.y+v_trans_x/v_next_len-inPrev)*v_trans_x)/(v_trans_y*v_next_y-shrink_by*v_trans_x);v_trans_x=v_prev_lensq+v_trans_y*
v_next_y-inPt.x;v_trans_y=inPrev+shrink_by*v_next_y-inPt.y;shrink_by=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(2>=shrink_by)return new Vector2(v_trans_x,v_trans_y);shrink_by=Math.sqrt(shrink_by/2)}else inPt=!1,v_trans_y>Number.EPSILON?v_trans_x>Number.EPSILON&&(inPt=!0):v_trans_y<-Number.EPSILON?v_trans_x<-Number.EPSILON&&(inPt=!0):Math.sign(shrink_by)===Math.sign(v_next_y)&&(inPt=!0),inPt?(v_trans_x=-shrink_by,shrink_by=Math.sqrt(v_prev_lensq)):(v_trans_x=v_trans_y,v_trans_y=shrink_by,shrink_by=
Math.sqrt(v_prev_lensq/2));return new Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by)}function sidewalls(contour,layeroffset){for(var i=contour.length;0<=--i;){var _j18=i,_k2=i-1;0>_k2&&(_k2=contour.length-1);for(var _s4=0,sl=steps+2*bevelSegments;_s4<sl;_s4++){var slen1=vlen*_s4,slen2=vlen*(_s4+1),b=layeroffset+_k2+slen1,c=layeroffset+_k2+slen2;slen2=layeroffset+_j18+slen2;addVertex(layeroffset+_j18+slen1);addVertex(b);addVertex(slen2);addVertex(b);addVertex(c);addVertex(slen2);slen1=verticesArray.length/
3;slen1=uvgen.generateSideWallUV(scope,verticesArray,slen1-6,slen1-3,slen1-2,slen1-1);addUV(slen1[0]);addUV(slen1[1]);addUV(slen1[3]);addUV(slen1[1]);addUV(slen1[2]);addUV(slen1[3])}}}function v(x,y,z){placeholder.push(x);placeholder.push(y);placeholder.push(z)}function f3(a,b,c){addVertex(a);addVertex(b);addVertex(c);a=verticesArray.length/3;a=uvgen.generateTopUV(scope,verticesArray,a-3,a-2,a-1);addUV(a[0]);addUV(a[1]);addUV(a[2])}function addVertex(index){verticesArray.push(placeholder[3*index]);
verticesArray.push(placeholder[3*index+1]);verticesArray.push(placeholder[3*index+2])}function addUV(vector2){uvArray.push(vector2.x);uvArray.push(vector2.y)}var placeholder=[],curveSegments=void 0!==options.curveSegments?options.curveSegments:12,steps=void 0!==options.steps?options.steps:1,depth=void 0!==options.depth?options.depth:100,bevelEnabled=void 0!==options.bevelEnabled?options.bevelEnabled:!0,bevelThickness=void 0!==options.bevelThickness?options.bevelThickness:6,bevelSize=void 0!==options.bevelSize?
options.bevelSize:bevelThickness-2,bevelOffset=void 0!==options.bevelOffset?options.bevelOffset:0,bevelSegments=void 0!==options.bevelSegments?options.bevelSegments:3,extrudePath=options.extrudePath,uvgen=void 0!==options.UVGenerator?options.UVGenerator:WorldUVGenerator;void 0!==options.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),depth=options.amount);var extrudeByPath=!1;if(extrudePath){var extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=!0;
bevelEnabled=!1;var splineTube=extrudePath.computeFrenetFrames(steps,!1);var binormal=new Vector3;var normal=new Vector3;var position2=new Vector3}bevelEnabled||(bevelOffset=bevelSize=bevelThickness=bevelSegments=0);shape=shape.extractPoints(curveSegments);extrudePath=shape.shape;var holes=shape.holes;if(!ShapeUtils.isClockWise(extrudePath))for(extrudePath=extrudePath.reverse(),shape=0,curveSegments=holes.length;shape<curveSegments;shape++){var ahole=holes[shape];ShapeUtils.isClockWise(ahole)&&(holes[shape]=
ahole.reverse())}var faces=ShapeUtils.triangulateShape(extrudePath,holes),contour$jscomp$0=extrudePath;shape=0;for(curveSegments=holes.length;shape<curveSegments;shape++)extrudePath=extrudePath.concat(holes[shape]);var vlen=extrudePath.length,flen=faces.length;shape=[];curveSegments=0;ahole=contour$jscomp$0.length;for(var j=ahole-1,k=curveSegments+1;curveSegments<ahole;curveSegments++,j++,k++)j===ahole&&(j=0),k===ahole&&(k=0),shape[curveSegments]=getBevelVec(contour$jscomp$0[curveSegments],contour$jscomp$0[j],
contour$jscomp$0[k]);curveSegments=[];ahole=shape.concat();k=0;for(var _hl2=holes.length;k<_hl2;k++){var _ahole2=holes[k];j=[];for(var _i208=0,_il26=_ahole2.length,_j17=_il26-1,_k=_i208+1;_i208<_il26;_i208++,_j17++,_k++)_j17===_il26&&(_j17=0),_k===_il26&&(_k=0),j[_i208]=getBevelVec(_ahole2[_i208],_ahole2[_j17],_ahole2[_k]);curveSegments.push(j);ahole=ahole.concat(j)}for(k=0;k<bevelSegments;k++){j=k/bevelSegments;_hl2=bevelThickness*Math.cos(j*Math.PI/2);_ahole2=bevelSize*Math.sin(j*Math.PI/2)+bevelOffset;
j=0;for(_i208=contour$jscomp$0.length;j<_i208;j++)_il26=scalePt2(contour$jscomp$0[j],shape[j],_ahole2),v(_il26.x,_il26.y,-_hl2);_i208=0;for(_il26=holes.length;_i208<_il26;_i208++){_j17=holes[_i208];j=curveSegments[_i208];_k=0;for(var _il28=_j17.length;_k<_il28;_k++){var _vert=scalePt2(_j17[_k],j[_k],_ahole2);v(_vert.x,_vert.y,-_hl2)}}}j=bevelSize+bevelOffset;for(k=0;k<vlen;k++)_hl2=bevelEnabled?scalePt2(extrudePath[k],ahole[k],j):extrudePath[k],extrudeByPath?(normal.copy(splineTube.normals[0]).multiplyScalar(_hl2.x),
binormal.copy(splineTube.binormals[0]).multiplyScalar(_hl2.y),position2.copy(extrudePts[0]).add(normal).add(binormal),v(position2.x,position2.y,position2.z)):v(_hl2.x,_hl2.y,0);for(k=1;k<=steps;k++)for(_hl2=0;_hl2<vlen;_hl2++)_ahole2=bevelEnabled?scalePt2(extrudePath[_hl2],ahole[_hl2],j):extrudePath[_hl2],extrudeByPath?(normal.copy(splineTube.normals[k]).multiplyScalar(_ahole2.x),binormal.copy(splineTube.binormals[k]).multiplyScalar(_ahole2.y),position2.copy(extrudePts[k]).add(normal).add(binormal),
v(position2.x,position2.y,position2.z)):v(_ahole2.x,_ahole2.y,depth/steps*k);for(splineTube=bevelSegments-1;0<=splineTube;splineTube--){normal=splineTube/bevelSegments;binormal=bevelThickness*Math.cos(normal*Math.PI/2);normal=bevelSize*Math.sin(normal*Math.PI/2)+bevelOffset;position2=0;for(extrudePath=contour$jscomp$0.length;position2<extrudePath;position2++)ahole=scalePt2(contour$jscomp$0[position2],shape[position2],normal),v(ahole.x,ahole.y,depth+binormal);position2=0;for(extrudePath=holes.length;position2<
extrudePath;position2++)for(ahole=holes[position2],j=curveSegments[position2],k=0,_hl2=ahole.length;k<_hl2;k++)_ahole2=scalePt2(ahole[k],j[k],normal),extrudeByPath?v(_ahole2.x,_ahole2.y+extrudePts[steps-1].y,extrudePts[steps-1].x+binormal):v(_ahole2.x,_ahole2.y,depth+binormal)}(function(){var start=verticesArray.length/3;if(bevelEnabled){for(var offset=0*vlen,_i215=0;_i215<flen;_i215++){var face=faces[_i215];f3(face[2]+offset,face[1]+offset,face[0]+offset)}offset=vlen*(steps+2*bevelSegments);for(_i215=
0;_i215<flen;_i215++)face=faces[_i215],f3(face[0]+offset,face[1]+offset,face[2]+offset)}else{for(offset=0;offset<flen;offset++)_i215=faces[offset],f3(_i215[2],_i215[1],_i215[0]);for(offset=0;offset<flen;offset++)_i215=faces[offset],f3(_i215[0]+vlen*steps,_i215[1]+vlen*steps,_i215[2]+vlen*steps)}scope.addGroup(start,verticesArray.length/3-start,0)})();(function(){var start=verticesArray.length/3,layeroffset=0;sidewalls(contour$jscomp$0,layeroffset);layeroffset+=contour$jscomp$0.length;for(var _h5=
0,_hl5=holes.length;_h5<_hl5;_h5++){var _ahole5=holes[_h5];sidewalls(_ahole5,layeroffset);layeroffset+=_ahole5.length}scope.addGroup(start,verticesArray.length/3-start,1)})()}BufferGeometry.call(this);this.type="ExtrudeBufferGeometry";this.parameters={shapes:shapes,options:options};shapes=Array.isArray(shapes)?shapes:[shapes];for(var scope=this,verticesArray=[],uvArray=[],_i206=0,l=shapes.length;_i206<l;_i206++)addShape(shapes[_i206]);this.setAttribute("position",new Float32BufferAttribute(verticesArray,
3));this.setAttribute("uv",new Float32BufferAttribute(uvArray,2));this.computeVertexNormals()}function toJSON(shapes,options,data){data.shapes=[];if(Array.isArray(shapes))for(var _i219=0,l=shapes.length;_i219<l;_i219++)data.shapes.push(shapes[_i219].uuid);else data.shapes.push(shapes.uuid);void 0!==options.extrudePath&&(data.options.extrudePath=options.extrudePath.toJSON());return data}function TextGeometry(text,parameters){Geometry.call(this);this.type="TextGeometry";this.parameters={text:text,parameters:parameters};
this.fromBufferGeometry(new TextBufferGeometry(text,parameters));this.mergeVertices()}function TextBufferGeometry(text,parameters){parameters=parameters||{};var font=parameters.font;if(!font||!font.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Geometry;text=font.generateShapes(text,parameters.size);parameters.depth=void 0!==parameters.height?parameters.height:50;void 0===parameters.bevelThickness&&(parameters.bevelThickness=10);void 0===parameters.bevelSize&&
(parameters.bevelSize=8);void 0===parameters.bevelEnabled&&(parameters.bevelEnabled=!1);ExtrudeBufferGeometry.call(this,text,parameters);this.type="TextBufferGeometry"}function SphereGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){Geometry.call(this);this.type="SphereGeometry";this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new SphereBufferGeometry(radius,
widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength));this.mergeVertices()}function SphereBufferGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){BufferGeometry.call(this);this.type="SphereBufferGeometry";this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};radius=radius||1;widthSegments=Math.max(3,Math.floor(widthSegments)||
8);heightSegments=Math.max(2,Math.floor(heightSegments)||6);phiStart=void 0!==phiStart?phiStart:0;phiLength=void 0!==phiLength?phiLength:2*Math.PI;thetaStart=void 0!==thetaStart?thetaStart:0;thetaLength=void 0!==thetaLength?thetaLength:Math.PI;for(var thetaEnd=Math.min(thetaStart+thetaLength,Math.PI),index=0,grid=[],vertex=new Vector3,normal=new Vector3,indices=[],vertices=[],normals=[],uvs=[],iy=0;iy<=heightSegments;iy++){var verticesRow=[],v=iy/heightSegments,uOffset=0;0==iy&&0==thetaStart?uOffset=
.5/widthSegments:iy==heightSegments&&thetaEnd==Math.PI&&(uOffset=-.5/widthSegments);for(var ix=0;ix<=widthSegments;ix++){var u=ix/widthSegments;vertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertices.push(vertex.x,vertex.y,vertex.z);normal.copy(vertex).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(u+uOffset,1-v);verticesRow.push(index++)}grid.push(verticesRow)}for(radius=
0;radius<heightSegments;radius++)for(phiStart=0;phiStart<widthSegments;phiStart++)phiLength=grid[radius][phiStart+1],thetaLength=grid[radius][phiStart],index=grid[radius+1][phiStart],vertex=grid[radius+1][phiStart+1],(0!==radius||0<thetaStart)&&indices.push(phiLength,thetaLength,vertex),(radius!==heightSegments-1||thetaEnd<Math.PI)&&indices.push(thetaLength,index,vertex);this.setIndex(indices);this.setAttribute("position",new Float32BufferAttribute(vertices,3));this.setAttribute("normal",new Float32BufferAttribute(normals,
3));this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}function RingGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){Geometry.call(this);this.type="RingGeometry";this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new RingBufferGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength));this.mergeVertices()}
function RingBufferGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){BufferGeometry.call(this);this.type="RingBufferGeometry";this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};innerRadius=innerRadius||.5;outerRadius=outerRadius||1;thetaStart=void 0!==thetaStart?thetaStart:0;thetaLength=void 0!==thetaLength?thetaLength:2*Math.PI;thetaSegments=void 0!==thetaSegments?
Math.max(3,thetaSegments):8;phiSegments=void 0!==phiSegments?Math.max(1,phiSegments):1;var indices=[],vertices=[],normals=[],uvs=[],radius=innerRadius;innerRadius=(outerRadius-innerRadius)/phiSegments;for(var vertex=new Vector3,uv=new Vector2,j=0;j<=phiSegments;j++){for(var _i220=0;_i220<=thetaSegments;_i220++){var segment=thetaStart+_i220/thetaSegments*thetaLength;vertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);normals.push(0,0,1);uv.x=
(vertex.x/outerRadius+1)/2;uv.y=(vertex.y/outerRadius+1)/2;uvs.push(uv.x,uv.y)}radius+=innerRadius}for(outerRadius=0;outerRadius<phiSegments;outerRadius++)for(thetaStart=outerRadius*(thetaSegments+1),thetaLength=0;thetaLength<thetaSegments;thetaLength++)radius=thetaLength+thetaStart,innerRadius=radius+thetaSegments+1,vertex=radius+thetaSegments+2,uv=radius+1,indices.push(radius,innerRadius,uv),indices.push(innerRadius,vertex,uv);this.setIndex(indices);this.setAttribute("position",new Float32BufferAttribute(vertices,
3));this.setAttribute("normal",new Float32BufferAttribute(normals,3));this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}function LatheGeometry(points,segments,phiStart,phiLength){Geometry.call(this);this.type="LatheGeometry";this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};this.fromBufferGeometry(new LatheBufferGeometry(points,segments,phiStart,phiLength));this.mergeVertices()}function LatheBufferGeometry(points,segments,phiStart,phiLength){BufferGeometry.call(this);
this.type="LatheBufferGeometry";this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};segments=Math.floor(segments)||12;phiStart=phiStart||0;phiLength=phiLength||2*Math.PI;phiLength=MathUtils.clamp(phiLength,0,2*Math.PI);for(var indices=[],vertices=[],uvs=[],inverseSegments=1/segments,vertex=new Vector3,uv=new Vector2,_i222=0;_i222<=segments;_i222++){var phi=phiStart+_i222*inverseSegments*phiLength,sin=Math.sin(phi);phi=Math.cos(phi);for(var j=0;j<=points.length-
1;j++)vertex.x=points[j].x*sin,vertex.y=points[j].y,vertex.z=points[j].x*phi,vertices.push(vertex.x,vertex.y,vertex.z),uv.x=_i222/segments,uv.y=j/(points.length-1),uvs.push(uv.x,uv.y)}for(phiStart=0;phiStart<segments;phiStart++)for(inverseSegments=0;inverseSegments<points.length-1;inverseSegments++)vertex=inverseSegments+phiStart*points.length,uv=vertex+points.length,_i222=vertex+points.length+1,sin=vertex+1,indices.push(vertex,uv,sin),indices.push(uv,_i222,sin);this.setIndex(indices);this.setAttribute("position",
new Float32BufferAttribute(vertices,3));this.setAttribute("uv",new Float32BufferAttribute(uvs,2));this.computeVertexNormals();if(phiLength===2*Math.PI)for(phiLength=this.attributes.normal.array,indices=new Vector3,vertices=new Vector3,uvs=new Vector3,segments=segments*points.length*3,inverseSegments=phiStart=0;phiStart<points.length;phiStart++,inverseSegments+=3)indices.x=phiLength[inverseSegments+0],indices.y=phiLength[inverseSegments+1],indices.z=phiLength[inverseSegments+2],vertices.x=phiLength[segments+
inverseSegments+0],vertices.y=phiLength[segments+inverseSegments+1],vertices.z=phiLength[segments+inverseSegments+2],uvs.addVectors(indices,vertices).normalize(),phiLength[inverseSegments+0]=phiLength[segments+inverseSegments+0]=uvs.x,phiLength[inverseSegments+1]=phiLength[segments+inverseSegments+1]=uvs.y,phiLength[inverseSegments+2]=phiLength[segments+inverseSegments+2]=uvs.z}function ShapeGeometry(shapes,curveSegments){Geometry.call(this);this.type="ShapeGeometry";"object"===_typeof(curveSegments)&&
(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),curveSegments=curveSegments.curveSegments);this.parameters={shapes:shapes,curveSegments:curveSegments};this.fromBufferGeometry(new ShapeBufferGeometry(shapes,curveSegments));this.mergeVertices()}function ShapeBufferGeometry(shapes,curveSegments){function addShape(shape){var indexOffset=vertices.length/3,points=shape.extractPoints(curveSegments);shape=points.shape;var shapeHoles=points.holes;!1===ShapeUtils.isClockWise(shape)&&
(shape=shape.reverse());points=0;for(var l=shapeHoles.length;points<l;points++){var shapeHole=shapeHoles[points];!0===ShapeUtils.isClockWise(shapeHole)&&(shapeHoles[points]=shapeHole.reverse())}points=ShapeUtils.triangulateShape(shape,shapeHoles);l=0;for(shapeHole=shapeHoles.length;l<shapeHole;l++)shape=shape.concat(shapeHoles[l]);shapeHoles=0;for(l=shape.length;shapeHoles<l;shapeHoles++)shapeHole=shape[shapeHoles],vertices.push(shapeHole.x,shapeHole.y,0),normals.push(0,0,1),uvs.push(shapeHole.x,
shapeHole.y);shape=0;for(shapeHoles=points.length;shape<shapeHoles;shape++)l=points[shape],indices.push(l[0]+indexOffset,l[1]+indexOffset,l[2]+indexOffset),groupCount+=3}BufferGeometry.call(this);this.type="ShapeBufferGeometry";this.parameters={shapes:shapes,curveSegments:curveSegments};curveSegments=curveSegments||12;var indices=[],vertices=[],normals=[],uvs=[],groupStart=0,groupCount=0;if(!1===Array.isArray(shapes))addShape(shapes);else for(var _i225=0;_i225<shapes.length;_i225++)addShape(shapes[_i225]),
this.addGroup(groupStart,groupCount,_i225),groupStart+=groupCount,groupCount=0;this.setIndex(indices);this.setAttribute("position",new Float32BufferAttribute(vertices,3));this.setAttribute("normal",new Float32BufferAttribute(normals,3));this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}function toJSON$1(shapes,data){data.shapes=[];if(Array.isArray(shapes))for(var _i230=0,l=shapes.length;_i230<l;_i230++)data.shapes.push(shapes[_i230].uuid);else data.shapes.push(shapes.uuid);return data}function EdgesGeometry(geometry,
thresholdAngle){BufferGeometry.call(this);this.type="EdgesGeometry";this.parameters={thresholdAngle:thresholdAngle};var vertices=[];thresholdAngle=Math.cos(MathUtils.DEG2RAD*(void 0!==thresholdAngle?thresholdAngle:1));var edge=[0,0],edges={},keys=["a","b","c"];if(geometry.isBufferGeometry){var geometry2=new Geometry;geometry2.fromBufferGeometry(geometry)}else geometry2=geometry.clone();geometry2.mergeVertices();geometry2.computeFaceNormals();geometry=geometry2.vertices;geometry2=geometry2.faces;for(var _i231=
0,l=geometry2.length;_i231<l;_i231++)for(var face=geometry2[_i231],j=0;3>j;j++){var edge1=face[keys[j]];var edge2=face[keys[(j+1)%3]];edge[0]=Math.min(edge1,edge2);edge[1]=Math.max(edge1,edge2);edge1=edge[0]+","+edge[1];void 0===edges[edge1]?edges[edge1]={index1:edge[0],index2:edge[1],face1:_i231,face2:void 0}:edges[edge1].face2=_i231}for(edge1 in edges)if(edge=edges[edge1],void 0===edge.face2||geometry2[edge.face1].normal.dot(geometry2[edge.face2].normal)<=thresholdAngle)keys=geometry[edge.index1],
vertices.push(keys.x,keys.y,keys.z),keys=geometry[edge.index2],vertices.push(keys.x,keys.y,keys.z);this.setAttribute("position",new Float32BufferAttribute(vertices,3))}function CylinderGeometry(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){Geometry.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,
thetaLength:thetaLength};this.fromBufferGeometry(new CylinderBufferGeometry(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength));this.mergeVertices()}function CylinderBufferGeometry(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){function generateCap(top){var centerIndexEnd,uv=new Vector2,vertex=new Vector3,groupCount=0,radius=!0===top?radiusTop:radiusBottom,sign=!0===top?1:-1;var centerIndexStart=index;for(centerIndexEnd=
1;centerIndexEnd<=radialSegments;centerIndexEnd++)vertices.push(0,halfHeight*sign,0),normals.push(0,sign,0),uvs.push(.5,.5),index++;centerIndexEnd=index;for(var _x3=0;_x3<=radialSegments;_x3++){var theta=_x3/radialSegments*thetaLength+thetaStart,cosTheta=Math.cos(theta);theta=Math.sin(theta);vertex.x=radius*theta;vertex.y=halfHeight*sign;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);normals.push(0,sign,0);uv.x=.5*cosTheta+.5;uv.y=.5*theta*sign+.5;uvs.push(uv.x,uv.y);index++}for(uv=
0;uv<radialSegments;uv++)vertex=centerIndexStart+uv,radius=centerIndexEnd+uv,!0===top?indices.push(radius,radius+1,vertex):indices.push(radius+1,radius,vertex),groupCount+=3;scope.addGroup(groupStart,groupCount,!0===top?1:2);groupStart+=groupCount}BufferGeometry.call(this);this.type="CylinderBufferGeometry";this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};
var scope=this;radiusTop=void 0!==radiusTop?radiusTop:1;radiusBottom=void 0!==radiusBottom?radiusBottom:1;height=height||1;radialSegments=Math.floor(radialSegments)||8;heightSegments=Math.floor(heightSegments)||1;openEnded=void 0!==openEnded?openEnded:!1;thetaStart=void 0!==thetaStart?thetaStart:0;thetaLength=void 0!==thetaLength?thetaLength:2*Math.PI;var indices=[],vertices=[],normals=[],uvs=[],index=0,indexArray=[],halfHeight=height/2,groupStart=0;(function(){for(var normal=new Vector3,vertex=new Vector3,
groupCount=0,slope=(radiusBottom-radiusTop)/height,y=0;y<=heightSegments;y++){for(var indexRow=[],v=y/heightSegments,radius=v*(radiusBottom-radiusTop)+radiusTop,x=0;x<=radialSegments;x++){var u=x/radialSegments,theta=u*thetaLength+thetaStart,sinTheta=Math.sin(theta);theta=Math.cos(theta);vertex.x=radius*sinTheta;vertex.y=-v*height+halfHeight;vertex.z=radius*theta;vertices.push(vertex.x,vertex.y,vertex.z);normal.set(sinTheta,slope,theta).normalize();normals.push(normal.x,normal.y,normal.z);uvs.push(u,
1-v);indexRow.push(index++)}indexArray.push(indexRow)}for(normal=0;normal<radialSegments;normal++)for(vertex=0;vertex<heightSegments;vertex++)slope=indexArray[vertex+1][normal],y=indexArray[vertex+1][normal+1],indexRow=indexArray[vertex][normal+1],indices.push(indexArray[vertex][normal],slope,indexRow),indices.push(slope,y,indexRow),groupCount+=6;scope.addGroup(groupStart,groupCount,0);groupStart+=groupCount})();!1===openEnded&&(0<radiusTop&&generateCap(!0),0<radiusBottom&&generateCap(!1));this.setIndex(indices);
this.setAttribute("position",new Float32BufferAttribute(vertices,3));this.setAttribute("normal",new Float32BufferAttribute(normals,3));this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}function ConeGeometry(radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){CylinderGeometry.call(this,0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type="ConeGeometry";this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,
openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength}}function ConeBufferGeometry(radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){CylinderBufferGeometry.call(this,0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type="ConeBufferGeometry";this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength}}function CircleGeometry(radius,
segments,thetaStart,thetaLength){Geometry.call(this);this.type="CircleGeometry";this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new CircleBufferGeometry(radius,segments,thetaStart,thetaLength));this.mergeVertices()}function CircleBufferGeometry(radius,segments,thetaStart,thetaLength){BufferGeometry.call(this);this.type="CircleBufferGeometry";this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};
radius=radius||1;segments=void 0!==segments?Math.max(3,segments):8;thetaStart=void 0!==thetaStart?thetaStart:0;thetaLength=void 0!==thetaLength?thetaLength:2*Math.PI;var indices=[],vertices=[],normals=[],uvs=[],vertex=new Vector3,uv=new Vector2;vertices.push(0,0,0);normals.push(0,0,1);uvs.push(.5,.5);for(var s=0,_i233=3;s<=segments;s++,_i233+=3){var segment=thetaStart+s/segments*thetaLength;vertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);
normals.push(0,0,1);uv.x=(vertices[_i233]/radius+1)/2;uv.y=(vertices[_i233+1]/radius+1)/2;uvs.push(uv.x,uv.y)}for(radius=1;radius<=segments;radius++)indices.push(radius,radius+1,0);this.setIndex(indices);this.setAttribute("position",new Float32BufferAttribute(vertices,3));this.setAttribute("normal",new Float32BufferAttribute(normals,3));this.setAttribute("uv",new Float32BufferAttribute(uvs,2))}function ShadowMaterial(parameters){Material.call(this);this.type="ShadowMaterial";this.color=new Color(0);
this.transparent=!0;this.setValues(parameters)}function RawShaderMaterial(parameters){ShaderMaterial.call(this,parameters);this.type="RawShaderMaterial"}function MeshStandardMaterial(parameters){Material.call(this);this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new Color(16777215);this.roughness=1;this.metalness=0;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new Color(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=
null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexTangents=this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(parameters)}
function MeshPhysicalMaterial(parameters){MeshStandardMaterial.call(this);this.defines={STANDARD:"",PHYSICAL:""};this.type="MeshPhysicalMaterial";this.clearcoat=0;this.clearcoatMap=null;this.clearcoatRoughness=0;this.clearcoatRoughnessMap=null;this.clearcoatNormalScale=new Vector2(1,1);this.clearcoatNormalMap=null;this.reflectivity=.5;this.sheen=null;this.transparency=0;this.setValues(parameters)}function MeshPhongMaterial(parameters){Material.call(this);this.type="MeshPhongMaterial";this.color=new Color(16777215);
this.specular=new Color(1118481);this.shininess=30;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new Color(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=MultiplyOperation;this.reflectivity=
1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(parameters)}function MeshToonMaterial(parameters){Material.call(this);this.defines={TOON:""};this.type="MeshToonMaterial";this.color=new Color(16777215);this.lightMap=this.gradientMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new Color(0);this.emissiveIntensity=
1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(parameters)}function MeshNormalMaterial(parameters){Material.call(this);this.type="MeshNormalMaterial";
this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.fog=!1;this.setValues(parameters)}function MeshLambertMaterial(parameters){Material.call(this);this.type="MeshLambertMaterial";this.color=new Color(16777215);this.lightMap=this.map=null;this.lightMapIntensity=
1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new Color(0);this.emissiveIntensity=1;this.envMap=this.alphaMap=this.specularMap=this.emissiveMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(parameters)}function MeshMatcapMaterial(parameters){Material.call(this);this.defines={MATCAP:""};this.type=
"MeshMatcapMaterial";this.color=new Color(16777215);this.bumpMap=this.map=this.matcap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(parameters)}function LineDashedMaterial(parameters){LineBasicMaterial.call(this);this.type="LineDashedMaterial";this.scale=1;this.dashSize=
3;this.gapSize=1;this.setValues(parameters)}function Interpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){this.parameterPositions=parameterPositions;this._cachedIndex=0;this.resultBuffer=void 0!==resultBuffer?resultBuffer:new sampleValues.constructor(sampleSize);this.sampleValues=sampleValues;this.valueSize=sampleSize}function CubicInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);this._offsetNext=
this._weightNext=this._offsetPrev=this._weightPrev=-0}function LinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer)}function DiscreteInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer)}function KeyframeTrack(name,times,values,interpolation){if(void 0===name)throw Error("THREE.KeyframeTrack: track name is undefined");
if(void 0===times||0===times.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+name);this.name=name;this.times=AnimationUtils.convertArray(times,this.TimeBufferType);this.values=AnimationUtils.convertArray(values,this.ValueBufferType);this.setInterpolation(interpolation||this.DefaultInterpolation)}function BooleanKeyframeTrack(name,times,values){KeyframeTrack.call(this,name,times,values)}function ColorKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,
times,values,interpolation)}function NumberKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation)}function QuaternionLinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer)}function QuaternionKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation)}function StringKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,
name,times,values,interpolation)}function VectorKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation)}function AnimationClip(name,duration,tracks,blendMode){this.name=name;this.tracks=tracks;this.duration=void 0!==duration?duration:-1;this.blendMode=void 0!==blendMode?blendMode:NormalAnimationBlendMode;this.uuid=MathUtils.generateUUID();0>this.duration&&this.resetDuration()}function getTrackTypeForValueTypeName(typeName){switch(typeName.toLowerCase()){case "scalar":case "double":case "float":case "number":case "integer":return NumberKeyframeTrack;
case "vector":case "vector2":case "vector3":case "vector4":return VectorKeyframeTrack;case "color":return ColorKeyframeTrack;case "quaternion":return QuaternionKeyframeTrack;case "bool":case "boolean":return BooleanKeyframeTrack;case "string":return StringKeyframeTrack}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+typeName);}function parseKeyframeTrack(json){if(void 0===json.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");var trackType=getTrackTypeForValueTypeName(json.type);
if(void 0===json.times){var times=[],values=[];AnimationUtils.flattenJSON(json.keys,times,values,"value");json.times=times;json.values=values}return void 0!==trackType.parse?trackType.parse(json):new trackType(json.name,json.times,json.values,json.interpolation)}function LoadingManager(onLoad,onProgress,onError){var scope=this,isLoading=!1,itemsLoaded=0,itemsTotal=0,urlModifier=void 0,handlers=[];this.onStart=void 0;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.itemStart=
function(url){itemsTotal++;if(!1===isLoading&&void 0!==scope.onStart)scope.onStart(url,itemsLoaded,itemsTotal);isLoading=!0};this.itemEnd=function(url){itemsLoaded++;if(void 0!==scope.onProgress)scope.onProgress(url,itemsLoaded,itemsTotal);if(itemsLoaded===itemsTotal&&(isLoading=!1,void 0!==scope.onLoad))scope.onLoad()};this.itemError=function(url){if(void 0!==scope.onError)scope.onError(url)};this.resolveURL=function(url){return urlModifier?urlModifier(url):url};this.setURLModifier=function(transform){urlModifier=
transform;return this};this.addHandler=function(regex,loader){handlers.push(regex,loader);return this};this.removeHandler=function(regex){regex=handlers.indexOf(regex);-1!==regex&&handlers.splice(regex,2);return this};this.getHandler=function(file){for(var _i259=0,l=handlers.length;_i259<l;_i259+=2){var regex=handlers[_i259],loader=handlers[_i259+1];regex.global&&(regex.lastIndex=0);if(regex.test(file))return loader}return null}}function Loader(manager){this.manager=void 0!==manager?manager:DefaultLoadingManager;
this.crossOrigin="anonymous";this.resourcePath=this.path="";this.requestHeader={}}function FileLoader(manager){Loader.call(this,manager)}function AnimationLoader(manager){Loader.call(this,manager)}function CompressedTextureLoader(manager){Loader.call(this,manager)}function DataTextureLoader(manager){Loader.call(this,manager)}function ImageLoader(manager){Loader.call(this,manager)}function CubeTextureLoader(manager){Loader.call(this,manager)}function TextureLoader(manager){Loader.call(this,manager)}
function Curve(){this.type="Curve";this.arcLengthDivisions=200}function EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){Curve.call(this);this.type="EllipseCurve";this.aX=aX||0;this.aY=aY||0;this.xRadius=xRadius||1;this.yRadius=yRadius||1;this.aStartAngle=aStartAngle||0;this.aEndAngle=aEndAngle||2*Math.PI;this.aClockwise=aClockwise||!1;this.aRotation=aRotation||0}function ArcCurve(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){EllipseCurve.call(this,aX,aY,aRadius,aRadius,
aStartAngle,aEndAngle,aClockwise);this.type="ArcCurve"}function CubicPoly(){var c0=0,c1=0,c2=0,c3=0;return{initCatmullRom:function(x0,x1,x2,x3,tension){x0=tension*(x2-x0);x3=tension*(x3-x1);c0=x1;c1=x0;c2=-3*x1+3*x2-2*x0-x3;c3=2*x1-2*x2+x0+x3},initNonuniformCatmullRom:function(x0,x1,x2,x3,dt0,dt1,dt2){x0=((x1-x0)/dt0-(x2-x0)/(dt0+dt1)+(x2-x1)/dt1)*dt1;x3=((x2-x1)/dt1-(x3-x1)/(dt1+dt2)+(x3-x2)/dt2)*dt1;c0=x1;c1=x0;c2=-3*x1+3*x2-2*x0-x3;c3=2*x1-2*x2+x0+x3},calc:function(t){var t2=t*t;return c0+c1*t+
c2*t2+c3*t2*t}}}function CatmullRomCurve3(points,closed,curveType,tension){Curve.call(this);this.type="CatmullRomCurve3";this.points=points||[];this.closed=closed||!1;this.curveType=curveType||"centripetal";this.tension=tension||.5}function CatmullRom(t,p0,p1,p2,p3){p0=.5*(p2-p0);p3=.5*(p3-p1);var t2=t*t;return(2*p1-2*p2+p0+p3)*t*t2+(-3*p1+3*p2-2*p0-p3)*t2+p0*t+p1}function QuadraticBezier(t,p0,p1,p2){var k=1-t;return k*k*p0+2*(1-t)*t*p1+t*t*p2}function CubicBezier(t,p0,p1,p2,p3){var k=1-t,k$jscomp$0=
1-t;return k*k*k*p0+3*k$jscomp$0*k$jscomp$0*t*p1+3*(1-t)*t*t*p2+t*t*t*p3}function CubicBezierCurve(v0,v1,v2,v3){Curve.call(this);this.type="CubicBezierCurve";this.v0=v0||new Vector2;this.v1=v1||new Vector2;this.v2=v2||new Vector2;this.v3=v3||new Vector2}function CubicBezierCurve3(v0,v1,v2,v3){Curve.call(this);this.type="CubicBezierCurve3";this.v0=v0||new Vector3;this.v1=v1||new Vector3;this.v2=v2||new Vector3;this.v3=v3||new Vector3}function LineCurve(v1,v2){Curve.call(this);this.type="LineCurve";
this.v1=v1||new Vector2;this.v2=v2||new Vector2}function LineCurve3(v1,v2){Curve.call(this);this.type="LineCurve3";this.v1=v1||new Vector3;this.v2=v2||new Vector3}function QuadraticBezierCurve(v0,v1,v2){Curve.call(this);this.type="QuadraticBezierCurve";this.v0=v0||new Vector2;this.v1=v1||new Vector2;this.v2=v2||new Vector2}function QuadraticBezierCurve3(v0,v1,v2){Curve.call(this);this.type="QuadraticBezierCurve3";this.v0=v0||new Vector3;this.v1=v1||new Vector3;this.v2=v2||new Vector3}function SplineCurve(points){Curve.call(this);
this.type="SplineCurve";this.points=points||[]}function CurvePath(){Curve.call(this);this.type="CurvePath";this.curves=[];this.autoClose=!1}function Path(points){CurvePath.call(this);this.type="Path";this.currentPoint=new Vector2;points&&this.setFromPoints(points)}function Shape(points){Path.call(this,points);this.uuid=MathUtils.generateUUID();this.type="Shape";this.holes=[]}function Light(color,intensity){Object3D.call(this);this.type="Light";this.color=new Color(color);this.intensity=void 0!==intensity?
intensity:1;this.receiveShadow=void 0}function HemisphereLight(skyColor,groundColor,intensity){Light.call(this,skyColor,intensity);this.type="HemisphereLight";this.castShadow=void 0;this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.groundColor=new Color(groundColor)}function LightShadow(camera){this.camera=camera;this.normalBias=this.bias=0;this.radius=1;this.mapSize=new Vector2(512,512);this.mapPass=this.map=null;this.matrix=new Matrix4;this.autoUpdate=!0;this.needsUpdate=!1;this._frustum=
new Frustum;this._frameExtents=new Vector2(1,1);this._viewportCount=1;this._viewports=[new Vector4(0,0,1,1)]}function SpotLightShadow(){LightShadow.call(this,new PerspectiveCamera(50,1,.5,500))}function SpotLight(color,intensity,distance,angle,penumbra,decay){Light.call(this,color,intensity);this.type="SpotLight";this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D;Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(power){this.intensity=
power/Math.PI}});this.distance=void 0!==distance?distance:0;this.angle=void 0!==angle?angle:Math.PI/3;this.penumbra=void 0!==penumbra?penumbra:0;this.decay=void 0!==decay?decay:1;this.shadow=new SpotLightShadow}function PointLightShadow(){LightShadow.call(this,new PerspectiveCamera(90,1,.5,500));this._frameExtents=new Vector2(4,2);this._viewportCount=6;this._viewports=[new Vector4(2,1,1,1),new Vector4(0,1,1,1),new Vector4(3,1,1,1),new Vector4(1,1,1,1),new Vector4(3,0,1,1),new Vector4(1,0,1,1)];this._cubeDirections=
[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)];this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)]}function PointLight(color,intensity,distance,decay){Light.call(this,color,intensity);this.type="PointLight";Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(power){this.intensity=power/(4*Math.PI)}});this.distance=
void 0!==distance?distance:0;this.decay=void 0!==decay?decay:1;this.shadow=new PointLightShadow}function OrthographicCamera(left,right,top,bottom,near,far){Camera.call(this);this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=void 0!==left?left:-1;this.right=void 0!==right?right:1;this.top=void 0!==top?top:1;this.bottom=void 0!==bottom?bottom:-1;this.near=void 0!==near?near:.1;this.far=void 0!==far?far:2E3;this.updateProjectionMatrix()}function DirectionalLightShadow(){LightShadow.call(this,
new OrthographicCamera(-5,5,5,-5,.5,500))}function DirectionalLight(color,intensity){Light.call(this,color,intensity);this.type="DirectionalLight";this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D;this.shadow=new DirectionalLightShadow}function AmbientLight(color,intensity){Light.call(this,color,intensity);this.type="AmbientLight";this.castShadow=void 0}function RectAreaLight(color,intensity,width,height){Light.call(this,color,intensity);this.type="RectAreaLight";
this.width=void 0!==width?width:10;this.height=void 0!==height?height:10}function SphericalHarmonics3(){this.coefficients=[];for(var _i290=0;9>_i290;_i290++)this.coefficients.push(new Vector3)}function LightProbe(sh,intensity){Light.call(this,void 0,intensity);this.type="LightProbe";this.sh=void 0!==sh?sh:new SphericalHarmonics3}function MaterialLoader(manager){Loader.call(this,manager);this.textures={}}function InstancedBufferGeometry(){BufferGeometry.call(this);this.type="InstancedBufferGeometry";
this.instanceCount=Infinity}function InstancedBufferAttribute(array,itemSize,normalized,meshPerAttribute){"number"===typeof normalized&&(meshPerAttribute=normalized,normalized=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));BufferAttribute.call(this,array,itemSize,normalized);this.meshPerAttribute=meshPerAttribute||1}function BufferGeometryLoader(manager){Loader.call(this,manager)}function ObjectLoader(manager){Loader.call(this,manager)}
function ImageBitmapLoader(manager){"undefined"===typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported.");"undefined"===typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported.");Loader.call(this,manager);this.options={premultiplyAlpha:"none"}}function ShapePath(){this.type="ShapePath";this.color=new Color;this.subPaths=[];this.currentPath=null}function Font(data){this.type="Font";this.data=data}function FontLoader(manager){Loader.call(this,
manager)}function AudioLoader(manager){Loader.call(this,manager)}function HemisphereLightProbe(skyColor,groundColor,intensity){LightProbe.call(this,void 0,intensity);skyColor=(new Color).set(skyColor);intensity=(new Color).set(groundColor);groundColor=new Vector3(skyColor.r,skyColor.g,skyColor.b);skyColor=new Vector3(intensity.r,intensity.g,intensity.b);intensity=Math.sqrt(Math.PI);var c1=intensity*Math.sqrt(.75);this.sh.coefficients[0].copy(groundColor).add(skyColor).multiplyScalar(intensity);this.sh.coefficients[1].copy(groundColor).sub(skyColor).multiplyScalar(c1)}
function AmbientLightProbe(color,intensity){LightProbe.call(this,void 0,intensity);color=(new Color).set(color);this.sh.coefficients[0].set(color.r,color.g,color.b).multiplyScalar(2*Math.sqrt(Math.PI))}function StereoCamera(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;this.cameraL=new PerspectiveCamera;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new PerspectiveCamera;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1;this._cache={focus:null,
fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}function Clock(autoStart){this.autoStart=void 0!==autoStart?autoStart:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1}function AudioListener(){Object3D.call(this);this.type="AudioListener";this.context=AudioContext.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0;this._clock=new Clock}function Audio(listener){Object3D.call(this);this.type="Audio";
this.listener=listener;this.context=listener.context;this.gain=this.context.createGain();this.gain.connect(listener.getInput());this.autoplay=!1;this.buffer=null;this.detune=0;this.loop=!1;this.offset=this.loopEnd=this.loopStart=0;this.duration=void 0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.sourceType="empty";this._progress=this._startedAt=0;this.filters=[]}function PositionalAudio(listener){Audio.call(this,listener);this.panner=this.context.createPanner();this.panner.panningModel=
"HRTF";this.panner.connect(this.gain)}function AudioAnalyser(audio,fftSize){this.analyser=audio.context.createAnalyser();this.analyser.fftSize=void 0!==fftSize?fftSize:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);audio.getOutput().connect(this.analyser)}function PropertyMixer(binding,typeName,valueSize){this.binding=binding;this.valueSize=valueSize;switch(typeName){case "quaternion":binding=this._slerp;typeName=this._slerpAdditive;var setIdentity=this._setAdditiveIdentityQuaternion;
this.buffer=new Float64Array(6*valueSize);this._workIndex=5;break;case "string":case "bool":typeName=binding=this._select;setIdentity=this._setAdditiveIdentityOther;this.buffer=Array(5*valueSize);break;default:binding=this._lerp,typeName=this._lerpAdditive,setIdentity=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*valueSize)}this._mixBufferRegion=binding;this._mixBufferRegionAdditive=typeName;this._setIdentity=setIdentity;this._origIndex=3;this._addIndex=4;this.referenceCount=this.useCount=
this.cumulativeWeightAdditive=this.cumulativeWeight=0}function Composite(targetGroup,path,optionalParsedPath){optionalParsedPath=optionalParsedPath||PropertyBinding.parseTrackName(path);this._targetGroup=targetGroup;this._bindings=targetGroup.subscribe_(path,optionalParsedPath)}function PropertyBinding(rootNode,path,parsedPath){this.path=path;this.parsedPath=parsedPath||PropertyBinding.parseTrackName(path);this.node=PropertyBinding.findNode(rootNode,this.parsedPath.nodeName)||rootNode;this.rootNode=
rootNode}function AnimationObjectGroup(){this.uuid=MathUtils.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var indices={};this._indicesByUUID=indices;for(var _i336=0,n=arguments.length;_i336!==n;++_i336)indices[arguments[_i336].uuid]=_i336;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var scope=this;this.stats={objects:{get total(){return scope._objects.length},get inUse(){return this.total-scope.nCachedObjects_}},
get bindingsPerObject(){return scope._bindings.length}}}function AnimationAction(mixer,clip,localRoot,blendMode){this._mixer=mixer;this._clip=clip;this._localRoot=localRoot||null;this.blendMode=blendMode||clip.blendMode;mixer=clip.tracks;clip=mixer.length;localRoot=Array(clip);blendMode={endingStart:2400,endingEnd:2400};for(var _i341=0;_i341!==clip;++_i341){var interpolant=mixer[_i341].createInterpolant(null);localRoot[_i341]=interpolant;interpolant.settings=blendMode}this._interpolantSettings=blendMode;
this._interpolants=localRoot;this._propertyBindings=Array(clip);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=2201;this._loopCount=-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0}function AnimationMixer(root){this._root=root;this._initMemoryManager();
this.time=this._accuIndex=0;this.timeScale=1}function Uniform(value,JSCompiler_OptimizeArgumentsArray_p6){"string"===typeof value&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),value=JSCompiler_OptimizeArgumentsArray_p6);this.value=value}function InstancedInterleavedBuffer(array,stride,meshPerAttribute){InterleavedBuffer.call(this,array,stride);this.meshPerAttribute=meshPerAttribute||1}function Raycaster(origin,direction,near,far){this.ray=new Ray(origin,direction);this.near=
near||0;this.far=far||Infinity;this.camera=null;this.layers=new Layers;this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})}function ascSort(a,b){return a.distance-b.distance}function _intersectObject(object,raycaster,intersects,recursive){object.layers.test(raycaster.layers)&&object.raycast(raycaster,
intersects);if(!0===recursive){object=object.children;recursive=0;for(var l=object.length;recursive<l;recursive++)_intersectObject(object[recursive],raycaster,intersects,!0)}}function Spherical(radius,phi,theta){this.radius=void 0!==radius?radius:1;this.phi=void 0!==phi?phi:0;this.theta=void 0!==theta?theta:0;return this}function Cylindrical(radius,theta,y){this.radius=void 0!==radius?radius:1;this.theta=void 0!==theta?theta:0;this.y=void 0!==y?y:0;return this}function Box2(min,max){this.min=void 0!==
min?min:new Vector2(Infinity,Infinity);this.max=void 0!==max?max:new Vector2(-Infinity,-Infinity)}function Line3(start,end){this.start=void 0!==start?start:new Vector3;this.end=void 0!==end?end:new Vector3}function ImmediateRenderObject(material){Object3D.call(this);this.material=material;this.render=function(){};this.hasUvs=this.hasColors=this.hasNormals=this.hasPositions=!1;this.uvArray=this.colorArray=this.normalArray=this.positionArray=null;this.count=0}function SpotLightHelper(light,color){Object3D.call(this);
this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=!1;this.color=color;light=new BufferGeometry;color=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var _i354=0,j=1;32>_i354;_i354++,j++){var p1=_i354/32*Math.PI*2,p2=j/32*Math.PI*2;color.push(Math.cos(p1),Math.sin(p1),1,Math.cos(p2),Math.sin(p2),1)}light.setAttribute("position",new Float32BufferAttribute(color,3));color=new LineBasicMaterial({fog:!1,toneMapped:!1});this.cone=new LineSegments(light,
color);this.add(this.cone);this.update()}function getBoneList(object){var boneList=[];object&&object.isBone&&boneList.push(object);for(var _i355=0;_i355<object.children.length;_i355++)boneList.push.apply(boneList,getBoneList(object.children[_i355]));return boneList}function SkeletonHelper(object){for(var bones=getBoneList(object),geometry=new BufferGeometry,vertices=[],colors=[],color1=new Color(0,0,1),color2=new Color(0,1,0),_i356=0;_i356<bones.length;_i356++){var bone=bones[_i356];bone.parent&&
bone.parent.isBone&&(vertices.push(0,0,0),vertices.push(0,0,0),colors.push(color1.r,color1.g,color1.b),colors.push(color2.r,color2.g,color2.b))}geometry.setAttribute("position",new Float32BufferAttribute(vertices,3));geometry.setAttribute("color",new Float32BufferAttribute(colors,3));vertices=new LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});LineSegments.call(this,geometry,vertices);this.type="SkeletonHelper";this.root=object;this.bones=bones;this.matrix=
object.matrixWorld;this.matrixAutoUpdate=!1}function PointLightHelper(light,sphereSize,color){this.light=light;this.light.updateMatrixWorld();this.color=color;light=new SphereBufferGeometry(sphereSize,4,2);sphereSize=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1});Mesh.call(this,light,sphereSize);this.type="PointLightHelper";this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1;this.update()}function HemisphereLightHelper(light,size,color){Object3D.call(this);this.light=light;this.light.updateMatrixWorld();
this.matrix=light.matrixWorld;this.matrixAutoUpdate=!1;this.color=color;light=new OctahedronBufferGeometry(size);light.rotateY(.5*Math.PI);this.material=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1});void 0===this.color&&(this.material.vertexColors=!0);size=light.getAttribute("position");size=new Float32Array(3*size.count);light.setAttribute("color",new BufferAttribute(size,3));this.add(new Mesh(light,this.material));this.update()}function GridHelper(size,divisions,color1,color2){size=
size||10;divisions=divisions||10;color1=new Color(void 0!==color1?color1:4473924);color2=new Color(void 0!==color2?color2:8947848);var center=divisions/2,step=size/divisions,halfSize=size/2;size=[];for(var colors=[],_i359=0,j=0,k=-halfSize;_i359<=divisions;_i359++,k+=step){size.push(-halfSize,0,k,halfSize,0,k);size.push(k,0,-halfSize,k,0,halfSize);var color=_i359===center?color1:color2;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=
3}divisions=new BufferGeometry;divisions.setAttribute("position",new Float32BufferAttribute(size,3));divisions.setAttribute("color",new Float32BufferAttribute(colors,3));color1=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});LineSegments.call(this,divisions,color1);this.type="GridHelper"}function PolarGridHelper(radius,radials,circles,divisions,color1,color2){radius=radius||10;radials=radials||16;circles=circles||8;divisions=divisions||64;color1=new Color(void 0!==color1?color1:4473924);color2=
new Color(void 0!==color2?color2:8947848);for(var vertices=[],colors=[],_i360=0;_i360<=radials;_i360++){var v=_i360/radials*2*Math.PI,x=Math.sin(v)*radius;v=Math.cos(v)*radius;vertices.push(0,0,0);vertices.push(x,0,v);x=_i360&1?color1:color2;colors.push(x.r,x.g,x.b);colors.push(x.r,x.g,x.b)}for(radials=0;radials<=circles;radials++)for(_i360=radials&1?color1:color2,x=radius-radius/circles*radials,v=0;v<divisions;v++){var _v4=v/divisions*2*Math.PI,_x5=Math.sin(_v4)*x;_v4=Math.cos(_v4)*x;vertices.push(_x5,
0,_v4);colors.push(_i360.r,_i360.g,_i360.b);_v4=(v+1)/divisions*2*Math.PI;_x5=Math.sin(_v4)*x;_v4=Math.cos(_v4)*x;vertices.push(_x5,0,_v4);colors.push(_i360.r,_i360.g,_i360.b)}radius=new BufferGeometry;radius.setAttribute("position",new Float32BufferAttribute(vertices,3));radius.setAttribute("color",new Float32BufferAttribute(colors,3));vertices=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});LineSegments.call(this,radius,vertices);this.type="PolarGridHelper"}function DirectionalLightHelper(light,
size,color){Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=!1;this.color=color;void 0===size&&(size=1);light=new BufferGeometry;light.setAttribute("position",new Float32BufferAttribute([-size,size,0,size,size,0,size,-size,0,-size,-size,0,-size,size,0],3));size=new LineBasicMaterial({fog:!1,toneMapped:!1});this.lightPlane=new Line(light,size);this.add(this.lightPlane);light=new BufferGeometry;light.setAttribute("position",new Float32BufferAttribute([0,
0,0,0,0,1],3));this.targetLine=new Line(light,size);this.add(this.targetLine);this.update()}function CameraHelper(camera){function addLine(a,b,color){addPoint(a,color);addPoint(b,color)}function addPoint(id,color){vertices.push(0,0,0);colors.push(color.r,color.g,color.b);void 0===pointMap[id]&&(pointMap[id]=[]);pointMap[id].push(vertices.length/3-1)}var geometry=new BufferGeometry,material=new LineBasicMaterial({color:16777215,vertexColors:!0,toneMapped:!1}),vertices=[],colors=[],pointMap={},colorFrustum=
new Color(16755200),colorCone=new Color(16711680),colorUp=new Color(43775),colorTarget=new Color(16777215),colorCross=new Color(3355443);addLine("n1","n2",colorFrustum);addLine("n2","n4",colorFrustum);addLine("n4","n3",colorFrustum);addLine("n3","n1",colorFrustum);addLine("f1","f2",colorFrustum);addLine("f2","f4",colorFrustum);addLine("f4","f3",colorFrustum);addLine("f3","f1",colorFrustum);addLine("n1","f1",colorFrustum);addLine("n2","f2",colorFrustum);addLine("n3","f3",colorFrustum);addLine("n4",
"f4",colorFrustum);addLine("p","n1",colorCone);addLine("p","n2",colorCone);addLine("p","n3",colorCone);addLine("p","n4",colorCone);addLine("u1","u2",colorUp);addLine("u2","u3",colorUp);addLine("u3","u1",colorUp);addLine("c","t",colorTarget);addLine("p","c",colorCross);addLine("cn1","cn2",colorCross);addLine("cn3","cn4",colorCross);addLine("cf1","cf2",colorCross);addLine("cf3","cf4",colorCross);geometry.setAttribute("position",new Float32BufferAttribute(vertices,3));geometry.setAttribute("color",new Float32BufferAttribute(colors,
3));LineSegments.call(this,geometry,material);this.type="CameraHelper";this.camera=camera;this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix();this.matrix=camera.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=pointMap;this.update()}function setPoint(point,pointMap,geometry,camera,x,y,z){_vector$b.set(x,y,z).unproject(camera);point=pointMap[point];if(void 0!==point)for(geometry=geometry.getAttribute("position"),pointMap=0,camera=point.length;pointMap<camera;pointMap++)geometry.setXYZ(point[pointMap],
_vector$b.x,_vector$b.y,_vector$b.z)}function BoxHelper(object,color){this.object=object;void 0===color&&(color=16776960);object=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var positions=new Float32Array(24),geometry=new BufferGeometry;geometry.setIndex(new BufferAttribute(object,1));geometry.setAttribute("position",new BufferAttribute(positions,3));LineSegments.call(this,geometry,new LineBasicMaterial({color:color,toneMapped:!1}));this.type="BoxHelper";this.matrixAutoUpdate=
!1;this.update()}function Box3Helper(box,color){this.type="Box3Helper";this.box=box;color=color||16776960;box=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var geometry=new BufferGeometry;geometry.setIndex(new BufferAttribute(box,1));geometry.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3));LineSegments.call(this,geometry,new LineBasicMaterial({color:color,toneMapped:!1}));this.type="Box3Helper";this.geometry.computeBoundingSphere()}
function PlaneHelper(plane,size,hex){this.plane=plane;this.size=void 0===size?1:size;plane=void 0!==hex?hex:16776960;size=new BufferGeometry;size.setAttribute("position",new Float32BufferAttribute([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3));size.computeBoundingSphere();Line.call(this,size,new LineBasicMaterial({color:plane,toneMapped:!1}));this.type="PlaneHelper";size=new BufferGeometry;size.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,1,
1,-1,-1,1,1,-1,1],3));size.computeBoundingSphere();this.add(new Mesh(size,new MeshBasicMaterial({color:plane,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}function ArrowHelper(dir,origin,length,color,headLength,headWidth){Object3D.call(this);this.type="ArrowHelper";void 0===dir&&(dir=new Vector3(0,0,1));void 0===origin&&(origin=new Vector3(0,0,0));void 0===length&&(length=1);void 0===color&&(color=16776960);void 0===headLength&&(headLength=.2*length);void 0===headWidth&&(headWidth=.2*
headLength);void 0===_lineGeometry&&(_lineGeometry=new BufferGeometry,_lineGeometry.setAttribute("position",new Float32BufferAttribute([0,0,0,0,1,0],3)),_coneGeometry=new CylinderBufferGeometry(0,.5,1,5,1),_coneGeometry.translate(0,-.5,0));this.position.copy(origin);this.line=new Line(_lineGeometry,new LineBasicMaterial({color:color,toneMapped:!1}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:color,toneMapped:!1}));this.cone.matrixAutoUpdate=
!1;this.add(this.cone);this.setDirection(dir);this.setLength(length,headLength,headWidth)}function AxesHelper(size){size=size||1;var vertices=[0,0,0,size,0,0,0,0,0,0,size,0,0,0,0,0,0,size];size=new BufferGeometry;size.setAttribute("position",new Float32BufferAttribute(vertices,3));size.setAttribute("color",new Float32BufferAttribute([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));vertices=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});LineSegments.call(this,size,vertices);this.type="AxesHelper"}
function PMREMGenerator(renderer){this._renderer=renderer;this._pingPongRenderTarget=null;renderer=MAX_SAMPLES;var weights=new Float32Array(renderer),poleAxis=new Vector3(0,1,0);this._blurMaterial=new RawShaderMaterial({name:"SphericalGaussianBlur",defines:{n:renderer},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:weights},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:poleAxis},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},
vertexShader:_getCommonVertexShader(),fragmentShader:"\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n".concat(_getEncodings(),"\n\n#define ENVMAP_TYPE_CUBE_UV\n#include \x3ccube_uv_reflection_fragment\x3e\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta \x3d cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection \x3d vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis \x3d latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis \x3d vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis \x3d normalize(axis);\n\tgl_FragColor \x3d vec4(0.0);\n\tgl_FragColor.rgb +\x3d weights[0] * getSample(0.0, axis);\n\tfor (int i \x3d 1; i \x3c n; i++) {\n\t\tif (i \x3e\x3d samples)\n\t\t\tbreak;\n\t\tfloat theta \x3d dTheta * float(i);\n\t\tgl_FragColor.rgb +\x3d weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb +\x3d weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor \x3d linearToOutputTexel(gl_FragColor);\n}\n\t\t"),
blending:NoBlending,depthTest:!1,depthWrite:!1});this._cubemapShader=this._equirectShader=null;this._compileMaterial(this._blurMaterial)}function _createRenderTarget(params){params=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,params);params.texture.mapping=CubeUVReflectionMapping;params.texture.name="PMREM.cubeUv";params.scissorTest=!0;return params}function _setViewport(target,x,y,width,height){target.viewport.set(x,y,width,height);target.scissor.set(x,y,width,height)}function _getEquirectShader(){var texelSize=
new Vector2(1,1);return new RawShaderMaterial({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:texelSize},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:"\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n".concat(_getEncodings(),"\n\n#include \x3ccommon\x3e\n\nvoid main() {\n\tgl_FragColor \x3d vec4(0.0);\n\tvec3 outputDirection \x3d normalize(vOutputDirection);\n\tvec2 uv \x3d equirectUv( outputDirection );\n\tvec2 f \x3d fract(uv / texelSize - 0.5);\n\tuv -\x3d f * texelSize;\n\tvec3 tl \x3d envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x +\x3d texelSize.x;\n\tvec3 tr \x3d envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y +\x3d texelSize.y;\n\tvec3 br \x3d envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -\x3d texelSize.x;\n\tvec3 bl \x3d envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm \x3d mix(tl, tr, f.x);\n\tvec3 bm \x3d mix(bl, br, f.x);\n\tgl_FragColor.rgb \x3d mix(tm, bm, f.y);\n\tgl_FragColor \x3d linearToOutputTexel(gl_FragColor);\n}\n\t\t"),
blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCubemapShader(){return new RawShaderMaterial({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:"\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n".concat(_getEncodings(),"\n\nvoid main() {\n\tgl_FragColor \x3d vec4(0.0);\n\tgl_FragColor.rgb \x3d envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor \x3d linearToOutputTexel(gl_FragColor);\n}\n\t\t"),
blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCommonVertexShader(){return"\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\n\n// RH coordinate system; PMREM face-indexing convention\nvec3 getDirection(vec2 uv, float face) {\n\tuv \x3d 2.0 * uv - 1.0;\n\tvec3 direction \x3d vec3(uv, 1.0);\n\tif (face \x3d\x3d 0.0) {\n\t\tdirection \x3d direction.zyx; // ( 1, v, u ) pos x\n\t} else if (face \x3d\x3d 1.0) {\n\t\tdirection \x3d direction.xzy;\n\t\tdirection.xz *\x3d -1.0; // ( -u, 1, -v ) pos y\n\t} else if (face \x3d\x3d 2.0) {\n\t\tdirection.x *\x3d -1.0; // ( -u, v, 1 ) pos z\n\t} else if (face \x3d\x3d 3.0) {\n\t\tdirection \x3d direction.zyx;\n\t\tdirection.xz *\x3d -1.0; // ( -1, v, -u ) neg x\n\t} else if (face \x3d\x3d 4.0) {\n\t\tdirection \x3d direction.xzy;\n\t\tdirection.xy *\x3d -1.0; // ( -u, -1, v ) neg y\n\t} else if (face \x3d\x3d 5.0) {\n\t\tdirection.z *\x3d -1.0; // ( u, v, -1 ) neg z\n\t}\n\treturn direction;\n}\n\nvoid main() {\n\tvOutputDirection \x3d getDirection(uv, faceIndex);\n\tgl_Position \x3d vec4( position, 1.0 );\n}\n\t"}
function _getEncodings(){return"\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include \x3cencodings_pars_fragment\x3e\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding \x3d\x3d 0){\n\t\treturn value;\n\t}else if(inputEncoding \x3d\x3d 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding \x3d\x3d 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding \x3d\x3d 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding \x3d\x3d 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding \x3d\x3d 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding \x3d\x3d 0){\n\t\treturn value;\n\t}else if(outputEncoding \x3d\x3d 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding \x3d\x3d 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding \x3d\x3d 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding \x3d\x3d 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding \x3d\x3d 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t"}
function ClosedSplineCurve3(points){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");CatmullRomCurve3.call(this,points);this.type="catmullrom";this.closed=!0}function SplineCurve3(points){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");CatmullRomCurve3.call(this,points);this.type="catmullrom"}function Spline(points){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.");CatmullRomCurve3.call(this,
points);this.type="catmullrom"}Object.defineProperty(exports,"__esModule",{value:!0});exports.AmbientLight=AmbientLight;exports.AmbientLightProbe=AmbientLightProbe;exports.AnimationClip=AnimationClip;exports.AnimationLoader=AnimationLoader;exports.AnimationMixer=AnimationMixer;exports.AnimationObjectGroup=AnimationObjectGroup;exports.ArcCurve=ArcCurve;exports.ArrayCamera=ArrayCamera;exports.ArrowHelper=ArrowHelper;exports.Audio=Audio;exports.AudioAnalyser=AudioAnalyser;exports.AudioListener=AudioListener;
exports.AudioLoader=AudioLoader;exports.AxesHelper=AxesHelper;exports.AxisHelper=function(size){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper.");return new AxesHelper(size)};exports.BinaryTextureLoader=function(manager){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.");return new DataTextureLoader(manager)};exports.Bone=Bone;exports.BooleanKeyframeTrack=BooleanKeyframeTrack;exports.BoundingBoxHelper=function(object,color){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.");
return new BoxHelper(object,color)};exports.Box2=Box2;exports.Box3=Box3;exports.Box3Helper=Box3Helper;exports.BoxHelper=BoxHelper;exports.BufferAttribute=BufferAttribute;exports.BufferGeometry=BufferGeometry;exports.BufferGeometryLoader=BufferGeometryLoader;exports.Camera=Camera;exports.CameraHelper=CameraHelper;exports.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been removed")};exports.CanvasTexture=CanvasTexture;exports.CatmullRomCurve3=CatmullRomCurve3;exports.CircleBufferGeometry=
CircleBufferGeometry;exports.CircleGeometry=CircleGeometry;exports.Clock=Clock;exports.ClosedSplineCurve3=ClosedSplineCurve3;exports.Color=Color;exports.ColorKeyframeTrack=ColorKeyframeTrack;exports.CompressedTexture=CompressedTexture;exports.CompressedTextureLoader=CompressedTextureLoader;exports.ConeBufferGeometry=ConeBufferGeometry;exports.ConeGeometry=ConeGeometry;exports.CubeCamera=CubeCamera;exports.CubeTexture=CubeTexture;exports.CubeTextureLoader=CubeTextureLoader;exports.CubicBezierCurve=
CubicBezierCurve;exports.CubicBezierCurve3=CubicBezierCurve3;exports.CubicInterpolant=CubicInterpolant;exports.Curve=Curve;exports.CurvePath=CurvePath;exports.CylinderBufferGeometry=CylinderBufferGeometry;exports.CylinderGeometry=CylinderGeometry;exports.Cylindrical=Cylindrical;exports.DataTexture=DataTexture;exports.DataTexture2DArray=DataTexture2DArray;exports.DataTexture3D=DataTexture3D;exports.DataTextureLoader=DataTextureLoader;exports.DepthTexture=DepthTexture;exports.DirectionalLight=DirectionalLight;
exports.DirectionalLightHelper=DirectionalLightHelper;exports.DirectionalLightShadow=DirectionalLightShadow;exports.DiscreteInterpolant=DiscreteInterpolant;exports.DodecahedronBufferGeometry=DodecahedronBufferGeometry;exports.DodecahedronGeometry=DodecahedronGeometry;exports.DynamicBufferAttribute=function(array,itemSize){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.");return(new BufferAttribute(array,itemSize)).setUsage(DynamicDrawUsage)};
exports.EdgesGeometry=EdgesGeometry;exports.EdgesHelper=function(object,hex){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.");return new LineSegments(new EdgesGeometry(object.geometry),new LineBasicMaterial({color:void 0!==hex?hex:16777215}))};exports.EllipseCurve=EllipseCurve;exports.Euler=Euler;exports.EventDispatcher=EventDispatcher;exports.ExtrudeBufferGeometry=ExtrudeBufferGeometry;exports.ExtrudeGeometry=ExtrudeGeometry;exports.Face3=Face3;exports.Face4=function(a,
b,c,d,normal,color,materialIndex){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new Face3(a,b,c,normal,color,materialIndex)};exports.FileLoader=FileLoader;exports.Float32Attribute=function(array,itemSize){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.");return new Float32BufferAttribute(array,itemSize)};exports.Float32BufferAttribute=Float32BufferAttribute;exports.Float64Attribute=function(array,
itemSize){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.");return new Float64BufferAttribute(array,itemSize)};exports.Float64BufferAttribute=Float64BufferAttribute;exports.Fog=Fog;exports.FogExp2=FogExp2;exports.Font=Font;exports.FontLoader=FontLoader;exports.Frustum=Frustum;exports.Geometry=Geometry;exports.GridHelper=GridHelper;exports.Group=Group;exports.HemisphereLight=HemisphereLight;exports.HemisphereLightHelper=HemisphereLightHelper;exports.HemisphereLightProbe=
HemisphereLightProbe;exports.IcosahedronBufferGeometry=IcosahedronBufferGeometry;exports.IcosahedronGeometry=IcosahedronGeometry;exports.ImageBitmapLoader=ImageBitmapLoader;exports.ImageLoader=ImageLoader;exports.ImmediateRenderObject=ImmediateRenderObject;exports.InstancedBufferAttribute=InstancedBufferAttribute;exports.InstancedBufferGeometry=InstancedBufferGeometry;exports.InstancedInterleavedBuffer=InstancedInterleavedBuffer;exports.InstancedMesh=InstancedMesh;exports.Int16Attribute=function(array,
itemSize){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.");return new Int16BufferAttribute(array,itemSize)};exports.Int16BufferAttribute=Int16BufferAttribute;exports.Int32Attribute=function(array,itemSize){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.");return new Int32BufferAttribute(array,itemSize)};exports.Int32BufferAttribute=Int32BufferAttribute;exports.Int8Attribute=function(array,itemSize){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.");
return new Int8BufferAttribute(array,itemSize)};exports.Int8BufferAttribute=Int8BufferAttribute;exports.InterleavedBuffer=InterleavedBuffer;exports.InterleavedBufferAttribute=InterleavedBufferAttribute;exports.Interpolant=Interpolant;exports.JSONLoader=function(){console.error("THREE.JSONLoader has been removed.")};exports.KeyframeTrack=KeyframeTrack;exports.LOD=LOD;exports.LatheBufferGeometry=LatheBufferGeometry;exports.LatheGeometry=LatheGeometry;exports.Layers=Layers;exports.LensFlare=function(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")};
exports.Light=Light;exports.LightProbe=LightProbe;exports.LightShadow=LightShadow;exports.Line=Line;exports.Line3=Line3;exports.LineBasicMaterial=LineBasicMaterial;exports.LineCurve=LineCurve;exports.LineCurve3=LineCurve3;exports.LineDashedMaterial=LineDashedMaterial;exports.LineLoop=LineLoop;exports.LineSegments=LineSegments;exports.LinearInterpolant=LinearInterpolant;exports.Loader=Loader;exports.LoadingManager=LoadingManager;exports.Material=Material;exports.MaterialLoader=MaterialLoader;exports.Matrix3=
Matrix3;exports.Matrix4=Matrix4;exports.Mesh=Mesh;exports.MeshBasicMaterial=MeshBasicMaterial;exports.MeshDepthMaterial=MeshDepthMaterial;exports.MeshDistanceMaterial=MeshDistanceMaterial;exports.MeshFaceMaterial=function(materials){console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead.");return materials};exports.MeshLambertMaterial=MeshLambertMaterial;exports.MeshMatcapMaterial=MeshMatcapMaterial;exports.MeshNormalMaterial=MeshNormalMaterial;exports.MeshPhongMaterial=MeshPhongMaterial;
exports.MeshPhysicalMaterial=MeshPhysicalMaterial;exports.MeshStandardMaterial=MeshStandardMaterial;exports.MeshToonMaterial=MeshToonMaterial;exports.MultiMaterial=function(materials){void 0===materials&&(materials=[]);console.warn("THREE.MultiMaterial has been removed. Use an Array instead.");materials.isMultiMaterial=!0;materials.materials=materials;materials.clone=function(){return materials.slice()};return materials};exports.NumberKeyframeTrack=NumberKeyframeTrack;exports.Object3D=Object3D;exports.ObjectLoader=
ObjectLoader;exports.OctahedronBufferGeometry=OctahedronBufferGeometry;exports.OctahedronGeometry=OctahedronGeometry;exports.OrthographicCamera=OrthographicCamera;exports.PMREMGenerator=PMREMGenerator;exports.ParametricBufferGeometry=ParametricBufferGeometry;exports.ParametricGeometry=ParametricGeometry;exports.Particle=function(material){console.warn("THREE.Particle has been renamed to THREE.Sprite.");return new Sprite(material)};exports.ParticleBasicMaterial=function(parameters){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.");
return new PointsMaterial(parameters)};exports.ParticleSystem=function(geometry,material){console.warn("THREE.ParticleSystem has been renamed to THREE.Points.");return new Points(geometry,material)};exports.ParticleSystemMaterial=function(parameters){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.");return new PointsMaterial(parameters)};exports.Path=Path;exports.PerspectiveCamera=PerspectiveCamera;exports.Plane=Plane;exports.PlaneBufferGeometry=PlaneBufferGeometry;
exports.PlaneGeometry=PlaneGeometry;exports.PlaneHelper=PlaneHelper;exports.PointCloud=function(geometry,material){console.warn("THREE.PointCloud has been renamed to THREE.Points.");return new Points(geometry,material)};exports.PointCloudMaterial=function(parameters){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.");return new PointsMaterial(parameters)};exports.PointLight=PointLight;exports.PointLightHelper=PointLightHelper;exports.Points=Points;exports.PointsMaterial=
PointsMaterial;exports.PolarGridHelper=PolarGridHelper;exports.PolyhedronBufferGeometry=PolyhedronBufferGeometry;exports.PolyhedronGeometry=PolyhedronGeometry;exports.PositionalAudio=PositionalAudio;exports.PropertyBinding=PropertyBinding;exports.PropertyMixer=PropertyMixer;exports.QuadraticBezierCurve=QuadraticBezierCurve;exports.QuadraticBezierCurve3=QuadraticBezierCurve3;exports.Quaternion=Quaternion;exports.QuaternionKeyframeTrack=QuaternionKeyframeTrack;exports.QuaternionLinearInterpolant=QuaternionLinearInterpolant;
exports.RawShaderMaterial=RawShaderMaterial;exports.Ray=Ray;exports.Raycaster=Raycaster;exports.RectAreaLight=RectAreaLight;exports.RingBufferGeometry=RingBufferGeometry;exports.RingGeometry=RingGeometry;exports.Scene=Scene;exports.ShaderMaterial=ShaderMaterial;exports.ShadowMaterial=ShadowMaterial;exports.Shape=Shape;exports.ShapeBufferGeometry=ShapeBufferGeometry;exports.ShapeGeometry=ShapeGeometry;exports.ShapePath=ShapePath;exports.Skeleton=Skeleton;exports.SkeletonHelper=SkeletonHelper;exports.SkinnedMesh=
SkinnedMesh;exports.Sphere=Sphere;exports.SphereBufferGeometry=SphereBufferGeometry;exports.SphereGeometry=SphereGeometry;exports.Spherical=Spherical;exports.SphericalHarmonics3=SphericalHarmonics3;exports.Spline=Spline;exports.SplineCurve=SplineCurve;exports.SplineCurve3=SplineCurve3;exports.SpotLight=SpotLight;exports.SpotLightHelper=SpotLightHelper;exports.SpotLightShadow=SpotLightShadow;exports.Sprite=Sprite;exports.SpriteMaterial=SpriteMaterial;exports.StereoCamera=StereoCamera;exports.StringKeyframeTrack=
StringKeyframeTrack;exports.TetrahedronBufferGeometry=TetrahedronBufferGeometry;exports.TetrahedronGeometry=TetrahedronGeometry;exports.TextBufferGeometry=TextBufferGeometry;exports.TextGeometry=TextGeometry;exports.Texture=Texture;exports.TextureLoader=TextureLoader;exports.TorusBufferGeometry=TorusBufferGeometry;exports.TorusGeometry=TorusGeometry;exports.TorusKnotBufferGeometry=TorusKnotBufferGeometry;exports.TorusKnotGeometry=TorusKnotGeometry;exports.Triangle=Triangle;exports.TubeBufferGeometry=
TubeBufferGeometry;exports.TubeGeometry=TubeGeometry;exports.Uint16Attribute=function(array,itemSize){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.");return new Uint16BufferAttribute(array,itemSize)};exports.Uint16BufferAttribute=Uint16BufferAttribute;exports.Uint32Attribute=function(array,itemSize){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.");return new Uint32BufferAttribute(array,itemSize)};
exports.Uint32BufferAttribute=Uint32BufferAttribute;exports.Uint8Attribute=function(array,itemSize){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.");return new Uint8BufferAttribute(array,itemSize)};exports.Uint8BufferAttribute=Uint8BufferAttribute;exports.Uint8ClampedAttribute=function(array,itemSize){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.");return new Uint8ClampedBufferAttribute(array,
itemSize)};exports.Uint8ClampedBufferAttribute=Uint8ClampedBufferAttribute;exports.Uniform=Uniform;exports.Vector2=Vector2;exports.Vector3=Vector3;exports.Vector4=Vector4;exports.VectorKeyframeTrack=VectorKeyframeTrack;exports.Vertex=function(x,y,z){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead.");return new Vector3(x,y,z)};exports.VideoTexture=VideoTexture;exports.WebGL1Renderer=WebGL1Renderer;exports.WebGLCubeRenderTarget=WebGLCubeRenderTarget;exports.WebGLMultisampleRenderTarget=
WebGLMultisampleRenderTarget;exports.WebGLRenderTarget=WebGLRenderTarget;exports.WebGLRenderTargetCube=function(width,height,options){console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).");return new WebGLCubeRenderTarget(width,options)};exports.WebGLRenderer=WebGLRenderer;exports.WebGLUtils=WebGLUtils;exports.WireframeGeometry=WireframeGeometry;exports.WireframeHelper=function(object,hex){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.");
return new LineSegments(new WireframeGeometry(object.geometry),new LineBasicMaterial({color:void 0!==hex?hex:16777215}))};exports.XHRLoader=function(manager){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader.");return new FileLoader(manager)};exports.NearestMipmapLinearFilter=exports.NearestMipMapNearestFilter=exports.NearestMipMapLinearFilter=exports.NearestFilter=exports.MultiplyOperation=exports.MultiplyBlending=exports.MixOperation=exports.MirroredRepeatWrapping=exports.MinEquation=
exports.MaxEquation=exports.MathUtils=exports.Math=exports.MOUSE=exports.LuminanceFormat=exports.LuminanceAlphaFormat=exports.LoopRepeat=exports.LoopPingPong=exports.LoopOnce=exports.LogLuvEncoding=exports.LoaderUtils=exports.LinearToneMapping=exports.LinearMipmapNearestFilter=exports.LinearMipmapLinearFilter=exports.LinearMipMapNearestFilter=exports.LinearMipMapLinearFilter=exports.LinearFilter=exports.LinearEncoding=exports.LineStrip=exports.LinePieces=exports.LessStencilFunc=exports.LessEqualStencilFunc=
exports.LessEqualDepth=exports.LessDepth=exports.KeepStencilOp=exports.InvertStencilOp=exports.InterpolateSmooth=exports.InterpolateLinear=exports.InterpolateDiscrete=exports.IntType=exports.IncrementWrapStencilOp=exports.IncrementStencilOp=exports.ImageUtils=exports.HalfFloatType=exports.GreaterStencilFunc=exports.GreaterEqualStencilFunc=exports.GreaterEqualDepth=exports.GreaterDepth=exports.GeometryUtils=exports.GammaEncoding=exports.FrontSide=exports.FrontFaceDirectionCW=exports.FrontFaceDirectionCCW=
exports.FloatType=exports.FlatShading=exports.FaceColors=exports.EquirectangularRefractionMapping=exports.EquirectangularReflectionMapping=exports.EqualStencilFunc=exports.EqualDepth=exports.DynamicReadUsage=exports.DynamicDrawUsage=exports.DynamicCopyUsage=exports.DstColorFactor=exports.DstAlphaFactor=exports.DoubleSide=exports.DepthStencilFormat=exports.DepthFormat=exports.DefaultLoadingManager=exports.DecrementWrapStencilOp=exports.DecrementStencilOp=exports.CustomToneMapping=exports.CustomBlending=
exports.CullFaceNone=exports.CullFaceFrontBack=exports.CullFaceFront=exports.CullFaceBack=exports.CubeUVRefractionMapping=exports.CubeUVReflectionMapping=exports.CubeRefractionMapping=exports.CubeReflectionMapping=exports.ClampToEdgeWrapping=exports.CineonToneMapping=exports.Cache=exports.ByteType=exports.CubeGeometry=exports.BoxGeometry=exports.BoxBufferGeometry=exports.BasicShadowMap=exports.BasicDepthPacking=exports.BackSide=exports.AudioContext=exports.AnimationUtils=exports.AlwaysStencilFunc=
exports.AlwaysDepth=exports.AlphaFormat=exports.AdditiveBlending=exports.AdditiveAnimationBlendMode=exports.AddOperation=exports.AddEquation=exports.ACESFilmicToneMapping=void 0;exports.UVMapping=exports.TrianglesDrawMode=exports.TriangleStripDrawMode=exports.TriangleFanDrawMode=exports.TangentSpaceNormalMap=exports.TOUCH=exports.SubtractiveBlending=exports.SubtractEquation=exports.StreamReadUsage=exports.StreamDrawUsage=exports.StreamCopyUsage=exports.StaticReadUsage=exports.StaticDrawUsage=exports.StaticCopyUsage=
exports.SrcColorFactor=exports.SrcAlphaSaturateFactor=exports.SrcAlphaFactor=exports.SmoothShading=exports.ShortType=exports.ShapeUtils=exports.ShaderLib=exports.ShaderChunk=exports.SceneUtils=exports.SRGB8_ALPHA8_ASTC_8x8_Format=exports.SRGB8_ALPHA8_ASTC_8x6_Format=exports.SRGB8_ALPHA8_ASTC_8x5_Format=exports.SRGB8_ALPHA8_ASTC_6x6_Format=exports.SRGB8_ALPHA8_ASTC_6x5_Format=exports.SRGB8_ALPHA8_ASTC_5x5_Format=exports.SRGB8_ALPHA8_ASTC_5x4_Format=exports.SRGB8_ALPHA8_ASTC_4x4_Format=exports.SRGB8_ALPHA8_ASTC_12x12_Format=
exports.SRGB8_ALPHA8_ASTC_12x10_Format=exports.SRGB8_ALPHA8_ASTC_10x8_Format=exports.SRGB8_ALPHA8_ASTC_10x6_Format=exports.SRGB8_ALPHA8_ASTC_10x5_Format=exports.SRGB8_ALPHA8_ASTC_10x10_Format=exports.ReverseSubtractEquation=exports.ReplaceStencilOp=exports.RepeatWrapping=exports.ReinhardToneMapping=exports.RedIntegerFormat=exports.RedFormat=exports.RGIntegerFormat=exports.RGFormat=exports.RGB_S3TC_DXT1_Format=exports.RGB_PVRTC_4BPPV1_Format=exports.RGB_PVRTC_2BPPV1_Format=exports.RGB_ETC2_Format=
exports.RGB_ETC1_Format=exports.RGBM7Encoding=exports.RGBM16Encoding=exports.RGBIntegerFormat=exports.RGBFormat=exports.RGBEFormat=exports.RGBEEncoding=exports.RGBDEncoding=exports.RGBA_S3TC_DXT5_Format=exports.RGBA_S3TC_DXT3_Format=exports.RGBA_S3TC_DXT1_Format=exports.RGBA_PVRTC_4BPPV1_Format=exports.RGBA_PVRTC_2BPPV1_Format=exports.RGBA_ETC2_EAC_Format=exports.RGBA_BPTC_Format=exports.RGBA_ASTC_8x8_Format=exports.RGBA_ASTC_8x6_Format=exports.RGBA_ASTC_8x5_Format=exports.RGBA_ASTC_6x6_Format=exports.RGBA_ASTC_6x5_Format=
exports.RGBA_ASTC_5x5_Format=exports.RGBA_ASTC_5x4_Format=exports.RGBA_ASTC_4x4_Format=exports.RGBA_ASTC_12x12_Format=exports.RGBA_ASTC_12x10_Format=exports.RGBA_ASTC_10x8_Format=exports.RGBA_ASTC_10x6_Format=exports.RGBA_ASTC_10x5_Format=exports.RGBA_ASTC_10x10_Format=exports.RGBAIntegerFormat=exports.RGBAFormat=exports.RGBADepthPacking=exports.REVISION=exports.PCFSoftShadowMap=exports.PCFShadowMap=exports.OneMinusSrcColorFactor=exports.OneMinusSrcAlphaFactor=exports.OneMinusDstColorFactor=exports.OneMinusDstAlphaFactor=
exports.OneFactor=exports.ObjectSpaceNormalMap=exports.NotEqualStencilFunc=exports.NotEqualDepth=exports.NormalBlending=exports.NormalAnimationBlendMode=exports.NoToneMapping=exports.NoColors=exports.NoBlending=exports.NeverStencilFunc=exports.NeverDepth=exports.NearestMipmapNearestFilter=void 0;exports.sRGBEncoding=exports.ZeroStencilOp=exports.ZeroSlopeEnding=exports.ZeroFactor=exports.ZeroCurvatureEnding=exports.WrapAroundEnding=exports.VertexColors=exports.VSMShadowMap=exports.UnsignedShortType=
exports.UnsignedShort565Type=exports.UnsignedShort5551Type=exports.UnsignedShort4444Type=exports.UnsignedIntType=exports.UnsignedInt248Type=exports.UnsignedByteType=exports.UniformsUtils=exports.UniformsLib=void 0;var _ENCODINGS;void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52));void 0===Number.isInteger&&(Number.isInteger=function(value){return"number"===typeof value&&isFinite(value)&&Math.floor(value)===value});void 0===Math.sign&&(Math.sign=function(x){return 0>x?-1:0<x?1:+x});!1==="name"in
Function.prototype&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});void 0===Object.assign&&(Object.assign=function(target){if(void 0===target||null===target)throw new TypeError("Cannot convert undefined or null to object");for(var output=Object(target),index=1;index<arguments.length;index++){var source=arguments[index];if(void 0!==source&&null!==source)for(var nextKey in source)Object.prototype.hasOwnProperty.call(source,
nextKey)&&(output[nextKey]=source[nextKey])}return output});exports.REVISION="118";exports.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};exports.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};var CullFaceNone=0;exports.CullFaceNone=CullFaceNone;var CullFaceBack=1;exports.CullFaceBack=CullFaceBack;var CullFaceFront=2;exports.CullFaceFront=CullFaceFront;exports.CullFaceFrontBack=3;exports.FrontFaceDirectionCW=0;exports.FrontFaceDirectionCCW=1;exports.BasicShadowMap=0;var PCFShadowMap=1;
exports.PCFShadowMap=PCFShadowMap;var PCFSoftShadowMap=2;exports.PCFSoftShadowMap=PCFSoftShadowMap;var VSMShadowMap=3;exports.VSMShadowMap=VSMShadowMap;var FrontSide=0;exports.FrontSide=FrontSide;var BackSide=1;exports.BackSide=BackSide;var DoubleSide=2;exports.DoubleSide=DoubleSide;exports.FlatShading=1;exports.SmoothShading=2;var NoBlending=0;exports.NoBlending=NoBlending;var NormalBlending=1;exports.NormalBlending=NormalBlending;var AdditiveBlending=2;exports.AdditiveBlending=AdditiveBlending;
var SubtractiveBlending=3;exports.SubtractiveBlending=SubtractiveBlending;var MultiplyBlending=4;exports.MultiplyBlending=MultiplyBlending;var CustomBlending=5;exports.CustomBlending=CustomBlending;var AddEquation=100;exports.AddEquation=AddEquation;var SubtractEquation=101;exports.SubtractEquation=SubtractEquation;var ReverseSubtractEquation=102;exports.ReverseSubtractEquation=ReverseSubtractEquation;var MinEquation=103;exports.MinEquation=MinEquation;var MaxEquation=104;exports.MaxEquation=MaxEquation;
var ZeroFactor=200;exports.ZeroFactor=ZeroFactor;var OneFactor=201;exports.OneFactor=OneFactor;var SrcColorFactor=202;exports.SrcColorFactor=SrcColorFactor;var OneMinusSrcColorFactor=203;exports.OneMinusSrcColorFactor=OneMinusSrcColorFactor;var SrcAlphaFactor=204;exports.SrcAlphaFactor=SrcAlphaFactor;var OneMinusSrcAlphaFactor=205;exports.OneMinusSrcAlphaFactor=OneMinusSrcAlphaFactor;var DstAlphaFactor=206;exports.DstAlphaFactor=DstAlphaFactor;var OneMinusDstAlphaFactor=207;exports.OneMinusDstAlphaFactor=
OneMinusDstAlphaFactor;var DstColorFactor=208;exports.DstColorFactor=DstColorFactor;var OneMinusDstColorFactor=209;exports.OneMinusDstColorFactor=OneMinusDstColorFactor;var SrcAlphaSaturateFactor=210;exports.SrcAlphaSaturateFactor=SrcAlphaSaturateFactor;var NeverDepth=0;exports.NeverDepth=NeverDepth;var AlwaysDepth=1;exports.AlwaysDepth=AlwaysDepth;var LessDepth=2;exports.LessDepth=LessDepth;var LessEqualDepth=3;exports.LessEqualDepth=LessEqualDepth;var EqualDepth=4;exports.EqualDepth=EqualDepth;
var GreaterEqualDepth=5;exports.GreaterEqualDepth=GreaterEqualDepth;var GreaterDepth=6;exports.GreaterDepth=GreaterDepth;var NotEqualDepth=7;exports.NotEqualDepth=NotEqualDepth;var MultiplyOperation=0;exports.MultiplyOperation=MultiplyOperation;var MixOperation=1;exports.MixOperation=MixOperation;var AddOperation=2;exports.AddOperation=AddOperation;var NoToneMapping=0;exports.NoToneMapping=NoToneMapping;var LinearToneMapping=1;exports.LinearToneMapping=LinearToneMapping;var ReinhardToneMapping=2;
exports.ReinhardToneMapping=ReinhardToneMapping;var CineonToneMapping=3;exports.CineonToneMapping=CineonToneMapping;var ACESFilmicToneMapping=4;exports.ACESFilmicToneMapping=ACESFilmicToneMapping;var CustomToneMapping=5;exports.CustomToneMapping=CustomToneMapping;exports.UVMapping=300;var CubeReflectionMapping=301;exports.CubeReflectionMapping=CubeReflectionMapping;var CubeRefractionMapping=302;exports.CubeRefractionMapping=CubeRefractionMapping;var EquirectangularReflectionMapping=303;exports.EquirectangularReflectionMapping=
EquirectangularReflectionMapping;var EquirectangularRefractionMapping=304;exports.EquirectangularRefractionMapping=EquirectangularRefractionMapping;var CubeUVReflectionMapping=306;exports.CubeUVReflectionMapping=CubeUVReflectionMapping;var CubeUVRefractionMapping=307;exports.CubeUVRefractionMapping=CubeUVRefractionMapping;var RepeatWrapping=1E3;exports.RepeatWrapping=RepeatWrapping;var ClampToEdgeWrapping=1001;exports.ClampToEdgeWrapping=ClampToEdgeWrapping;var MirroredRepeatWrapping=1002;exports.MirroredRepeatWrapping=
MirroredRepeatWrapping;var NearestFilter=1003;exports.NearestFilter=NearestFilter;var NearestMipmapNearestFilter=1004;exports.NearestMipmapNearestFilter=NearestMipmapNearestFilter;exports.NearestMipMapNearestFilter=1004;var NearestMipmapLinearFilter=1005;exports.NearestMipmapLinearFilter=NearestMipmapLinearFilter;exports.NearestMipMapLinearFilter=1005;var LinearFilter=1006;exports.LinearFilter=LinearFilter;var LinearMipmapNearestFilter=1007;exports.LinearMipmapNearestFilter=LinearMipmapNearestFilter;
exports.LinearMipMapNearestFilter=1007;var LinearMipmapLinearFilter=1008;exports.LinearMipmapLinearFilter=LinearMipmapLinearFilter;exports.LinearMipMapLinearFilter=1008;var UnsignedByteType=1009;exports.UnsignedByteType=UnsignedByteType;var ByteType=1010;exports.ByteType=ByteType;var ShortType=1011;exports.ShortType=ShortType;var UnsignedShortType=1012;exports.UnsignedShortType=UnsignedShortType;var IntType=1013;exports.IntType=IntType;var UnsignedIntType=1014;exports.UnsignedIntType=UnsignedIntType;
var FloatType=1015;exports.FloatType=FloatType;var HalfFloatType=1016;exports.HalfFloatType=HalfFloatType;var UnsignedShort4444Type=1017;exports.UnsignedShort4444Type=UnsignedShort4444Type;var UnsignedShort5551Type=1018;exports.UnsignedShort5551Type=UnsignedShort5551Type;var UnsignedShort565Type=1019;exports.UnsignedShort565Type=UnsignedShort565Type;var UnsignedInt248Type=1020;exports.UnsignedInt248Type=UnsignedInt248Type;var AlphaFormat=1021;exports.AlphaFormat=AlphaFormat;var RGBFormat=1022;exports.RGBFormat=
RGBFormat;var RGBAFormat=1023;exports.RGBAFormat=RGBAFormat;var LuminanceFormat=1024;exports.LuminanceFormat=LuminanceFormat;var LuminanceAlphaFormat=1025;exports.LuminanceAlphaFormat=LuminanceAlphaFormat;var RGBEFormat=RGBAFormat;exports.RGBEFormat=RGBEFormat;var DepthFormat=1026;exports.DepthFormat=DepthFormat;var DepthStencilFormat=1027;exports.DepthStencilFormat=DepthStencilFormat;var RedFormat=1028;exports.RedFormat=RedFormat;var RedIntegerFormat=1029;exports.RedIntegerFormat=RedIntegerFormat;
var RGFormat=1030;exports.RGFormat=RGFormat;var RGIntegerFormat=1031;exports.RGIntegerFormat=RGIntegerFormat;var RGBIntegerFormat=1032;exports.RGBIntegerFormat=RGBIntegerFormat;var RGBAIntegerFormat=1033;exports.RGBAIntegerFormat=RGBAIntegerFormat;var RGB_S3TC_DXT1_Format=33776;exports.RGB_S3TC_DXT1_Format=RGB_S3TC_DXT1_Format;var RGBA_S3TC_DXT1_Format=33777;exports.RGBA_S3TC_DXT1_Format=RGBA_S3TC_DXT1_Format;var RGBA_S3TC_DXT3_Format=33778;exports.RGBA_S3TC_DXT3_Format=RGBA_S3TC_DXT3_Format;var RGBA_S3TC_DXT5_Format=
33779;exports.RGBA_S3TC_DXT5_Format=RGBA_S3TC_DXT5_Format;var RGB_PVRTC_4BPPV1_Format=35840;exports.RGB_PVRTC_4BPPV1_Format=RGB_PVRTC_4BPPV1_Format;var RGB_PVRTC_2BPPV1_Format=35841;exports.RGB_PVRTC_2BPPV1_Format=RGB_PVRTC_2BPPV1_Format;var RGBA_PVRTC_4BPPV1_Format=35842;exports.RGBA_PVRTC_4BPPV1_Format=RGBA_PVRTC_4BPPV1_Format;var RGBA_PVRTC_2BPPV1_Format=35843;exports.RGBA_PVRTC_2BPPV1_Format=RGBA_PVRTC_2BPPV1_Format;var RGB_ETC1_Format=36196;exports.RGB_ETC1_Format=RGB_ETC1_Format;var RGB_ETC2_Format=
37492;exports.RGB_ETC2_Format=RGB_ETC2_Format;var RGBA_ETC2_EAC_Format=37496;exports.RGBA_ETC2_EAC_Format=RGBA_ETC2_EAC_Format;var RGBA_ASTC_4x4_Format=37808;exports.RGBA_ASTC_4x4_Format=RGBA_ASTC_4x4_Format;var RGBA_ASTC_5x4_Format=37809;exports.RGBA_ASTC_5x4_Format=RGBA_ASTC_5x4_Format;var RGBA_ASTC_5x5_Format=37810;exports.RGBA_ASTC_5x5_Format=RGBA_ASTC_5x5_Format;var RGBA_ASTC_6x5_Format=37811;exports.RGBA_ASTC_6x5_Format=RGBA_ASTC_6x5_Format;var RGBA_ASTC_6x6_Format=37812;exports.RGBA_ASTC_6x6_Format=
RGBA_ASTC_6x6_Format;var RGBA_ASTC_8x5_Format=37813;exports.RGBA_ASTC_8x5_Format=RGBA_ASTC_8x5_Format;var RGBA_ASTC_8x6_Format=37814;exports.RGBA_ASTC_8x6_Format=RGBA_ASTC_8x6_Format;var RGBA_ASTC_8x8_Format=37815;exports.RGBA_ASTC_8x8_Format=RGBA_ASTC_8x8_Format;var RGBA_ASTC_10x5_Format=37816;exports.RGBA_ASTC_10x5_Format=RGBA_ASTC_10x5_Format;var RGBA_ASTC_10x6_Format=37817;exports.RGBA_ASTC_10x6_Format=RGBA_ASTC_10x6_Format;var RGBA_ASTC_10x8_Format=37818;exports.RGBA_ASTC_10x8_Format=RGBA_ASTC_10x8_Format;
var RGBA_ASTC_10x10_Format=37819;exports.RGBA_ASTC_10x10_Format=RGBA_ASTC_10x10_Format;var RGBA_ASTC_12x10_Format=37820;exports.RGBA_ASTC_12x10_Format=RGBA_ASTC_12x10_Format;var RGBA_ASTC_12x12_Format=37821;exports.RGBA_ASTC_12x12_Format=RGBA_ASTC_12x12_Format;var RGBA_BPTC_Format=36492;exports.RGBA_BPTC_Format=RGBA_BPTC_Format;var SRGB8_ALPHA8_ASTC_4x4_Format=37840;exports.SRGB8_ALPHA8_ASTC_4x4_Format=SRGB8_ALPHA8_ASTC_4x4_Format;var SRGB8_ALPHA8_ASTC_5x4_Format=37841;exports.SRGB8_ALPHA8_ASTC_5x4_Format=
SRGB8_ALPHA8_ASTC_5x4_Format;var SRGB8_ALPHA8_ASTC_5x5_Format=37842;exports.SRGB8_ALPHA8_ASTC_5x5_Format=SRGB8_ALPHA8_ASTC_5x5_Format;var SRGB8_ALPHA8_ASTC_6x5_Format=37843;exports.SRGB8_ALPHA8_ASTC_6x5_Format=SRGB8_ALPHA8_ASTC_6x5_Format;var SRGB8_ALPHA8_ASTC_6x6_Format=37844;exports.SRGB8_ALPHA8_ASTC_6x6_Format=SRGB8_ALPHA8_ASTC_6x6_Format;var SRGB8_ALPHA8_ASTC_8x5_Format=37845;exports.SRGB8_ALPHA8_ASTC_8x5_Format=SRGB8_ALPHA8_ASTC_8x5_Format;var SRGB8_ALPHA8_ASTC_8x6_Format=37846;exports.SRGB8_ALPHA8_ASTC_8x6_Format=
SRGB8_ALPHA8_ASTC_8x6_Format;var SRGB8_ALPHA8_ASTC_8x8_Format=37847;exports.SRGB8_ALPHA8_ASTC_8x8_Format=SRGB8_ALPHA8_ASTC_8x8_Format;var SRGB8_ALPHA8_ASTC_10x5_Format=37848;exports.SRGB8_ALPHA8_ASTC_10x5_Format=SRGB8_ALPHA8_ASTC_10x5_Format;var SRGB8_ALPHA8_ASTC_10x6_Format=37849;exports.SRGB8_ALPHA8_ASTC_10x6_Format=SRGB8_ALPHA8_ASTC_10x6_Format;var SRGB8_ALPHA8_ASTC_10x8_Format=37850;exports.SRGB8_ALPHA8_ASTC_10x8_Format=SRGB8_ALPHA8_ASTC_10x8_Format;var SRGB8_ALPHA8_ASTC_10x10_Format=37851;exports.SRGB8_ALPHA8_ASTC_10x10_Format=
SRGB8_ALPHA8_ASTC_10x10_Format;var SRGB8_ALPHA8_ASTC_12x10_Format=37852;exports.SRGB8_ALPHA8_ASTC_12x10_Format=SRGB8_ALPHA8_ASTC_12x10_Format;var SRGB8_ALPHA8_ASTC_12x12_Format=37853;exports.SRGB8_ALPHA8_ASTC_12x12_Format=SRGB8_ALPHA8_ASTC_12x12_Format;exports.LoopOnce=2200;exports.LoopRepeat=2201;exports.LoopPingPong=2202;exports.InterpolateDiscrete=2300;exports.InterpolateLinear=2301;exports.InterpolateSmooth=2302;exports.ZeroCurvatureEnding=2400;exports.ZeroSlopeEnding=2401;exports.WrapAroundEnding=
2402;var NormalAnimationBlendMode=2500;exports.NormalAnimationBlendMode=NormalAnimationBlendMode;exports.AdditiveAnimationBlendMode=2501;exports.TrianglesDrawMode=0;exports.TriangleStripDrawMode=1;exports.TriangleFanDrawMode=2;var LinearEncoding=3E3;exports.LinearEncoding=LinearEncoding;var sRGBEncoding=3001;exports.sRGBEncoding=sRGBEncoding;var GammaEncoding=3007;exports.GammaEncoding=GammaEncoding;var RGBEEncoding=3002;exports.RGBEEncoding=RGBEEncoding;var LogLuvEncoding=3003;exports.LogLuvEncoding=
LogLuvEncoding;var RGBM7Encoding=3004;exports.RGBM7Encoding=RGBM7Encoding;var RGBM16Encoding=3005;exports.RGBM16Encoding=RGBM16Encoding;var RGBDEncoding=3006;exports.RGBDEncoding=RGBDEncoding;var BasicDepthPacking=3200;exports.BasicDepthPacking=BasicDepthPacking;var RGBADepthPacking=3201;exports.RGBADepthPacking=RGBADepthPacking;var TangentSpaceNormalMap=0;exports.TangentSpaceNormalMap=TangentSpaceNormalMap;var ObjectSpaceNormalMap=1;exports.ObjectSpaceNormalMap=ObjectSpaceNormalMap;exports.ZeroStencilOp=
0;var KeepStencilOp=7680;exports.KeepStencilOp=KeepStencilOp;exports.ReplaceStencilOp=7681;exports.IncrementStencilOp=7682;exports.DecrementStencilOp=7683;exports.IncrementWrapStencilOp=34055;exports.DecrementWrapStencilOp=34056;exports.InvertStencilOp=5386;exports.NeverStencilFunc=512;exports.LessStencilFunc=513;exports.EqualStencilFunc=514;exports.LessEqualStencilFunc=515;exports.GreaterStencilFunc=516;exports.NotEqualStencilFunc=517;exports.GreaterEqualStencilFunc=518;var AlwaysStencilFunc=519;
exports.AlwaysStencilFunc=AlwaysStencilFunc;var StaticDrawUsage=35044;exports.StaticDrawUsage=StaticDrawUsage;var DynamicDrawUsage=35048;exports.DynamicDrawUsage=DynamicDrawUsage;exports.StreamDrawUsage=35040;exports.StaticReadUsage=35045;exports.DynamicReadUsage=35049;exports.StreamReadUsage=35041;exports.StaticCopyUsage=35046;exports.DynamicCopyUsage=35050;exports.StreamCopyUsage=35042;Object.assign(EventDispatcher.prototype,{addEventListener:function(type,listener){void 0===this._listeners&&(this._listeners=
{});var listeners=this._listeners;void 0===listeners[type]&&(listeners[type]=[]);-1===listeners[type].indexOf(listener)&&listeners[type].push(listener)},hasEventListener:function(type,listener){if(void 0===this._listeners)return!1;var listeners=this._listeners;return void 0!==listeners[type]&&-1!==listeners[type].indexOf(listener)},removeEventListener:function(type,listener){void 0!==this._listeners&&(type=this._listeners[type],void 0!==type&&(listener=type.indexOf(listener),-1!==listener&&type.splice(listener,
1)))},dispatchEvent:function(event){if(void 0!==this._listeners){var listenerArray=this._listeners[event.type];if(void 0!==listenerArray){event.target=this;listenerArray=listenerArray.slice(0);for(var i=0,l=listenerArray.length;i<l;i++)listenerArray[i].call(this,event)}}}});for(var _lut=[],i$jscomp$0=0;256>i$jscomp$0;i$jscomp$0++)_lut[i$jscomp$0]=(16>i$jscomp$0?"0":"")+i$jscomp$0.toString(16);var MathUtils={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var d0=4294967295*Math.random()|
0,d1=4294967295*Math.random()|0,d2=4294967295*Math.random()|0,d3=4294967295*Math.random()|0;return(_lut[d0&255]+_lut[d0>>8&255]+_lut[d0>>16&255]+_lut[d0>>24&255]+"-"+_lut[d1&255]+_lut[d1>>8&255]+"-"+_lut[d1>>16&15|64]+_lut[d1>>24&255]+"-"+_lut[d2&63|128]+_lut[d2>>8&255]+"-"+_lut[d2>>16&255]+_lut[d2>>24&255]+_lut[d3&255]+_lut[d3>>8&255]+_lut[d3>>16&255]+_lut[d3>>24&255]).toUpperCase()},clamp:function(value,min,max){return Math.max(min,Math.min(max,value))},euclideanModulo:function(n,m){return(n%m+
m)%m},mapLinear:function(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1)},lerp:function(x,y,t){return(1-t)*x+t*y},smoothstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x)},smootherstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(6*x-15)+10)},randInt:function(low,high){return low+Math.floor(Math.random()*(high-low+1))},randFloat:function(low,high){return low+Math.random()*(high-low)},randFloatSpread:function(range){return range*
(.5-Math.random())},degToRad:function(degrees){return degrees*MathUtils.DEG2RAD},radToDeg:function(radians){return radians*MathUtils.RAD2DEG},isPowerOfTwo:function(value){return 0===(value&value-1)&&0!==value},ceilPowerOfTwo:function(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2))},floorPowerOfTwo:function(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2))},setQuaternionFromProperEuler:function(q,a,b,c,order){var cos=Math.cos,sin=Math.sin,c2=cos(b/2);b=sin(b/2);var c13=cos((a+
c)/2),s13=sin((a+c)/2),c1_3=cos((a-c)/2),s1_3=sin((a-c)/2);cos=cos((c-a)/2);a=sin((c-a)/2);switch(order){case "XYX":q.set(c2*s13,b*c1_3,b*s1_3,c2*c13);break;case "YZY":q.set(b*s1_3,c2*s13,b*c1_3,c2*c13);break;case "ZXZ":q.set(b*c1_3,b*s1_3,c2*s13,c2*c13);break;case "XZX":q.set(c2*s13,b*a,b*cos,c2*c13);break;case "YXY":q.set(b*cos,c2*s13,b*a,c2*c13);break;case "ZYZ":q.set(b*a,b*cos,c2*s13,c2*c13);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+
order)}}};exports.MathUtils=exports.Math=MathUtils;Object.defineProperties(Vector2.prototype,{width:{get:function(){return this.x},set:function(value){this.x=value}},height:{get:function(){return this.y},set:function(value){this.y=value}}});Object.assign(Vector2.prototype,{isVector2:!0,set:function(x,y){this.x=x;this.y=y;return this},setScalar:function(scalar){this.y=this.x=scalar;return this},setX:function(x){this.x=x;return this},setY:function(y){this.y=y;return this},setComponent:function(index,
value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw Error("index is out of range: "+index);}return this},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+index);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(v){this.x=v.x;this.y=v.y;return this},add:function(v,w){if(void 0!==w)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
this.addVectors(v,w);this.x+=v.x;this.y+=v.y;return this},addScalar:function(s){this.x+=s;this.y+=s;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScaledVector:function(v,s){this.x+=v.x*s;this.y+=v.y*s;return this},sub:function(v,w){if(void 0!==w)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(v,w);this.x-=v.x;this.y-=v.y;return this},subScalar:function(s){this.x-=s;this.y-=s;return this},
subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(v){this.x*=v.x;this.y*=v.y;return this},multiplyScalar:function(scalar){this.x*=scalar;this.y*=scalar;return this},divide:function(v){this.x/=v.x;this.y/=v.y;return this},divideScalar:function(scalar){return this.multiplyScalar(1/scalar)},applyMatrix3:function(m){var x=this.x,y=this.y;m=m.elements;this.x=m[0]*x+m[3]*y+m[6];this.y=m[1]*x+m[4]*y+m[7];return this},min:function(v){this.x=Math.min(this.x,v.x);this.y=
Math.min(this.y,v.y);return this},max:function(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this},clamp:function(min,max){this.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));return this},clampScalar:function(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));return this},clampLength:function(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,
Math.min(max,length)))},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(v){return this.x*v.x+
this.y*v.y},cross:function(v){return this.x*v.y-this.y*v.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){return Math.atan2(-this.y,-this.x)+Math.PI},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},distanceToSquared:function(v){var dx=this.x-v.x;v=this.y-
v.y;return dx*dx+v*v},manhattanDistanceTo:function(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)},setLength:function(length){return this.normalize().multiplyScalar(length)},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this},lerpVectors:function(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;return this},equals:function(v){return v.x===this.x&&v.y===this.y},fromArray:function(array,offset){void 0===offset&&(offset=0);this.x=array[offset];
this.y=array[offset+1];return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);array[offset]=this.x;array[offset+1]=this.y;return array},fromBufferAttribute:function(attribute,index,offset){void 0!==offset&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute().");this.x=attribute.getX(index);this.y=attribute.getY(index);return this},rotateAround:function(center,angle){var c=Math.cos(angle);angle=Math.sin(angle);var x=this.x-center.x,
y=this.y-center.y;this.x=x*c-y*angle+center.x;this.y=x*angle+y*c+center.y;return this},random:function(){this.x=Math.random();this.y=Math.random();return this}});Object.assign(Matrix3.prototype,{isMatrix3:!0,set:function(n11,n12,n13,n21,n22,n23,n31,n32,n33){var te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return(new this.constructor).fromArray(this.elements)},
copy:function(m){var te=this.elements;m=m.elements;te[0]=m[0];te[1]=m[1];te[2]=m[2];te[3]=m[3];te[4]=m[4];te[5]=m[5];te[6]=m[6];te[7]=m[7];te[8]=m[8];return this},extractBasis:function(xAxis,yAxis,zAxis){xAxis.setFromMatrix3Column(this,0);yAxis.setFromMatrix3Column(this,1);zAxis.setFromMatrix3Column(this,2);return this},setFromMatrix4:function(m){m=m.elements;this.set(m[0],m[4],m[8],m[1],m[5],m[9],m[2],m[6],m[10]);return this},multiply:function(m){return this.multiplyMatrices(this,m)},premultiply:function(m){return this.multiplyMatrices(m,
this)},multiplyMatrices:function(a,b){var ae=a.elements,be=b.elements;b=this.elements;a=ae[0];var a12=ae[3],a13=ae[6],a21=ae[1],a22=ae[4],a23=ae[7],a31=ae[2],a32=ae[5];ae=ae[8];var b11=be[0],b12=be[3],b13=be[6],b21=be[1],b22=be[4],b23=be[7],b31=be[2],b32=be[5];be=be[8];b[0]=a*b11+a12*b21+a13*b31;b[3]=a*b12+a12*b22+a13*b32;b[6]=a*b13+a12*b23+a13*be;b[1]=a21*b11+a22*b21+a23*b31;b[4]=a21*b12+a22*b22+a23*b32;b[7]=a21*b13+a22*b23+a23*be;b[2]=a31*b11+a32*b21+ae*b31;b[5]=a31*b12+a32*b22+ae*b32;b[8]=a31*
b13+a32*b23+ae*be;return this},multiplyScalar:function(s){var te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this},determinant:function(){var te=this.elements,a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7];te=te[8];return a*e*te-a*f*h-b*d*te+b*f*g+c*d*h-c*e*g},getInverse:function(matrix,throwOnDegenerate){void 0!==throwOnDegenerate&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");
var me=matrix.elements;matrix=this.elements;throwOnDegenerate=me[0];var n21=me[1],n31=me[2],n12=me[3],n22=me[4],n32=me[5],n13=me[6],n23=me[7];me=me[8];var t11=me*n22-n32*n23,t12=n32*n13-me*n12,t13=n23*n12-n22*n13,det=throwOnDegenerate*t11+n21*t12+n31*t13;if(0===det)return this.set(0,0,0,0,0,0,0,0,0);det=1/det;matrix[0]=t11*det;matrix[1]=(n31*n23-me*n21)*det;matrix[2]=(n32*n21-n31*n22)*det;matrix[3]=t12*det;matrix[4]=(me*throwOnDegenerate-n31*n13)*det;matrix[5]=(n31*n12-n32*throwOnDegenerate)*det;
matrix[6]=t13*det;matrix[7]=(n21*n13-n23*throwOnDegenerate)*det;matrix[8]=(n22*throwOnDegenerate-n21*n12)*det;return this},transpose:function(){var m=this.elements;var tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this},getNormalMatrix:function(matrix4){return this.setFromMatrix4(matrix4).getInverse(this).transpose()},transposeIntoArray:function(r){var m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=
m[8];return this},setUvTransform:function(tx,ty,sx,sy,rotation,cx,cy){var c=Math.cos(rotation);rotation=Math.sin(rotation);this.set(sx*c,sx*rotation,-sx*(c*cx+rotation*cy)+cx+tx,-sy*rotation,sy*c,-sy*(-rotation*cx+c*cy)+cy+ty,0,0,1)},scale:function(sx,sy){var te=this.elements;te[0]*=sx;te[3]*=sx;te[6]*=sx;te[1]*=sy;te[4]*=sy;te[7]*=sy;return this},rotate:function(theta){var c=Math.cos(theta);theta=Math.sin(theta);var te=this.elements,a11=te[0],a12=te[3],a13=te[6],a21=te[1],a22=te[4],a23=te[7];te[0]=
c*a11+theta*a21;te[3]=c*a12+theta*a22;te[6]=c*a13+theta*a23;te[1]=-theta*a11+c*a21;te[4]=-theta*a12+c*a22;te[7]=-theta*a13+c*a23;return this},translate:function(tx,ty){var te=this.elements;te[0]+=tx*te[2];te[3]+=tx*te[5];te[6]+=tx*te[8];te[1]+=ty*te[2];te[4]+=ty*te[5];te[7]+=ty*te[8];return this},equals:function(matrix){var te=this.elements;matrix=matrix.elements;for(var _i=0;9>_i;_i++)if(te[_i]!==matrix[_i])return!1;return!0},fromArray:function(array,offset){void 0===offset&&(offset=0);for(var _i2=
0;9>_i2;_i2++)this.elements[_i2]=array[_i2+offset];return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);var te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];return array}});var _canvas$jscomp$0,ImageUtils={getDataURL:function(image){if(/^data:/i.test(image.src)||"undefined"==typeof HTMLCanvasElement)return image.src;
if(!(image instanceof HTMLCanvasElement)){void 0===_canvas$jscomp$0&&(_canvas$jscomp$0=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"));_canvas$jscomp$0.width=image.width;_canvas$jscomp$0.height=image.height;var context=_canvas$jscomp$0.getContext("2d");image instanceof ImageData?context.putImageData(image,0,0):context.drawImage(image,0,0,image.width,image.height);image=_canvas$jscomp$0}return 2048<image.width||2048<image.height?image.toDataURL("image/jpeg",.6):image.toDataURL("image/png")}};
exports.ImageUtils=ImageUtils;var textureId=0;Texture.DEFAULT_IMAGE=void 0;Texture.DEFAULT_MAPPING=300;Texture.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Texture,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(source){this.name=source.name;this.image=source.image;this.mipmaps=source.mipmaps.slice(0);
this.mapping=source.mapping;this.wrapS=source.wrapS;this.wrapT=source.wrapT;this.magFilter=source.magFilter;this.minFilter=source.minFilter;this.anisotropy=source.anisotropy;this.format=source.format;this.internalFormat=source.internalFormat;this.type=source.type;this.offset.copy(source.offset);this.repeat.copy(source.repeat);this.center.copy(source.center);this.rotation=source.rotation;this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrix.copy(source.matrix);this.generateMipmaps=source.generateMipmaps;
this.premultiplyAlpha=source.premultiplyAlpha;this.flipY=source.flipY;this.unpackAlignment=source.unpackAlignment;this.encoding=source.encoding;return this},toJSON:function(meta){var isRootObject=void 0===meta||"string"===typeof meta;if(!isRootObject&&void 0!==meta.textures[this.uuid])return meta.textures[this.uuid];var output={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,
this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var image=this.image;void 0===image.uuid&&(image.uuid=MathUtils.generateUUID());if(!isRootObject&&void 0===meta.images[image.uuid]){if(Array.isArray(image)){var url=
[];for(var _i3=0,l=image.length;_i3<l;_i3++)url.push(ImageUtils.getDataURL(image[_i3]))}else url=ImageUtils.getDataURL(image);meta.images[image.uuid]={uuid:image.uuid,url:url}}output.image=image.uuid}isRootObject||(meta.textures[this.uuid]=output);return output},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(uv){if(300!==this.mapping)return uv;uv.applyMatrix3(this.matrix);if(0>uv.x||1<uv.x)switch(this.wrapS){case RepeatWrapping:uv.x-=Math.floor(uv.x);break;case ClampToEdgeWrapping:uv.x=
0>uv.x?0:1;break;case MirroredRepeatWrapping:uv.x=1===Math.abs(Math.floor(uv.x)%2)?Math.ceil(uv.x)-uv.x:uv.x-Math.floor(uv.x)}if(0>uv.y||1<uv.y)switch(this.wrapT){case RepeatWrapping:uv.y-=Math.floor(uv.y);break;case ClampToEdgeWrapping:uv.y=0>uv.y?0:1;break;case MirroredRepeatWrapping:uv.y=1===Math.abs(Math.floor(uv.y)%2)?Math.ceil(uv.y)-uv.y:uv.y-Math.floor(uv.y)}this.flipY&&(uv.y=1-uv.y);return uv}});Object.defineProperty(Texture.prototype,"needsUpdate",{set:function(value){!0===value&&this.version++}});
Object.defineProperties(Vector4.prototype,{width:{get:function(){return this.z},set:function(value){this.z=value}},height:{get:function(){return this.w},set:function(value){this.w=value}}});Object.assign(Vector4.prototype,{isVector4:!0,set:function(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this},setScalar:function(scalar){this.w=this.z=this.y=this.x=scalar;return this},setX:function(x){this.x=x;return this},setY:function(y){this.y=y;return this},setZ:function(z){this.z=z;return this},setW:function(w){this.w=
w;return this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw Error("index is out of range: "+index);}return this},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+index);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(v){this.x=
v.x;this.y=v.y;this.z=v.z;this.w=void 0!==v.w?v.w:1;return this},add:function(v,w){if(void 0!==w)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(v,w);this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;return this},addScalar:function(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(v,s){this.x+=v.x*
s;this.y+=v.y*s;this.z+=v.z*s;this.w+=v.w*s;return this},sub:function(v,w){if(void 0!==w)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(v,w);this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this},subScalar:function(s){this.x-=s;this.y-=s;this.z-=s;this.w-=s;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(scalar){this.x*=scalar;this.y*=
scalar;this.z*=scalar;this.w*=scalar;return this},applyMatrix4:function(m){var x=this.x,y=this.y,z=this.z,w=this.w;m=m.elements;this.x=m[0]*x+m[4]*y+m[8]*z+m[12]*w;this.y=m[1]*x+m[5]*y+m[9]*z+m[13]*w;this.z=m[2]*x+m[6]*y+m[10]*z+m[14]*w;this.w=m[3]*x+m[7]*y+m[11]*z+m[15]*w;return this},divideScalar:function(scalar){return this.multiplyScalar(1/scalar)},setAxisAngleFromQuaternion:function(q){this.w=2*Math.acos(q.w);var s=Math.sqrt(1-q.w*q.w);1E-4>s?(this.x=1,this.z=this.y=0):(this.x=q.x/s,this.y=q.y/
s,this.z=q.z/s);return this},setAxisAngleFromRotationMatrix:function(m){m=m.elements;var m11=m[0];var z=m[4];var m13=m[8],m21=m[1],m22=m[5],m23=m[9];var y=m[2];var x=m[6];var m33=m[10];if(.01>Math.abs(z-m21)&&.01>Math.abs(m13-y)&&.01>Math.abs(m23-x)){if(.1>Math.abs(z+m21)&&.1>Math.abs(m13+y)&&.1>Math.abs(m23+x)&&.1>Math.abs(m11+m22+m33-3))return this.set(1,0,0,0),this;m=Math.PI;m11=(m11+1)/2;m22=(m22+1)/2;m33=(m33+1)/2;z=(z+m21)/4;m13=(m13+y)/4;m23=(m23+x)/4;m11>m22&&m11>m33?.01>m11?(x=0,z=y=.707106781):
(x=Math.sqrt(m11),y=z/x,z=m13/x):m22>m33?.01>m22?(x=.707106781,y=0,z=.707106781):(y=Math.sqrt(m22),x=z/y,z=m23/y):.01>m33?(y=x=.707106781,z=0):(z=Math.sqrt(m33),x=m13/z,y=m23/z);this.set(x,y,z,m);return this}m=Math.sqrt((x-m23)*(x-m23)+(m13-y)*(m13-y)+(m21-z)*(m21-z));.001>Math.abs(m)&&(m=1);this.x=(x-m23)/m;this.y=(m13-y)/m;this.z=(m21-z)/m;this.w=Math.acos((m11+m22+m33-1)/2);return this},min:function(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);this.w=Math.min(this.w,
v.w);return this},max:function(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);this.w=Math.max(this.w,v.w);return this},clamp:function(min,max){this.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));this.w=Math.max(min.w,Math.min(max.w,this.w));return this},clampScalar:function(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,
this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));this.w=Math.max(minVal,Math.min(maxVal,this.w));return this},clampLength:function(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)))},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);
return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(v){return this.x*
v.x+this.y*v.y+this.z*v.z+this.w*v.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(length){return this.normalize().multiplyScalar(length)},lerp:function(v,alpha){this.x+=(v.x-this.x)*
alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this},lerpVectors:function(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;this.w=v1.w+(v2.w-v1.w)*alpha;return this},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w},fromArray:function(array,offset){void 0===offset&&(offset=0);this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];this.w=array[offset+3];return this},
toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;array[offset+3]=this.w;return array},fromBufferAttribute:function(attribute,index,offset){void 0!==offset&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute().");this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);this.w=attribute.getW(index);return this},random:function(){this.x=Math.random();
this.y=Math.random();this.z=Math.random();this.w=Math.random();return this}});WebGLRenderTarget.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:WebGLRenderTarget,isWebGLRenderTarget:!0,setSize:function(width,height){if(this.width!==width||this.height!==height)this.width=width,this.height=height,this.texture.image.width=width,this.texture.image.height=height,this.dispose();this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height)},clone:function(){return(new this.constructor).copy(this)},
copy:function(source){this.width=source.width;this.height=source.height;this.viewport.copy(source.viewport);this.texture=source.texture.clone();this.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});WebGLMultisampleRenderTarget.prototype=Object.assign(Object.create(WebGLRenderTarget.prototype),{constructor:WebGLMultisampleRenderTarget,isWebGLMultisampleRenderTarget:!0,
copy:function(source){WebGLRenderTarget.prototype.copy.call(this,source);this.samples=source.samples;return this}});Object.assign(Quaternion,{slerp:function(qa,qb,qm,t){return qm.copy(qa).slerp(qb,t)},slerpFlat:function(dst,dstOffset,src0,srcOffset0,src1,srcOffset1,t){var x0=src0[srcOffset0+0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2];src0=src0[srcOffset0+3];srcOffset0=src1[srcOffset1+0];var y1=src1[srcOffset1+1],z1=src1[srcOffset1+2];src1=src1[srcOffset1+3];if(src0!==src1||x0!==srcOffset0||y0!==
y1||z0!==z1){srcOffset1=1-t;var cos=x0*srcOffset0+y0*y1+z0*z1+src0*src1,dir=0<=cos?1:-1,sqrSin=1-cos*cos;sqrSin>Number.EPSILON&&(sqrSin=Math.sqrt(sqrSin),cos=Math.atan2(sqrSin,cos*dir),srcOffset1=Math.sin(srcOffset1*cos)/sqrSin,t=Math.sin(t*cos)/sqrSin);dir*=t;x0=x0*srcOffset1+srcOffset0*dir;y0=y0*srcOffset1+y1*dir;z0=z0*srcOffset1+z1*dir;src0=src0*srcOffset1+src1*dir;srcOffset1===1-t&&(t=1/Math.sqrt(x0*x0+y0*y0+z0*z0+src0*src0),x0*=t,y0*=t,z0*=t,src0*=t)}dst[dstOffset]=x0;dst[dstOffset+1]=y0;dst[dstOffset+
2]=z0;dst[dstOffset+3]=src0},multiplyQuaternionsFlat:function(dst,dstOffset,src0,srcOffset0,src1,srcOffset1){var x0=src0[srcOffset0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2];src0=src0[srcOffset0+3];srcOffset0=src1[srcOffset1];var y1=src1[srcOffset1+1],z1=src1[srcOffset1+2];src1=src1[srcOffset1+3];dst[dstOffset]=x0*src1+src0*srcOffset0+y0*z1-z0*y1;dst[dstOffset+1]=y0*src1+src0*y1+z0*srcOffset0-x0*z1;dst[dstOffset+2]=z0*src1+src0*z1+x0*y1-y0*srcOffset0;dst[dstOffset+3]=src0*src1-x0*srcOffset0-y0*
y1-z0*z1;return dst}});Object.defineProperties(Quaternion.prototype,{x:{get:function(){return this._x},set:function(value){this._x=value;this._onChangeCallback()}},y:{get:function(){return this._y},set:function(value){this._y=value;this._onChangeCallback()}},z:{get:function(){return this._z},set:function(value){this._z=value;this._onChangeCallback()}},w:{get:function(){return this._w},set:function(value){this._w=value;this._onChangeCallback()}}});Object.assign(Quaternion.prototype,{isQuaternion:!0,
set:function(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this._onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(quaternion){this._x=quaternion.x;this._y=quaternion.y;this._z=quaternion.z;this._w=quaternion.w;this._onChangeCallback();return this},setFromEuler:function(euler,update){if(!euler||!euler.isEuler)throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
var x=euler._x,y=euler._y,z=euler._z;euler=euler.order;var cos=Math.cos,sin=Math.sin,c1=cos(x/2),c2=cos(y/2);cos=cos(z/2);x=sin(x/2);y=sin(y/2);z=sin(z/2);switch(euler){case "XYZ":this._x=x*c2*cos+c1*y*z;this._y=c1*y*cos-x*c2*z;this._z=c1*c2*z+x*y*cos;this._w=c1*c2*cos-x*y*z;break;case "YXZ":this._x=x*c2*cos+c1*y*z;this._y=c1*y*cos-x*c2*z;this._z=c1*c2*z-x*y*cos;this._w=c1*c2*cos+x*y*z;break;case "ZXY":this._x=x*c2*cos-c1*y*z;this._y=c1*y*cos+x*c2*z;this._z=c1*c2*z+x*y*cos;this._w=c1*c2*cos-x*y*z;
break;case "ZYX":this._x=x*c2*cos-c1*y*z;this._y=c1*y*cos+x*c2*z;this._z=c1*c2*z-x*y*cos;this._w=c1*c2*cos+x*y*z;break;case "YZX":this._x=x*c2*cos+c1*y*z;this._y=c1*y*cos+x*c2*z;this._z=c1*c2*z-x*y*cos;this._w=c1*c2*cos-x*y*z;break;case "XZY":this._x=x*c2*cos-c1*y*z;this._y=c1*y*cos-x*c2*z;this._z=c1*c2*z+x*y*cos;this._w=c1*c2*cos+x*y*z;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+euler)}!1!==update&&this._onChangeCallback();return this},setFromAxisAngle:function(axis,
angle){angle/=2;var s=Math.sin(angle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(angle);this._onChangeCallback();return this},setFromRotationMatrix:function(m){var te=m.elements,m11=te[0];m=te[4];var m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6];te=te[10];var trace=m11+m22+te;0<trace?(m11=.5/Math.sqrt(trace+1),this._w=.25/m11,this._x=(m32-m23)*m11,this._y=(m13-m31)*m11,this._z=(m21-m)*m11):m11>m22&&m11>te?(m11=2*Math.sqrt(1+m11-m22-te),this._w=(m32-m23)/m11,
this._x=.25*m11,this._y=(m+m21)/m11,this._z=(m13+m31)/m11):m22>te?(m11=2*Math.sqrt(1+m22-m11-te),this._w=(m13-m31)/m11,this._x=(m+m21)/m11,this._y=.25*m11,this._z=(m23+m32)/m11):(m11=2*Math.sqrt(1+te-m11-m22),this._w=(m21-m)/m11,this._x=(m13+m31)/m11,this._y=(m23+m32)/m11,this._z=.25*m11);this._onChangeCallback();return this},setFromUnitVectors:function(vFrom,vTo){var r=vFrom.dot(vTo)+1;1E-6>r?(r=0,Math.abs(vFrom.x)>Math.abs(vFrom.z)?(this._x=-vFrom.y,this._y=vFrom.x,this._z=0):(this._x=0,this._y=
-vFrom.z,this._z=vFrom.y)):(this._x=vFrom.y*vTo.z-vFrom.z*vTo.y,this._y=vFrom.z*vTo.x-vFrom.x*vTo.z,this._z=vFrom.x*vTo.y-vFrom.y*vTo.x);this._w=r;return this.normalize()},angleTo:function(q){return 2*Math.acos(Math.abs(MathUtils.clamp(this.dot(q),-1,1)))},rotateTowards:function(q,step){var angle=this.angleTo(q);if(0===angle)return this;this.slerp(q,Math.min(1,step/angle));return this},inverse:function(){return this.conjugate()},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this._onChangeCallback();
return this},dot:function(v){return this._x*v._x+this._y*v._y+this._z*v._z+this._w*v._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var l=this.length();0===l?(this._z=this._y=this._x=0,this._w=1):(l=1/l,this._x*=l,this._y*=l,this._z*=l,this._w*=l);this._onChangeCallback();return this},multiply:function(q,p){return void 0!==p?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
this.multiplyQuaternions(q,p)):this.multiplyQuaternions(this,q)},premultiply:function(q){return this.multiplyQuaternions(q,this)},multiplyQuaternions:function(a,b){var qax=a._x,qay=a._y,qaz=a._z;a=a._w;var qbx=b._x,qby=b._y,qbz=b._z;b=b._w;this._x=qax*b+a*qbx+qay*qbz-qaz*qby;this._y=qay*b+a*qby+qaz*qbx-qax*qbz;this._z=qaz*b+a*qbz+qax*qby-qay*qbx;this._w=a*b-qax*qbx-qay*qby-qaz*qbz;this._onChangeCallback();return this},slerp:function(qb,t){if(0===t)return this;if(1===t)return this.copy(qb);var x=this._x,
y=this._y,z=this._z,w=this._w,cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;0>cosHalfTheta?(this._w=-qb._w,this._x=-qb._x,this._y=-qb._y,this._z=-qb._z,cosHalfTheta=-cosHalfTheta):this.copy(qb);if(1<=cosHalfTheta)return this._w=w,this._x=x,this._y=y,this._z=z,this;qb=1-cosHalfTheta*cosHalfTheta;if(qb<=Number.EPSILON)return cosHalfTheta=1-t,this._w=cosHalfTheta*w+t*this._w,this._x=cosHalfTheta*x+t*this._x,this._y=cosHalfTheta*y+t*this._y,this._z=cosHalfTheta*z+t*this._z,this.normalize(),this._onChangeCallback(),
this;qb=Math.sqrt(qb);var halfTheta=Math.atan2(qb,cosHalfTheta);cosHalfTheta=Math.sin((1-t)*halfTheta)/qb;t=Math.sin(t*halfTheta)/qb;this._w=w*cosHalfTheta+this._w*t;this._x=x*cosHalfTheta+this._x*t;this._y=y*cosHalfTheta+this._y*t;this._z=z*cosHalfTheta+this._z*t;this._onChangeCallback();return this},equals:function(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w},fromArray:function(array,offset){void 0===offset&&(offset=0);this._x=
array[offset];this._y=array[offset+1];this._z=array[offset+2];this._w=array[offset+3];this._onChangeCallback();return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._w;return array},fromBufferAttribute:function(attribute,index){this._x=attribute.getX(index);this._y=attribute.getY(index);this._z=attribute.getZ(index);this._w=attribute.getW(index);return this},_onChange:function(callback){this._onChangeCallback=
callback;return this},_onChangeCallback:function(){}});var _vector=new Vector3,_quaternion=new Quaternion;Object.assign(Vector3.prototype,{isVector3:!0,set:function(x,y,z){this.x=x;this.y=y;this.z=z;return this},setScalar:function(scalar){this.z=this.y=this.x=scalar;return this},setX:function(x){this.x=x;return this},setY:function(y){this.y=y;return this},setZ:function(z){this.z=z;return this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=
value;break;default:throw Error("index is out of range: "+index);}return this},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+index);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(v){this.x=v.x;this.y=v.y;this.z=v.z;return this},add:function(v,w){if(void 0!==w)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
this.addVectors(v,w);this.x+=v.x;this.y+=v.y;this.z+=v.z;return this},addScalar:function(s){this.x+=s;this.y+=s;this.z+=s;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addScaledVector:function(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;return this},sub:function(v,w){if(void 0!==w)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(v,w);this.x-=v.x;this.y-=v.y;this.z-=v.z;
return this},subScalar:function(s){this.x-=s;this.y-=s;this.z-=s;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(v,w){if(void 0!==w)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(v,w);this.x*=v.x;this.y*=v.y;this.z*=v.z;return this},multiplyScalar:function(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this},multiplyVectors:function(a,
b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(euler){euler&&euler.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.");return this.applyQuaternion(_quaternion.setFromEuler(euler))},applyAxisAngle:function(axis,angle){return this.applyQuaternion(_quaternion.setFromAxisAngle(axis,angle))},applyMatrix3:function(m){var x=this.x,y=this.y,z=this.z;m=m.elements;this.x=m[0]*x+m[3]*y+m[6]*z;this.y=m[1]*x+m[4]*
y+m[7]*z;this.z=m[2]*x+m[5]*y+m[8]*z;return this},applyNormalMatrix:function(m){return this.applyMatrix3(m).normalize()},applyMatrix4:function(m){var x=this.x,y=this.y,z=this.z;m=m.elements;var w=1/(m[3]*x+m[7]*y+m[11]*z+m[15]);this.x=(m[0]*x+m[4]*y+m[8]*z+m[12])*w;this.y=(m[1]*x+m[5]*y+m[9]*z+m[13])*w;this.z=(m[2]*x+m[6]*y+m[10]*z+m[14])*w;return this},applyQuaternion:function(q){var x=this.x,y=this.y,z=this.z,qx=q.x,qy=q.y,qz=q.z;q=q.w;var ix=q*x+qy*z-qz*y,iy=q*y+qz*x-qx*z,iz=q*z+qx*y-qy*x;x=-qx*
x-qy*y-qz*z;this.x=ix*q+x*-qx+iy*-qz-iz*-qy;this.y=iy*q+x*-qy+iz*-qx-ix*-qz;this.z=iz*q+x*-qz+ix*-qy-iy*-qx;return this},project:function(camera){return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix)},unproject:function(camera){return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld)},transformDirection:function(m){var x=this.x,y=this.y,z=this.z;m=m.elements;this.x=m[0]*x+m[4]*y+m[8]*z;this.y=m[1]*x+m[5]*y+m[9]*z;this.z=m[2]*x+m[6]*
y+m[10]*z;return this.normalize()},divide:function(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this},divideScalar:function(scalar){return this.multiplyScalar(1/scalar)},min:function(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this},max:function(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this},clamp:function(min,max){this.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,
this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));return this},clampScalar:function(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));return this},clampLength:function(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)))},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},
ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(v){return this.x*
v.x+this.y*v.y+this.z*v.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(length){return this.normalize().multiplyScalar(length)},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;
return this},lerpVectors:function(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;return this},cross:function(v,w){return void 0!==w?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(v,w)):this.crossVectors(this,v)},crossVectors:function(a,b){var ax=a.x,ay=a.y;a=a.z;var bx=b.x,by=b.y;b=b.z;this.x=ay*b-a*by;this.y=a*bx-ax*b;this.z=ax*by-ay*bx;return this},projectOnVector:function(v){var denominator=
v.lengthSq();if(0===denominator)return this.set(0,0,0);denominator=v.dot(this)/denominator;return this.copy(v).multiplyScalar(denominator)},projectOnPlane:function(planeNormal){_vector.copy(this).projectOnVector(planeNormal);return this.sub(_vector)},reflect:function(normal){return this.sub(_vector.copy(normal).multiplyScalar(2*this.dot(normal)))},angleTo:function(v){var denominator=Math.sqrt(this.lengthSq()*v.lengthSq());if(0===denominator)return Math.PI/2;v=this.dot(v)/denominator;return Math.acos(MathUtils.clamp(v,
-1,1))},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},distanceToSquared:function(v){var dx=this.x-v.x,dy=this.y-v.y;v=this.z-v.z;return dx*dx+dy*dy+v*v},manhattanDistanceTo:function(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)+Math.abs(this.z-v.z)},setFromSpherical:function(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta)},setFromSphericalCoords:function(radius,phi,theta){var sinPhiRadius=Math.sin(phi)*radius;this.x=sinPhiRadius*Math.sin(theta);this.y=Math.cos(phi)*
radius;this.z=sinPhiRadius*Math.cos(theta);return this},setFromCylindrical:function(c){return this.setFromCylindricalCoords(c.radius,c.theta,c.y)},setFromCylindricalCoords:function(radius,theta,y){this.x=radius*Math.sin(theta);this.y=y;this.z=radius*Math.cos(theta);return this},setFromMatrixPosition:function(m){m=m.elements;this.x=m[12];this.y=m[13];this.z=m[14];return this},setFromMatrixScale:function(m){var sx=this.setFromMatrixColumn(m,0).length(),sy=this.setFromMatrixColumn(m,1).length();m=this.setFromMatrixColumn(m,
2).length();this.x=sx;this.y=sy;this.z=m;return this},setFromMatrixColumn:function(m,index){return this.fromArray(m.elements,4*index)},setFromMatrix3Column:function(m,index){return this.fromArray(m.elements,3*index)},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z},fromArray:function(array,offset){void 0===offset&&(offset=0);this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&
(offset=0);array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;return array},fromBufferAttribute:function(attribute,index,offset){void 0!==offset&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute().");this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);return this},random:function(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this}});var _v1=new Vector3,_m1=new Matrix4,_zero=new Vector3(0,0,0),
_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3;Object.assign(Matrix4.prototype,{isMatrix4:!0,set:function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){var te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return(new Matrix4).fromArray(this.elements)},
copy:function(m){var te=this.elements;m=m.elements;te[0]=m[0];te[1]=m[1];te[2]=m[2];te[3]=m[3];te[4]=m[4];te[5]=m[5];te[6]=m[6];te[7]=m[7];te[8]=m[8];te[9]=m[9];te[10]=m[10];te[11]=m[11];te[12]=m[12];te[13]=m[13];te[14]=m[14];te[15]=m[15];return this},copyPosition:function(m){var te=this.elements;m=m.elements;te[12]=m[12];te[13]=m[13];te[14]=m[14];return this},extractBasis:function(xAxis,yAxis,zAxis){xAxis.setFromMatrixColumn(this,0);yAxis.setFromMatrixColumn(this,1);zAxis.setFromMatrixColumn(this,
2);return this},makeBasis:function(xAxis,yAxis,zAxis){this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1);return this},extractRotation:function(m){var te=this.elements,me=m.elements,scaleX=1/_v1.setFromMatrixColumn(m,0).length(),scaleY=1/_v1.setFromMatrixColumn(m,1).length();m=1/_v1.setFromMatrixColumn(m,2).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[3]=0;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[7]=0;te[8]=me[8]*
m;te[9]=me[9]*m;te[10]=me[10]*m;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this},makeRotationFromEuler:function(euler){euler&&euler.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var te=this.elements,x=euler.x,y=euler.y,z=euler.z,a=Math.cos(x);x=Math.sin(x);var c=Math.cos(y);y=Math.sin(y);var e=Math.cos(z);z=Math.sin(z);if("XYZ"===euler.order){euler=a*e;var af=a*z,be=x*e,bf=x*z;te[0]=c*e;te[4]=-c*z;te[8]=y;te[1]=
af+be*y;te[5]=euler-bf*y;te[9]=-x*c;te[2]=bf-euler*y;te[6]=be+af*y;te[10]=a*c}else"YXZ"===euler.order?(euler=c*e,af=c*z,be=y*e,bf=y*z,te[0]=euler+bf*x,te[4]=be*x-af,te[8]=a*y,te[1]=a*z,te[5]=a*e,te[9]=-x,te[2]=af*x-be,te[6]=bf+euler*x,te[10]=a*c):"ZXY"===euler.order?(euler=c*e,af=c*z,be=y*e,bf=y*z,te[0]=euler-bf*x,te[4]=-a*z,te[8]=be+af*x,te[1]=af+be*x,te[5]=a*e,te[9]=bf-euler*x,te[2]=-a*y,te[6]=x,te[10]=a*c):"ZYX"===euler.order?(euler=a*e,af=a*z,be=x*e,bf=x*z,te[0]=c*e,te[4]=be*y-af,te[8]=euler*
y+bf,te[1]=c*z,te[5]=bf*y+euler,te[9]=af*y-be,te[2]=-y,te[6]=x*c,te[10]=a*c):"YZX"===euler.order?(euler=a*c,af=a*y,be=x*c,bf=x*y,te[0]=c*e,te[4]=bf-euler*z,te[8]=be*z+af,te[1]=z,te[5]=a*e,te[9]=-x*e,te[2]=-y*e,te[6]=af*z+be,te[10]=euler-bf*z):"XZY"===euler.order&&(euler=a*c,af=a*y,be=x*c,bf=x*y,te[0]=c*e,te[4]=-z,te[8]=y*e,te[1]=euler*z+bf,te[5]=a*e,te[9]=af*z-be,te[2]=be*z-af,te[6]=x*e,te[10]=bf*z+euler);te[3]=0;te[7]=0;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this},makeRotationFromQuaternion:function(q){return this.compose(_zero,
q,_one)},lookAt:function(eye,target,up){var te=this.elements;_z.subVectors(eye,target);0===_z.lengthSq()&&(_z.z=1);_z.normalize();_x.crossVectors(up,_z);0===_x.lengthSq()&&(1===Math.abs(up.z)?_z.x+=1E-4:_z.z+=1E-4,_z.normalize(),_x.crossVectors(up,_z));_x.normalize();_y.crossVectors(_z,_x);te[0]=_x.x;te[4]=_y.x;te[8]=_z.x;te[1]=_x.y;te[5]=_y.y;te[9]=_z.y;te[2]=_x.z;te[6]=_y.z;te[10]=_z.z;return this},multiply:function(m,n){return void 0!==n?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
this.multiplyMatrices(m,n)):this.multiplyMatrices(this,m)},premultiply:function(m){return this.multiplyMatrices(m,this)},multiplyMatrices:function(a,b){var ae=a.elements,be=b.elements;b=this.elements;a=ae[0];var a12=ae[4],a13=ae[8],a14=ae[12],a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13],a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14],a41=ae[3],a42=ae[7],a43=ae[11];ae=ae[15];var b11=be[0],b12=be[4],b13=be[8],b14=be[12],b21=be[1],b22=be[5],b23=be[9],b24=be[13],b31=be[2],b32=be[6],b33=be[10],b34=be[14],b41=be[3],
b42=be[7],b43=be[11];be=be[15];b[0]=a*b11+a12*b21+a13*b31+a14*b41;b[4]=a*b12+a12*b22+a13*b32+a14*b42;b[8]=a*b13+a12*b23+a13*b33+a14*b43;b[12]=a*b14+a12*b24+a13*b34+a14*be;b[1]=a21*b11+a22*b21+a23*b31+a24*b41;b[5]=a21*b12+a22*b22+a23*b32+a24*b42;b[9]=a21*b13+a22*b23+a23*b33+a24*b43;b[13]=a21*b14+a22*b24+a23*b34+a24*be;b[2]=a31*b11+a32*b21+a33*b31+a34*b41;b[6]=a31*b12+a32*b22+a33*b32+a34*b42;b[10]=a31*b13+a32*b23+a33*b33+a34*b43;b[14]=a31*b14+a32*b24+a33*b34+a34*be;b[3]=a41*b11+a42*b21+a43*b31+ae*b41;
b[7]=a41*b12+a42*b22+a43*b32+ae*b42;b[11]=a41*b13+a42*b23+a43*b33+ae*b43;b[15]=a41*b14+a42*b24+a43*b34+ae*be;return this},multiplyScalar:function(s){var te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this},determinant:function(){var te=this.elements,n11=te[0],n12=te[4],n13=te[8],n14=te[12],n21=te[1],n22=te[5],n23=te[9],n24=te[13],n31=te[2],n32=te[6],n33=te[10],n34=te[14];
return te[3]*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+te[7]*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+te[11]*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+te[15]*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31)},transpose:function(){var te=this.elements;var tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=
tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this},setPosition:function(x,y,z){var te=this.elements;x.isVector3?(te[12]=x.x,te[13]=x.y,te[14]=x.z):(te[12]=x,te[13]=y,te[14]=z);return this},getInverse:function(m,throwOnDegenerate){void 0!==throwOnDegenerate&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");throwOnDegenerate=this.elements;var me=m.elements;m=me[0];var n21=me[1],n31=me[2],n41=me[3],n12=me[4],n22=me[5],
n32=me[6],n42=me[7],n13=me[8],n23=me[9],n33=me[10],n43=me[11],n14=me[12],n24=me[13],n34=me[14];me=me[15];var t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*me+n22*n33*me,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*me-n12*n33*me,t13=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*me+n12*n23*me,t14=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34,det=m*t11+n21*t12+n31*t13+n41*t14;if(0===det)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
det=1/det;throwOnDegenerate[0]=t11*det;throwOnDegenerate[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*me-n21*n33*me)*det;throwOnDegenerate[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*me+n21*n32*me)*det;throwOnDegenerate[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*det;throwOnDegenerate[4]=t12*det;throwOnDegenerate[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-m*n34*n43-n13*n31*me+m*n33*me)*det;throwOnDegenerate[6]=(n14*n32*n41-n12*n34*n41-n14*
n31*n42+m*n34*n42+n12*n31*me-m*n32*me)*det;throwOnDegenerate[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-m*n33*n42-n12*n31*n43+m*n32*n43)*det;throwOnDegenerate[8]=t13*det;throwOnDegenerate[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+m*n24*n43+n13*n21*me-m*n23*me)*det;throwOnDegenerate[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-m*n24*n42-n12*n21*me+m*n22*me)*det;throwOnDegenerate[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+m*n23*n42+n12*n21*n43-m*n22*n43)*det;throwOnDegenerate[12]=t14*det;throwOnDegenerate[13]=
(n13*n24*n31-n14*n23*n31+n14*n21*n33-m*n24*n33-n13*n21*n34+m*n23*n34)*det;throwOnDegenerate[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+m*n24*n32+n12*n21*n34-m*n22*n34)*det;throwOnDegenerate[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-m*n23*n32-n12*n21*n33+m*n22*n33)*det;return this},scale:function(v){var te=this.elements,x=v.x,y=v.y;v=v.z;te[0]*=x;te[4]*=y;te[8]*=v;te[1]*=x;te[5]*=y;te[9]*=v;te[2]*=x;te[6]*=y;te[10]*=v;te[3]*=x;te[7]*=y;te[11]*=v;return this},getMaxScaleOnAxis:function(){var te=this.elements;
return Math.sqrt(Math.max(te[0]*te[0]+te[1]*te[1]+te[2]*te[2],te[4]*te[4]+te[5]*te[5]+te[6]*te[6],te[8]*te[8]+te[9]*te[9]+te[10]*te[10]))},makeTranslation:function(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this},makeRotationX:function(theta){var c=Math.cos(theta);theta=Math.sin(theta);this.set(1,0,0,0,0,c,-theta,0,0,theta,c,0,0,0,0,1);return this},makeRotationY:function(theta){var c=Math.cos(theta);theta=Math.sin(theta);this.set(c,0,theta,0,0,1,0,0,-theta,0,c,0,0,0,0,1);return this},
makeRotationZ:function(theta){var c=Math.cos(theta);theta=Math.sin(theta);this.set(c,-theta,0,0,theta,c,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(axis,angle){var c=Math.cos(angle);angle=Math.sin(angle);var t=1-c,x=axis.x,y=axis.y;axis=axis.z;var tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-angle*axis,tx*axis+angle*y,0,tx*y+angle*axis,ty*y+c,ty*axis-angle*x,0,tx*axis-angle*y,ty*axis+angle*x,t*axis*axis+c,0,0,0,0,1);return this},makeScale:function(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,
0,1);return this},makeShear:function(x,y,z){this.set(1,y,z,0,x,1,z,0,x,y,1,0,0,0,0,1);return this},compose:function(position,quaternion,scale){var te=this.elements,x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w,x2=x+x,y2=y+y,z2=z+z;quaternion=x*x2;var xy=x*y2;x*=z2;var yy=y*y2;y*=z2;z*=z2;x2*=w;y2*=w;w*=z2;z2=scale.x;var sy=scale.y;scale=scale.z;te[0]=(1-(yy+z))*z2;te[1]=(xy+w)*z2;te[2]=(x-y2)*z2;te[3]=0;te[4]=(xy-w)*sy;te[5]=(1-(quaternion+z))*sy;te[6]=(y+x2)*sy;te[7]=0;te[8]=(x+
y2)*scale;te[9]=(y-x2)*scale;te[10]=(1-(quaternion+yy))*scale;te[11]=0;te[12]=position.x;te[13]=position.y;te[14]=position.z;te[15]=1;return this},decompose:function(position,quaternion,scale){var te=this.elements,sx=_v1.set(te[0],te[1],te[2]).length(),sy=_v1.set(te[4],te[5],te[6]).length(),sz=_v1.set(te[8],te[9],te[10]).length();0>this.determinant()&&(sx=-sx);position.x=te[12];position.y=te[13];position.z=te[14];_m1.copy(this);position=1/sx;te=1/sy;var invSZ=1/sz;_m1.elements[0]*=position;_m1.elements[1]*=
position;_m1.elements[2]*=position;_m1.elements[4]*=te;_m1.elements[5]*=te;_m1.elements[6]*=te;_m1.elements[8]*=invSZ;_m1.elements[9]*=invSZ;_m1.elements[10]*=invSZ;quaternion.setFromRotationMatrix(_m1);scale.x=sx;scale.y=sy;scale.z=sz;return this},makePerspective:function(left,right,top,bottom,near,far){void 0===far&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var te=this.elements;te[0]=2*near/(right-left);te[4]=0;te[8]=(right+
left)/(right-left);te[12]=0;te[1]=0;te[5]=2*near/(top-bottom);te[9]=(top+bottom)/(top-bottom);te[13]=0;te[2]=0;te[6]=0;te[10]=-(far+near)/(far-near);te[14]=-2*far*near/(far-near);te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this},makeOrthographic:function(left,right,top,bottom,near,far){var te=this.elements,w=1/(right-left),h=1/(top-bottom),p=1/(far-near);te[0]=2*w;te[4]=0;te[8]=0;te[12]=-((right+left)*w);te[1]=0;te[5]=2*h;te[9]=0;te[13]=-((top+bottom)*h);te[2]=0;te[6]=0;te[10]=-2*p;te[14]=-((far+near)*
p);te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this},equals:function(matrix){var te=this.elements;matrix=matrix.elements;for(var _i4=0;16>_i4;_i4++)if(te[_i4]!==matrix[_i4])return!1;return!0},fromArray:function(array,offset){void 0===offset&&(offset=0);for(var _i5=0;16>_i5;_i5++)this.elements[_i5]=array[_i5+offset];return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);var te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+
3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];array[offset+9]=te[9];array[offset+10]=te[10];array[offset+11]=te[11];array[offset+12]=te[12];array[offset+13]=te[13];array[offset+14]=te[14];array[offset+15]=te[15];return array}});var _matrix=new Matrix4,_quaternion$1=new Quaternion;Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");Euler.DefaultOrder="XYZ";Object.defineProperties(Euler.prototype,{x:{get:function(){return this._x},
set:function(value){this._x=value;this._onChangeCallback()}},y:{get:function(){return this._y},set:function(value){this._y=value;this._onChangeCallback()}},z:{get:function(){return this._z},set:function(value){this._z=value;this._onChangeCallback()}},order:{get:function(){return this._order},set:function(value){this._order=value;this._onChangeCallback()}}});Object.assign(Euler.prototype,{isEuler:!0,set:function(x,y,z,order){this._x=x;this._y=y;this._z=z;this._order=order||this._order;this._onChangeCallback();
return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this._onChangeCallback();return this},setFromRotationMatrix:function(m,order,update){var clamp=MathUtils.clamp,te=m.elements;m=te[0];var m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6];te=te[10];order=order||this._order;switch(order){case "XYZ":this._y=Math.asin(clamp(m13,-1,1));.9999999>
Math.abs(m13)?(this._x=Math.atan2(-m23,te),this._z=Math.atan2(-m12,m)):(this._x=Math.atan2(m32,m22),this._z=0);break;case "YXZ":this._x=Math.asin(-clamp(m23,-1,1));.9999999>Math.abs(m23)?(this._y=Math.atan2(m13,te),this._z=Math.atan2(m21,m22)):(this._y=Math.atan2(-m31,m),this._z=0);break;case "ZXY":this._x=Math.asin(clamp(m32,-1,1));.9999999>Math.abs(m32)?(this._y=Math.atan2(-m31,te),this._z=Math.atan2(-m12,m22)):(this._y=0,this._z=Math.atan2(m21,m));break;case "ZYX":this._y=Math.asin(-clamp(m31,
-1,1));.9999999>Math.abs(m31)?(this._x=Math.atan2(m32,te),this._z=Math.atan2(m21,m)):(this._x=0,this._z=Math.atan2(-m12,m22));break;case "YZX":this._z=Math.asin(clamp(m21,-1,1));.9999999>Math.abs(m21)?(this._x=Math.atan2(-m23,m22),this._y=Math.atan2(-m31,m)):(this._x=0,this._y=Math.atan2(m13,te));break;case "XZY":this._z=Math.asin(-clamp(m12,-1,1));.9999999>Math.abs(m12)?(this._x=Math.atan2(m32,m22),this._y=Math.atan2(m13,m)):(this._x=Math.atan2(-m23,te),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+
order)}this._order=order;!1!==update&&this._onChangeCallback();return this},setFromQuaternion:function(q,order,update){_matrix.makeRotationFromQuaternion(q);return this.setFromRotationMatrix(_matrix,order,update)},setFromVector3:function(v,order){return this.set(v.x,v.y,v.z,order||this._order)},reorder:function(newOrder){_quaternion$1.setFromEuler(this);return this.setFromQuaternion(_quaternion$1,newOrder)},equals:function(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&
euler._order===this._order},fromArray:function(array){this._x=array[0];this._y=array[1];this._z=array[2];void 0!==array[3]&&(this._order=array[3]);this._onChangeCallback();return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._order;return array},toVector3:function(optionalResult){return optionalResult?optionalResult.set(this._x,this._y,this._z):new Vector3(this._x,
this._y,this._z)},_onChange:function(callback){this._onChangeCallback=callback;return this},_onChangeCallback:function(){}});Object.assign(Layers.prototype,{set:function(channel){this.mask=1<<channel|0},enable:function(channel){this.mask=this.mask|1<<channel|0},enableAll:function(){this.mask=-1},toggle:function(channel){this.mask^=1<<channel|0},disable:function(channel){this.mask&=~(1<<channel|0)},disableAll:function(){this.mask=0},test:function(layers){return 0!==(this.mask&layers.mask)}});var _object3DId=
0,_v1$1=new Vector3,_q1=new Quaternion,_m1$1=new Matrix4,_target=new Vector3,_position=new Vector3,_scale=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"};Object3D.DefaultUp=new Vector3(0,1,0);Object3D.DefaultMatrixAutoUpdate=!0;Object3D.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},
applyMatrix4:function(matrix){this.matrixAutoUpdate&&this.updateMatrix();this.matrix.premultiply(matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(q){this.quaternion.premultiply(q);return this},setRotationFromAxisAngle:function(axis,angle){this.quaternion.setFromAxisAngle(axis,angle)},setRotationFromEuler:function(euler){this.quaternion.setFromEuler(euler,!0)},setRotationFromMatrix:function(m){this.quaternion.setFromRotationMatrix(m)},setRotationFromQuaternion:function(q){this.quaternion.copy(q)},
rotateOnAxis:function(axis,angle){_q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(_q1);return this},rotateOnWorldAxis:function(axis,angle){_q1.setFromAxisAngle(axis,angle);this.quaternion.premultiply(_q1);return this},rotateX:function(angle){return this.rotateOnAxis(_xAxis,angle)},rotateY:function(angle){return this.rotateOnAxis(_yAxis,angle)},rotateZ:function(angle){return this.rotateOnAxis(_zAxis,angle)},translateOnAxis:function(axis,distance){_v1$1.copy(axis).applyQuaternion(this.quaternion);
this.position.add(_v1$1.multiplyScalar(distance));return this},translateX:function(distance){return this.translateOnAxis(_xAxis,distance)},translateY:function(distance){return this.translateOnAxis(_yAxis,distance)},translateZ:function(distance){return this.translateOnAxis(_zAxis,distance)},localToWorld:function(vector){return vector.applyMatrix4(this.matrixWorld)},worldToLocal:function(vector){return vector.applyMatrix4(_m1$1.getInverse(this.matrixWorld))},lookAt:function(x,y,z){x.isVector3?_target.copy(x):
_target.set(x,y,z);x=this.parent;this.updateWorldMatrix(!0,!1);_position.setFromMatrixPosition(this.matrixWorld);this.isCamera||this.isLight?_m1$1.lookAt(_position,_target,this.up):_m1$1.lookAt(_target,_position,this.up);this.quaternion.setFromRotationMatrix(_m1$1);x&&(_m1$1.extractRotation(x.matrixWorld),_q1.setFromRotationMatrix(_m1$1),this.quaternion.premultiply(_q1.inverse()))},add:function(object){if(1<arguments.length){for(var _i6=0;_i6<arguments.length;_i6++)this.add(arguments[_i6]);return this}if(object===
this)return console.error("THREE.Object3D.add: object can't be added as a child of itself.",object),this;object&&object.isObject3D?(null!==object.parent&&object.parent.remove(object),object.parent=this,this.children.push(object),object.dispatchEvent(_addedEvent)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",object);return this},remove:function(object){if(1<arguments.length){for(var _i7=0;_i7<arguments.length;_i7++)this.remove(arguments[_i7]);return this}_i7=this.children.indexOf(object);
-1!==_i7&&(object.parent=null,this.children.splice(_i7,1),object.dispatchEvent(_removedEvent));return this},attach:function(object){this.updateWorldMatrix(!0,!1);_m1$1.getInverse(this.matrixWorld);null!==object.parent&&(object.parent.updateWorldMatrix(!0,!1),_m1$1.multiply(object.parent.matrixWorld));object.applyMatrix4(_m1$1);object.updateWorldMatrix(!1,!1);this.add(object);return this},getObjectById:function(id){return this.getObjectByProperty("id",id)},getObjectByName:function(name){return this.getObjectByProperty("name",
name)},getObjectByProperty:function(name,value){if(this[name]===value)return this;for(var _i8=0,l=this.children.length;_i8<l;_i8++){var object=this.children[_i8].getObjectByProperty(name,value);if(void 0!==object)return object}},getWorldPosition:function(target){void 0===target&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),target=new Vector3);this.updateMatrixWorld(!0);return target.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(target){void 0===
target&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),target=new Quaternion);this.updateMatrixWorld(!0);this.matrixWorld.decompose(_position,target,_scale);return target},getWorldScale:function(target){void 0===target&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),target=new Vector3);this.updateMatrixWorld(!0);this.matrixWorld.decompose(_position,_quaternion$2,target);return target},getWorldDirection:function(target){void 0===target&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),
target=new Vector3);this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return target.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(callback){callback(this);for(var children=this.children,_i9=0,l=children.length;_i9<l;_i9++)children[_i9].traverse(callback)},traverseVisible:function(callback){if(!1!==this.visible){callback(this);for(var children=this.children,_i10=0,l=children.length;_i10<l;_i10++)children[_i10].traverseVisible(callback)}},traverseAncestors:function(callback){var parent=
this.parent;null!==parent&&(callback(parent),parent.traverseAncestors(callback))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(force){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||force)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,force=!0;for(var children=this.children,
_i11=0,l=children.length;_i11<l;_i11++)children[_i11].updateMatrixWorld(force)},updateWorldMatrix:function(updateParents,updateChildren){var parent=this.parent;!0===updateParents&&null!==parent&&parent.updateWorldMatrix(!0,!1);this.matrixAutoUpdate&&this.updateMatrix();null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);if(!0===updateChildren)for(updateParents=this.children,updateChildren=0,parent=updateParents.length;updateChildren<
parent;updateChildren++)updateParents[updateChildren].updateWorldMatrix(!1,!0)},toJSON:function(meta){function serialize(library,element){void 0===library[element.uuid]&&(library[element.uuid]=element.toJSON(meta));return element.uuid}function extractFromCache(cache){var values=[],key;for(key in cache){var data=cache[key];delete data.metadata;values.push(data)}return values}var isRootObject=void 0===meta||"string"===typeof meta,output={};isRootObject&&(meta={geometries:{},materials:{},textures:{},
images:{},shapes:{}},output.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var object={};object.uuid=this.uuid;object.type=this.type;""!==this.name&&(object.name=this.name);!0===this.castShadow&&(object.castShadow=!0);!0===this.receiveShadow&&(object.receiveShadow=!0);!1===this.visible&&(object.visible=!1);!1===this.frustumCulled&&(object.frustumCulled=!1);0!==this.renderOrder&&(object.renderOrder=this.renderOrder);"{}"!==JSON.stringify(this.userData)&&(object.userData=this.userData);
object.layers=this.layers.mask;object.matrix=this.matrix.toArray();!1===this.matrixAutoUpdate&&(object.matrixAutoUpdate=!1);this.isInstancedMesh&&(object.type="InstancedMesh",object.count=this.count,object.instanceMatrix=this.instanceMatrix.toJSON());if(this.isMesh||this.isLine||this.isPoints){object.geometry=serialize(meta.geometries,this.geometry);var parameters=this.geometry.parameters;if(void 0!==parameters&&void 0!==parameters.shapes)if(parameters=parameters.shapes,Array.isArray(parameters))for(var _i13=
0,l=parameters.length;_i13<l;_i13++)serialize(meta.shapes,parameters[_i13]);else serialize(meta.shapes,parameters)}if(void 0!==this.material)if(Array.isArray(this.material)){parameters=[];_i13=0;for(l=this.material.length;_i13<l;_i13++)parameters.push(serialize(meta.materials,this.material[_i13]));object.material=parameters}else object.material=serialize(meta.materials,this.material);if(0<this.children.length)for(object.children=[],parameters=0;parameters<this.children.length;parameters++)object.children.push(this.children[parameters].toJSON(meta).object);
if(isRootObject){isRootObject=extractFromCache(meta.geometries);parameters=extractFromCache(meta.materials);_i13=extractFromCache(meta.textures);l=extractFromCache(meta.images);var _shapes=extractFromCache(meta.shapes);0<isRootObject.length&&(output.geometries=isRootObject);0<parameters.length&&(output.materials=parameters);0<_i13.length&&(output.textures=_i13);0<l.length&&(output.images=l);0<_shapes.length&&(output.shapes=_shapes)}output.object=object;return output},clone:function(recursive){return(new this.constructor).copy(this,
recursive)},copy:function(source,recursive){void 0===recursive&&(recursive=!0);this.name=source.name;this.up.copy(source.up);this.position.copy(source.position);this.quaternion.copy(source.quaternion);this.scale.copy(source.scale);this.matrix.copy(source.matrix);this.matrixWorld.copy(source.matrixWorld);this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate;this.layers.mask=source.layers.mask;this.visible=source.visible;this.castShadow=source.castShadow;
this.receiveShadow=source.receiveShadow;this.frustumCulled=source.frustumCulled;this.renderOrder=source.renderOrder;this.userData=JSON.parse(JSON.stringify(source.userData));if(!0===recursive)for(recursive=0;recursive<source.children.length;recursive++)this.add(source.children[recursive].clone());return this}});Scene.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Scene,isScene:!0,copy:function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);null!==source.background&&
(this.background=source.background.clone());null!==source.environment&&(this.environment=source.environment.clone());null!==source.fog&&(this.fog=source.fog.clone());null!==source.overrideMaterial&&(this.overrideMaterial=source.overrideMaterial.clone());this.autoUpdate=source.autoUpdate;this.matrixAutoUpdate=source.matrixAutoUpdate;return this},toJSON:function(meta){var data=Object3D.prototype.toJSON.call(this,meta);null!==this.background&&(data.object.background=this.background.toJSON(meta));null!==
this.environment&&(data.object.environment=this.environment.toJSON(meta));null!==this.fog&&(data.object.fog=this.fog.toJSON());return data},dispose:function(){this.dispatchEvent({type:"dispose"})}});var _points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$1=new Vector3,_box=new Box3,_v0=new Vector3,_v1$2=new Vector3,_v2=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,
_testAxis=new Vector3;Object.assign(Box3.prototype,{isBox3:!0,set:function(min,max){this.min.copy(min);this.max.copy(max);return this},setFromArray:function(array){for(var minX=Infinity,minY=Infinity,minZ=Infinity,maxX=-Infinity,maxY=-Infinity,maxZ=-Infinity,_i17=0,l=array.length;_i17<l;_i17+=3){var x=array[_i17],y=array[_i17+1],z=array[_i17+2];x<minX&&(minX=x);y<minY&&(minY=y);z<minZ&&(minZ=z);x>maxX&&(maxX=x);y>maxY&&(maxY=y);z>maxZ&&(maxZ=z)}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,
maxZ);return this},setFromBufferAttribute:function(attribute){for(var minX=Infinity,minY=Infinity,minZ=Infinity,maxX=-Infinity,maxY=-Infinity,maxZ=-Infinity,_i18=0,l=attribute.count;_i18<l;_i18++){var x=attribute.getX(_i18),y=attribute.getY(_i18),z=attribute.getZ(_i18);x<minX&&(minX=x);y<minY&&(minY=y);z<minZ&&(minZ=z);x>maxX&&(maxX=x);y>maxY&&(maxY=y);z>maxZ&&(maxZ=z)}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this},setFromPoints:function(points){this.makeEmpty();for(var _i19=
0,il=points.length;_i19<il;_i19++)this.expandByPoint(points[_i19]);return this},setFromCenterAndSize:function(center,size){size=_vector$1.copy(size).multiplyScalar(.5);this.min.copy(center).sub(size);this.max.copy(center).add(size);return this},setFromObject:function(object){this.makeEmpty();return this.expandByObject(object)},clone:function(){return(new this.constructor).copy(this)},copy:function(box){this.min.copy(box.min);this.max.copy(box.max);return this},makeEmpty:function(){this.min.x=this.min.y=
this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(target){void 0===target&&(console.warn("THREE.Box3: .getCenter() target is now required"),target=new Vector3);return this.isEmpty()?target.set(0,0,0):target.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(target){void 0===target&&(console.warn("THREE.Box3: .getSize() target is now required"),
target=new Vector3);return this.isEmpty()?target.set(0,0,0):target.subVectors(this.max,this.min)},expandByPoint:function(point){this.min.min(point);this.max.max(point);return this},expandByVector:function(vector){this.min.sub(vector);this.max.add(vector);return this},expandByScalar:function(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this},expandByObject:function(object){object.updateWorldMatrix(!1,!1);var geometry=object.geometry;void 0!==geometry&&(null===geometry.boundingBox&&
geometry.computeBoundingBox(),_box.copy(geometry.boundingBox),_box.applyMatrix4(object.matrixWorld),this.union(_box));object=object.children;geometry=0;for(var l=object.length;geometry<l;geometry++)this.expandByObject(object[geometry]);return this},containsPoint:function(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z?!1:!0},containsBox:function(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=
box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z},getParameter:function(point,target){void 0===target&&(console.warn("THREE.Box3: .getParameter() target is now required"),target=new Vector3);return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(box){return box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<
this.min.z||box.min.z>this.max.z?!1:!0},intersectsSphere:function(sphere){this.clampPoint(sphere.center,_vector$1);return _vector$1.distanceToSquared(sphere.center)<=sphere.radius*sphere.radius},intersectsPlane:function(plane){if(0<plane.normal.x){var min=plane.normal.x*this.min.x;var max=plane.normal.x*this.max.x}else min=plane.normal.x*this.max.x,max=plane.normal.x*this.min.x;0<plane.normal.y?(min+=plane.normal.y*this.min.y,max+=plane.normal.y*this.max.y):(min+=plane.normal.y*this.max.y,max+=plane.normal.y*
this.min.y);0<plane.normal.z?(min+=plane.normal.z*this.min.z,max+=plane.normal.z*this.max.z):(min+=plane.normal.z*this.max.z,max+=plane.normal.z*this.min.z);return min<=-plane.constant&&max>=-plane.constant},intersectsTriangle:function(triangle){if(this.isEmpty())return!1;this.getCenter(_center);_extents.subVectors(this.max,_center);_v0.subVectors(triangle.a,_center);_v1$2.subVectors(triangle.b,_center);_v2.subVectors(triangle.c,_center);_f0.subVectors(_v1$2,_v0);_f1.subVectors(_v2,_v1$2);_f2.subVectors(_v0,
_v2);triangle=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];if(!satForAxes(triangle,_v0,_v1$2,_v2,_extents))return!1;triangle=[1,0,0,0,1,0,0,0,1];if(!satForAxes(triangle,_v0,_v1$2,_v2,_extents))return!1;_triangleNormal.crossVectors(_f0,_f1);triangle=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z];return satForAxes(triangle,_v0,_v1$2,_v2,_extents)},clampPoint:function(point,target){void 0===target&&(console.warn("THREE.Box3: .clampPoint() target is now required"),
target=new Vector3);return target.copy(point).clamp(this.min,this.max)},distanceToPoint:function(point){return _vector$1.copy(point).clamp(this.min,this.max).sub(point).length()},getBoundingSphere:function(target){void 0===target&&console.error("THREE.Box3: .getBoundingSphere() target is now required");this.getCenter(target.center);target.radius=.5*this.getSize(_vector$1).length();return target},intersect:function(box){this.min.max(box.min);this.max.min(box.max);this.isEmpty()&&this.makeEmpty();return this},
union:function(box){this.min.min(box.min);this.max.max(box.max);return this},applyMatrix4:function(matrix){if(this.isEmpty())return this;_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix);_points[5].set(this.max.x,
this.min.y,this.max.z).applyMatrix4(matrix);_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);this.setFromPoints(_points);return this},translate:function(offset){this.min.add(offset);this.max.add(offset);return this},equals:function(box){return box.min.equals(this.min)&&box.max.equals(this.max)}});var _box$1=new Box3;Object.assign(Sphere.prototype,{set:function(center,radius){this.center.copy(center);this.radius=
radius;return this},setFromPoints:function(points,optionalCenter){var center=this.center;void 0!==optionalCenter?center.copy(optionalCenter):_box$1.setFromPoints(points).getCenter(center);for(var _i22=optionalCenter=0,il=points.length;_i22<il;_i22++)optionalCenter=Math.max(optionalCenter,center.distanceToSquared(points[_i22]));this.radius=Math.sqrt(optionalCenter);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(sphere){this.center.copy(sphere.center);this.radius=
sphere.radius;return this},isEmpty:function(){return 0>this.radius},makeEmpty:function(){this.center.set(0,0,0);this.radius=-1;return this},containsPoint:function(point){return point.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(point){return point.distanceTo(this.center)-this.radius},intersectsSphere:function(sphere){var radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum},intersectsBox:function(box){return box.intersectsSphere(this)},
intersectsPlane:function(plane){return Math.abs(plane.distanceToPoint(this.center))<=this.radius},clampPoint:function(point,target){var deltaLengthSq=this.center.distanceToSquared(point);void 0===target&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),target=new Vector3);target.copy(point);deltaLengthSq>this.radius*this.radius&&(target.sub(this.center).normalize(),target.multiplyScalar(this.radius).add(this.center));return target},getBoundingBox:function(target){void 0===target&&
(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),target=new Box3);if(this.isEmpty())return target.makeEmpty(),target;target.set(this.center,this.center);target.expandByScalar(this.radius);return target},applyMatrix4:function(matrix){this.center.applyMatrix4(matrix);this.radius*=matrix.getMaxScaleOnAxis();return this},translate:function(offset){this.center.add(offset);return this},equals:function(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius}});
var _vector$2=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,_edge2=new Vector3,_normal=new Vector3;Object.assign(Ray.prototype,{set:function(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this},at:function(t,target){void 0===target&&(console.warn("THREE.Ray: .at() target is now required"),
target=new Vector3);return target.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(v){this.direction.copy(v).sub(this.origin).normalize();return this},recast:function(t){this.origin.copy(this.at(t,_vector$2));return this},closestPointToPoint:function(point,target){void 0===target&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),target=new Vector3);target.subVectors(point,this.origin);point=target.dot(this.direction);return 0>point?target.copy(this.origin):
target.copy(this.direction).multiplyScalar(point).add(this.origin)},distanceToPoint:function(point){return Math.sqrt(this.distanceSqToPoint(point))},distanceSqToPoint:function(point){var directionDistance=_vector$2.subVectors(point,this.origin).dot(this.direction);if(0>directionDistance)return this.origin.distanceToSquared(point);_vector$2.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);return _vector$2.distanceToSquared(point)},distanceSqToSegment:function(v0,v1,optionalPointOnRay,
optionalPointOnSegment){_segCenter.copy(v0).add(v1).multiplyScalar(.5);_segDir.copy(v1).sub(v0).normalize();_diff.copy(this.origin).sub(_segCenter);var segExtent=.5*v0.distanceTo(v1),a01=-this.direction.dot(_segDir),b0=_diff.dot(this.direction),b1=-_diff.dot(_segDir),c=_diff.lengthSq(),det=Math.abs(1-a01*a01);if(0<det){v0=a01*b1-b0;v1=a01*b0-b1;var extDet=segExtent*det;0<=v0?v1>=-extDet?v1<=extDet?(segExtent=1/det,v0*=segExtent,v1*=segExtent,a01=v0*(v0+a01*v1+2*b0)+v1*(a01*v0+v1+2*b1)+c):(v1=segExtent,
v0=Math.max(0,-(a01*v1+b0)),a01=-v0*v0+v1*(v1+2*b1)+c):(v1=-segExtent,v0=Math.max(0,-(a01*v1+b0)),a01=-v0*v0+v1*(v1+2*b1)+c):v1<=-extDet?(v0=Math.max(0,-(-a01*segExtent+b0)),v1=0<v0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent),a01=-v0*v0+v1*(v1+2*b1)+c):v1<=extDet?(v0=0,v1=Math.min(Math.max(-segExtent,-b1),segExtent),a01=v1*(v1+2*b1)+c):(v0=Math.max(0,-(a01*segExtent+b0)),v1=0<v0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent),a01=-v0*v0+v1*(v1+2*b1)+c)}else v1=0<a01?-segExtent:
segExtent,v0=Math.max(0,-(a01*v1+b0)),a01=-v0*v0+v1*(v1+2*b1)+c;optionalPointOnRay&&optionalPointOnRay.copy(this.direction).multiplyScalar(v0).add(this.origin);optionalPointOnSegment&&optionalPointOnSegment.copy(_segDir).multiplyScalar(v1).add(_segCenter);return a01},intersectSphere:function(sphere,target){_vector$2.subVectors(sphere.center,this.origin);var tca=_vector$2.dot(this.direction),d2=_vector$2.dot(_vector$2)-tca*tca;sphere=sphere.radius*sphere.radius;if(d2>sphere)return null;sphere=Math.sqrt(sphere-
d2);d2=tca-sphere;tca+=sphere;return 0>d2&&0>tca?null:0>d2?this.at(tca,target):this.at(d2,target)},intersectsSphere:function(sphere){return this.distanceSqToPoint(sphere.center)<=sphere.radius*sphere.radius},distanceToPlane:function(plane){var denominator=plane.normal.dot(this.direction);if(0===denominator)return 0===plane.distanceToPoint(this.origin)?0:null;plane=-(this.origin.dot(plane.normal)+plane.constant)/denominator;return 0<=plane?plane:null},intersectPlane:function(plane,target){plane=this.distanceToPlane(plane);
return null===plane?null:this.at(plane,target)},intersectsPlane:function(plane){var distToPoint=plane.distanceToPoint(this.origin);return 0===distToPoint||0>plane.normal.dot(this.direction)*distToPoint?!0:!1},intersectBox:function(box,target){var tmax=1/this.direction.x;var tymax=1/this.direction.y;var invdirz=1/this.direction.z,origin=this.origin;if(0<=tmax){var tmin=(box.min.x-origin.x)*tmax;tmax*=box.max.x-origin.x}else tmin=(box.max.x-origin.x)*tmax,tmax*=box.min.x-origin.x;if(0<=tymax){var tymin=
(box.min.y-origin.y)*tymax;tymax*=box.max.y-origin.y}else tymin=(box.max.y-origin.y)*tymax,tymax*=box.min.y-origin.y;if(tmin>tymax||tymin>tmax)return null;if(tymin>tmin||tmin!==tmin)tmin=tymin;if(tymax<tmax||tmax!==tmax)tmax=tymax;0<=invdirz?(tymin=(box.min.z-origin.z)*invdirz,box=(box.max.z-origin.z)*invdirz):(tymin=(box.max.z-origin.z)*invdirz,box=(box.min.z-origin.z)*invdirz);if(tmin>box||tymin>tmax)return null;if(tymin>tmin||tmin!==tmin)tmin=tymin;if(box<tmax||tmax!==tmax)tmax=box;return 0>tmax?
null:this.at(0<=tmin?tmin:tmax,target)},intersectsBox:function(box){return null!==this.intersectBox(box,_vector$2)},intersectTriangle:function(a,b,c,backfaceCulling,target){_edge1.subVectors(b,a);_edge2.subVectors(c,a);_normal.crossVectors(_edge1,_edge2);b=this.direction.dot(_normal);if(0<b){if(backfaceCulling)return null;backfaceCulling=1}else if(0>b)backfaceCulling=-1,b=-b;else return null;_diff.subVectors(this.origin,a);a=backfaceCulling*this.direction.dot(_edge2.crossVectors(_diff,_edge2));if(0>
a)return null;c=backfaceCulling*this.direction.dot(_edge1.cross(_diff));if(0>c||a+c>b)return null;a=-backfaceCulling*_diff.dot(_normal);return 0>a?null:this.at(a/b,target)},applyMatrix4:function(matrix4){this.origin.applyMatrix4(matrix4);this.direction.transformDirection(matrix4);return this},equals:function(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction)}});var _vector1=new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3;Object.assign(Plane.prototype,{isPlane:!0,
set:function(normal,constant){this.normal.copy(normal);this.constant=constant;return this},setComponents:function(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this},setFromNormalAndCoplanarPoint:function(normal,point){this.normal.copy(normal);this.constant=-point.dot(this.normal);return this},setFromCoplanarPoints:function(a,b,c){b=_vector1.subVectors(c,b).cross(_vector2.subVectors(a,b)).normalize();this.setFromNormalAndCoplanarPoint(b,a);return this},clone:function(){return(new this.constructor).copy(this)},
copy:function(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this},normalize:function(){var inverseNormalLength=1/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(point){return this.normal.dot(point)+this.constant},distanceToSphere:function(sphere){return this.distanceToPoint(sphere.center)-sphere.radius},projectPoint:function(point,
target){void 0===target&&(console.warn("THREE.Plane: .projectPoint() target is now required"),target=new Vector3);return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point)},intersectLine:function(line,target){void 0===target&&(console.warn("THREE.Plane: .intersectLine() target is now required"),target=new Vector3);var direction=line.delta(_vector1),denominator=this.normal.dot(direction);if(0===denominator){if(0===this.distanceToPoint(line.start))return target.copy(line.start)}else if(denominator=
-(line.start.dot(this.normal)+this.constant)/denominator,!(0>denominator||1<denominator))return target.copy(direction).multiplyScalar(denominator).add(line.start)},intersectsLine:function(line){var startSign=this.distanceToPoint(line.start);line=this.distanceToPoint(line.end);return 0>startSign&&0<line||0>line&&0<startSign},intersectsBox:function(box){return box.intersectsPlane(this)},intersectsSphere:function(sphere){return sphere.intersectsPlane(this)},coplanarPoint:function(target){void 0===target&&
(console.warn("THREE.Plane: .coplanarPoint() target is now required"),target=new Vector3);return target.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(matrix,optionalNormalMatrix){optionalNormalMatrix=optionalNormalMatrix||_normalMatrix.getNormalMatrix(matrix);matrix=this.coplanarPoint(_vector1).applyMatrix4(matrix);optionalNormalMatrix=this.normal.applyMatrix3(optionalNormalMatrix).normalize();this.constant=-matrix.dot(optionalNormalMatrix);return this},translate:function(offset){this.constant-=
offset.dot(this.normal);return this},equals:function(plane){return plane.normal.equals(this.normal)&&plane.constant===this.constant}});var _v0$1=new Vector3,_v1$3=new Vector3,_v2$1=new Vector3,_v3=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3;Object.assign(Triangle,{getNormal:function(a,b,c,target){void 0===target&&(console.warn("THREE.Triangle: .getNormal() target is now required"),target=new Vector3);target.subVectors(c,b);_v0$1.subVectors(a,
b);target.cross(_v0$1);a=target.lengthSq();return 0<a?target.multiplyScalar(1/Math.sqrt(a)):target.set(0,0,0)},getBarycoord:function(point,a,b,c,target){_v0$1.subVectors(c,a);_v1$3.subVectors(b,a);_v2$1.subVectors(point,a);point=_v0$1.dot(_v0$1);a=_v0$1.dot(_v1$3);b=_v0$1.dot(_v2$1);var dot11=_v1$3.dot(_v1$3);c=_v1$3.dot(_v2$1);var denom=point*dot11-a*a;void 0===target&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),target=new Vector3);if(0===denom)return target.set(-2,-1,
-1);denom=1/denom;dot11=(dot11*b-a*c)*denom;point=(point*c-a*b)*denom;return target.set(1-dot11-point,point,dot11)},containsPoint:function(point,a,b,c){Triangle.getBarycoord(point,a,b,c,_v3);return 0<=_v3.x&&0<=_v3.y&&1>=_v3.x+_v3.y},getUV:function(point,p1,p2,p3,uv1,uv2,uv3,target){this.getBarycoord(point,p1,p2,p3,_v3);target.set(0,0);target.addScaledVector(uv1,_v3.x);target.addScaledVector(uv2,_v3.y);target.addScaledVector(uv3,_v3.z);return target},isFrontFacing:function(a,b,c,direction){_v0$1.subVectors(c,
b);_v1$3.subVectors(a,b);return 0>_v0$1.cross(_v1$3).dot(direction)?!0:!1}});Object.assign(Triangle.prototype,{set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this},getArea:function(){_v0$1.subVectors(this.c,
this.b);_v1$3.subVectors(this.a,this.b);return.5*_v0$1.cross(_v1$3).length()},getMidpoint:function(target){void 0===target&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),target=new Vector3);return target.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(target){return Triangle.getNormal(this.a,this.b,this.c,target)},getPlane:function(target){void 0===target&&(console.warn("THREE.Triangle: .getPlane() target is now required"),target=new Plane);return target.setFromCoplanarPoints(this.a,
this.b,this.c)},getBarycoord:function(point,target){return Triangle.getBarycoord(point,this.a,this.b,this.c,target)},getUV:function(point,uv1,uv2,uv3,target){return Triangle.getUV(point,this.a,this.b,this.c,uv1,uv2,uv3,target)},containsPoint:function(point){return Triangle.containsPoint(point,this.a,this.b,this.c)},isFrontFacing:function(direction){return Triangle.isFrontFacing(this.a,this.b,this.c,direction)},intersectsBox:function(box){return box.intersectsTriangle(this)},closestPointToPoint:function(p,
target){void 0===target&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),target=new Vector3);var a=this.a,b=this.b,c=this.c;_vab.subVectors(b,a);_vac.subVectors(c,a);_vap.subVectors(p,a);var d1=_vab.dot(_vap),d2=_vac.dot(_vap);if(0>=d1&&0>=d2)return target.copy(a);_vbp.subVectors(p,b);var d3=_vab.dot(_vbp),d4=_vac.dot(_vbp);if(0<=d3&&d4<=d3)return target.copy(b);var w=d1*d4-d3*d2;if(0>=w&&0<=d1&&0>=d3)return b=d1/(d1-d3),target.copy(a).addScaledVector(_vab,b);_vcp.subVectors(p,
c);p=_vab.dot(_vcp);var d6=_vac.dot(_vcp);if(0<=d6&&p<=d6)return target.copy(c);d1=p*d2-d1*d6;if(0>=d1&&0<=d2&&0>=d6)return w=d2/(d2-d6),target.copy(a).addScaledVector(_vac,w);d2=d3*d6-p*d4;if(0>=d2&&0<=d4-d3&&0<=p-d6)return _vbc.subVectors(c,b),w=(d4-d3)/(d4-d3+(p-d6)),target.copy(b).addScaledVector(_vbc,w);c=1/(d2+d1+w);b=d1*c;w*=c;return target.copy(a).addScaledVector(_vab,b).addScaledVector(_vac,w)},equals:function(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c)}});
var _colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,
teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};Object.assign(Color.prototype,{isColor:!0,r:1,g:1,b:1,set:function(value){value&&value.isColor?this.copy(value):"number"===typeof value?this.setHex(value):"string"===typeof value&&this.setStyle(value);return this},setScalar:function(scalar){this.b=this.g=this.r=scalar;return this},setHex:function(hex){hex=
Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this},setRGB:function(r,g,b){this.r=r;this.g=g;this.b=b;return this},setHSL:function(h,s,l){h=MathUtils.euclideanModulo(h,1);s=MathUtils.clamp(s,0,1);l=MathUtils.clamp(l,0,1);0===s?this.r=this.g=this.b=l:(s=.5>=l?l*(1+s):l+s-l*s,l=2*l-s,this.r=hue2rgb(l,s,h+1/3),this.g=hue2rgb(l,s,h),this.b=hue2rgb(l,s,h-1/3));return this},setStyle:function(style){function handleAlpha(string){void 0!==string&&1>parseFloat(string)&&
console.warn("THREE.Color: Alpha component of "+style+" will be ignored.")}var m;if(m=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(style)){var components=m[2];switch(m[1]){case "rgb":case "rgba":if(m=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(components))return this.r=Math.min(255,parseInt(m[1],10))/255,this.g=Math.min(255,parseInt(m[2],10))/255,this.b=Math.min(255,parseInt(m[3],10))/255,handleAlpha(m[5]),this;if(m=/^(\d+)%\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(components))return this.r=
Math.min(100,parseInt(m[1],10))/100,this.g=Math.min(100,parseInt(m[2],10))/100,this.b=Math.min(100,parseInt(m[3],10))/100,handleAlpha(m[5]),this;break;case "hsl":case "hsla":if(m=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(components)){components=parseFloat(m[1])/360;var s=parseInt(m[2],10)/100,l=parseInt(m[3],10)/100;handleAlpha(m[5]);return this.setHSL(components,s,l)}}}else if(m=/^#([A-Fa-f0-9]+)$/.exec(style)){m=m[1];components=m.length;if(3===components)return this.r=
parseInt(m.charAt(0)+m.charAt(0),16)/255,this.g=parseInt(m.charAt(1)+m.charAt(1),16)/255,this.b=parseInt(m.charAt(2)+m.charAt(2),16)/255,this;if(6===components)return this.r=parseInt(m.charAt(0)+m.charAt(1),16)/255,this.g=parseInt(m.charAt(2)+m.charAt(3),16)/255,this.b=parseInt(m.charAt(4)+m.charAt(5),16)/255,this}return style&&0<style.length?this.setColorName(style):this},setColorName:function(style){var hex=_colorKeywords[style];void 0!==hex?this.setHex(hex):console.warn("THREE.Color: Unknown color "+
style);return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(color){this.r=color.r;this.g=color.g;this.b=color.b;return this},copyGammaToLinear:function(color,gammaFactor){void 0===gammaFactor&&(gammaFactor=2);this.r=Math.pow(color.r,gammaFactor);this.g=Math.pow(color.g,gammaFactor);this.b=Math.pow(color.b,gammaFactor);return this},copyLinearToGamma:function(color,gammaFactor){void 0===gammaFactor&&(gammaFactor=2);gammaFactor=0<gammaFactor?1/gammaFactor:1;
this.r=Math.pow(color.r,gammaFactor);this.g=Math.pow(color.g,gammaFactor);this.b=Math.pow(color.b,gammaFactor);return this},convertGammaToLinear:function(gammaFactor){this.copyGammaToLinear(this,gammaFactor);return this},convertLinearToGamma:function(gammaFactor){this.copyLinearToGamma(this,gammaFactor);return this},copySRGBToLinear:function(color){this.r=SRGBToLinear(color.r);this.g=SRGBToLinear(color.g);this.b=SRGBToLinear(color.b);return this},copyLinearToSRGB:function(color){this.r=LinearToSRGB(color.r);
this.g=LinearToSRGB(color.g);this.b=LinearToSRGB(color.b);return this},convertSRGBToLinear:function(){this.copySRGBToLinear(this);return this},convertLinearToSRGB:function(){this.copyLinearToSRGB(this);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(target){void 0===target&&(console.warn("THREE.Color: .getHSL() target is now required"),target={h:0,s:0,l:0});var r=this.r,
g=this.g,b=this.b,max=Math.max(r,g,b),min=Math.min(r,g,b),hue,lightness=(min+max)/2;if(min===max)min=hue=0;else{var delta=max-min;min=.5>=lightness?delta/(max+min):delta/(2-max-min);switch(max){case r:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4}hue/=6}target.h=hue;target.s=min;target.l=lightness;return target},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(h,s,l){this.getHSL(_hslA);_hslA.h+=
h;_hslA.s+=s;_hslA.l+=l;this.setHSL(_hslA.h,_hslA.s,_hslA.l);return this},add:function(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this},addColors:function(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this},addScalar:function(s){this.r+=s;this.g+=s;this.b+=s;return this},sub:function(color){this.r=Math.max(0,this.r-color.r);this.g=Math.max(0,this.g-color.g);this.b=Math.max(0,this.b-color.b);return this},multiply:function(color){this.r*=
color.r;this.g*=color.g;this.b*=color.b;return this},multiplyScalar:function(s){this.r*=s;this.g*=s;this.b*=s;return this},lerp:function(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this},lerpHSL:function(color,alpha){this.getHSL(_hslA);color.getHSL(_hslB);color=MathUtils.lerp(_hslA.h,_hslB.h,alpha);var s=MathUtils.lerp(_hslA.s,_hslB.s,alpha);alpha=MathUtils.lerp(_hslA.l,_hslB.l,alpha);this.setHSL(color,s,alpha);return this},equals:function(c){return c.r===
this.r&&c.g===this.g&&c.b===this.b},fromArray:function(array,offset){void 0===offset&&(offset=0);this.r=array[offset];this.g=array[offset+1];this.b=array[offset+2];return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);array[offset]=this.r;array[offset+1]=this.g;array[offset+2]=this.b;return array},fromBufferAttribute:function(attribute,index){this.r=attribute.getX(index);this.g=attribute.getY(index);this.b=attribute.getZ(index);!0===attribute.normalized&&
(this.r/=255,this.g/=255,this.b/=255);return this},toJSON:function(){return this.getHex()}});Color.NAMES=_colorKeywords;Object.assign(Face3.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(source){this.a=source.a;this.b=source.b;this.c=source.c;this.normal.copy(source.normal);this.color.copy(source.color);this.materialIndex=source.materialIndex;for(var _i23=0,il=source.vertexNormals.length;_i23<il;_i23++)this.vertexNormals[_i23]=source.vertexNormals[_i23].clone();
_i23=0;for(il=source.vertexColors.length;_i23<il;_i23++)this.vertexColors[_i23]=source.vertexColors[_i23].clone();return this}});var materialId=0;Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(values){if(void 0!==values)for(var key in values){var newValue=values[key];if(void 0===newValue)console.warn("THREE.Material: '"+
key+"' parameter is undefined.");else if("shading"===key)console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===newValue?!0:!1;else{var currentValue=this[key];void 0===currentValue?console.warn("THREE."+this.type+": '"+key+"' is not a property of this material."):currentValue&&currentValue.isColor?currentValue.set(newValue):currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3?currentValue.copy(newValue):this[key]=newValue}}},
toJSON:function(meta){function extractFromCache(cache){var values=[],key;for(key in cache){var _data=cache[key];delete _data.metadata;values.push(_data)}return values}var isRoot=void 0===meta||"string"===typeof meta;isRoot&&(meta={textures:{},images:{}});var data={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};data.uuid=this.uuid;data.type=this.type;""!==this.name&&(data.name=this.name);this.color&&this.color.isColor&&(data.color=this.color.getHex());void 0!==this.roughness&&
(data.roughness=this.roughness);void 0!==this.metalness&&(data.metalness=this.metalness);this.sheen&&this.sheen.isColor&&(data.sheen=this.sheen.getHex());this.emissive&&this.emissive.isColor&&(data.emissive=this.emissive.getHex());this.emissiveIntensity&&1!==this.emissiveIntensity&&(data.emissiveIntensity=this.emissiveIntensity);this.specular&&this.specular.isColor&&(data.specular=this.specular.getHex());void 0!==this.shininess&&(data.shininess=this.shininess);void 0!==this.clearcoat&&(data.clearcoat=
this.clearcoat);void 0!==this.clearcoatRoughness&&(data.clearcoatRoughness=this.clearcoatRoughness);this.clearcoatMap&&this.clearcoatMap.isTexture&&(data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid);this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid);this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid,data.clearcoatNormalScale=this.clearcoatNormalScale.toArray());
this.map&&this.map.isTexture&&(data.map=this.map.toJSON(meta).uuid);this.matcap&&this.matcap.isTexture&&(data.matcap=this.matcap.toJSON(meta).uuid);this.alphaMap&&this.alphaMap.isTexture&&(data.alphaMap=this.alphaMap.toJSON(meta).uuid);this.lightMap&&this.lightMap.isTexture&&(data.lightMap=this.lightMap.toJSON(meta).uuid);this.aoMap&&this.aoMap.isTexture&&(data.aoMap=this.aoMap.toJSON(meta).uuid,data.aoMapIntensity=this.aoMapIntensity);this.bumpMap&&this.bumpMap.isTexture&&(data.bumpMap=this.bumpMap.toJSON(meta).uuid,
data.bumpScale=this.bumpScale);this.normalMap&&this.normalMap.isTexture&&(data.normalMap=this.normalMap.toJSON(meta).uuid,data.normalMapType=this.normalMapType,data.normalScale=this.normalScale.toArray());this.displacementMap&&this.displacementMap.isTexture&&(data.displacementMap=this.displacementMap.toJSON(meta).uuid,data.displacementScale=this.displacementScale,data.displacementBias=this.displacementBias);this.roughnessMap&&this.roughnessMap.isTexture&&(data.roughnessMap=this.roughnessMap.toJSON(meta).uuid);
this.metalnessMap&&this.metalnessMap.isTexture&&(data.metalnessMap=this.metalnessMap.toJSON(meta).uuid);this.emissiveMap&&this.emissiveMap.isTexture&&(data.emissiveMap=this.emissiveMap.toJSON(meta).uuid);this.specularMap&&this.specularMap.isTexture&&(data.specularMap=this.specularMap.toJSON(meta).uuid);this.envMap&&this.envMap.isTexture&&(data.envMap=this.envMap.toJSON(meta).uuid,data.reflectivity=this.reflectivity,data.refractionRatio=this.refractionRatio,void 0!==this.combine&&(data.combine=this.combine),
void 0!==this.envMapIntensity&&(data.envMapIntensity=this.envMapIntensity));this.gradientMap&&this.gradientMap.isTexture&&(data.gradientMap=this.gradientMap.toJSON(meta).uuid);void 0!==this.size&&(data.size=this.size);void 0!==this.sizeAttenuation&&(data.sizeAttenuation=this.sizeAttenuation);this.blending!==NormalBlending&&(data.blending=this.blending);!0===this.flatShading&&(data.flatShading=this.flatShading);this.side!==FrontSide&&(data.side=this.side);this.vertexColors&&(data.vertexColors=!0);
1>this.opacity&&(data.opacity=this.opacity);!0===this.transparent&&(data.transparent=this.transparent);data.depthFunc=this.depthFunc;data.depthTest=this.depthTest;data.depthWrite=this.depthWrite;data.stencilWrite=this.stencilWrite;data.stencilWriteMask=this.stencilWriteMask;data.stencilFunc=this.stencilFunc;data.stencilRef=this.stencilRef;data.stencilFuncMask=this.stencilFuncMask;data.stencilFail=this.stencilFail;data.stencilZFail=this.stencilZFail;data.stencilZPass=this.stencilZPass;this.rotation&&
0!==this.rotation&&(data.rotation=this.rotation);!0===this.polygonOffset&&(data.polygonOffset=!0);0!==this.polygonOffsetFactor&&(data.polygonOffsetFactor=this.polygonOffsetFactor);0!==this.polygonOffsetUnits&&(data.polygonOffsetUnits=this.polygonOffsetUnits);this.linewidth&&1!==this.linewidth&&(data.linewidth=this.linewidth);void 0!==this.dashSize&&(data.dashSize=this.dashSize);void 0!==this.gapSize&&(data.gapSize=this.gapSize);void 0!==this.scale&&(data.scale=this.scale);!0===this.dithering&&(data.dithering=
!0);0<this.alphaTest&&(data.alphaTest=this.alphaTest);!0===this.premultipliedAlpha&&(data.premultipliedAlpha=this.premultipliedAlpha);!0===this.wireframe&&(data.wireframe=this.wireframe);1<this.wireframeLinewidth&&(data.wireframeLinewidth=this.wireframeLinewidth);"round"!==this.wireframeLinecap&&(data.wireframeLinecap=this.wireframeLinecap);"round"!==this.wireframeLinejoin&&(data.wireframeLinejoin=this.wireframeLinejoin);!0===this.morphTargets&&(data.morphTargets=!0);!0===this.morphNormals&&(data.morphNormals=
!0);!0===this.skinning&&(data.skinning=!0);!1===this.visible&&(data.visible=!1);!1===this.toneMapped&&(data.toneMapped=!1);"{}"!==JSON.stringify(this.userData)&&(data.userData=this.userData);isRoot&&(isRoot=extractFromCache(meta.textures),meta=extractFromCache(meta.images),0<isRoot.length&&(data.textures=isRoot),0<meta.length&&(data.images=meta));return data},clone:function(){return(new this.constructor).copy(this)},copy:function(source){this.name=source.name;this.fog=source.fog;this.blending=source.blending;
this.side=source.side;this.flatShading=source.flatShading;this.vertexColors=source.vertexColors;this.opacity=source.opacity;this.transparent=source.transparent;this.blendSrc=source.blendSrc;this.blendDst=source.blendDst;this.blendEquation=source.blendEquation;this.blendSrcAlpha=source.blendSrcAlpha;this.blendDstAlpha=source.blendDstAlpha;this.blendEquationAlpha=source.blendEquationAlpha;this.depthFunc=source.depthFunc;this.depthTest=source.depthTest;this.depthWrite=source.depthWrite;this.stencilWriteMask=
source.stencilWriteMask;this.stencilFunc=source.stencilFunc;this.stencilRef=source.stencilRef;this.stencilFuncMask=source.stencilFuncMask;this.stencilFail=source.stencilFail;this.stencilZFail=source.stencilZFail;this.stencilZPass=source.stencilZPass;this.stencilWrite=source.stencilWrite;var srcPlanes=source.clippingPlanes,dstPlanes=null;if(null!==srcPlanes){var n=srcPlanes.length;dstPlanes=Array(n);for(var _i25=0;_i25!==n;++_i25)dstPlanes[_i25]=srcPlanes[_i25].clone()}this.clippingPlanes=dstPlanes;
this.clipIntersection=source.clipIntersection;this.clipShadows=source.clipShadows;this.shadowSide=source.shadowSide;this.colorWrite=source.colorWrite;this.precision=source.precision;this.polygonOffset=source.polygonOffset;this.polygonOffsetFactor=source.polygonOffsetFactor;this.polygonOffsetUnits=source.polygonOffsetUnits;this.dithering=source.dithering;this.alphaTest=source.alphaTest;this.premultipliedAlpha=source.premultipliedAlpha;this.visible=source.visible;this.toneMapped=source.toneMapped;this.userData=
JSON.parse(JSON.stringify(source.userData));return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(Material.prototype,"needsUpdate",{set:function(value){!0===value&&this.version++}});MeshBasicMaterial.prototype=Object.create(Material.prototype);MeshBasicMaterial.prototype.constructor=MeshBasicMaterial;MeshBasicMaterial.prototype.isMeshBasicMaterial=!0;MeshBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);
this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=
source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;return this};var _vector$3=new Vector3,_vector2$1=new Vector2;Object.defineProperty(BufferAttribute.prototype,"needsUpdate",{set:function(value){!0===value&&this.version++}});Object.assign(BufferAttribute.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(value){this.usage=value;return this},copy:function(source){this.name=source.name;this.array=new source.array.constructor(source.array);
this.itemSize=source.itemSize;this.count=source.count;this.normalized=source.normalized;this.usage=source.usage;return this},copyAt:function(index1,attribute,index2){index1*=this.itemSize;index2*=attribute.itemSize;for(var _i26=0,l=this.itemSize;_i26<l;_i26++)this.array[index1+_i26]=attribute.array[index2+_i26];return this},copyArray:function(array){this.array.set(array);return this},copyColorsArray:function(colors){for(var array=this.array,offset=0,_i27=0,l=colors.length;_i27<l;_i27++){var color=
colors[_i27];void 0===color&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",_i27),color=new Color);array[offset++]=color.r;array[offset++]=color.g;array[offset++]=color.b}return this},copyVector2sArray:function(vectors){for(var array=this.array,offset=0,_i28=0,l=vectors.length;_i28<l;_i28++){var vector=vectors[_i28];void 0===vector&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",_i28),vector=new Vector2);array[offset++]=vector.x;array[offset++]=
vector.y}return this},copyVector3sArray:function(vectors){for(var array=this.array,offset=0,_i29=0,l=vectors.length;_i29<l;_i29++){var vector=vectors[_i29];void 0===vector&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",_i29),vector=new Vector3);array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z}return this},copyVector4sArray:function(vectors){for(var array=this.array,offset=0,_i30=0,l=vectors.length;_i30<l;_i30++){var vector=vectors[_i30];void 0===
vector&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",_i30),vector=new Vector4);array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;array[offset++]=vector.w}return this},applyMatrix3:function(m){if(2===this.itemSize)for(var _i31=0,l=this.count;_i31<l;_i31++)_vector2$1.fromBufferAttribute(this,_i31),_vector2$1.applyMatrix3(m),this.setXY(_i31,_vector2$1.x,_vector2$1.y);else if(3===this.itemSize)for(_i31=0,l=this.count;_i31<l;_i31++)_vector$3.fromBufferAttribute(this,
_i31),_vector$3.applyMatrix3(m),this.setXYZ(_i31,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyMatrix4:function(m){for(var _i33=0,l=this.count;_i33<l;_i33++)_vector$3.x=this.getX(_i33),_vector$3.y=this.getY(_i33),_vector$3.z=this.getZ(_i33),_vector$3.applyMatrix4(m),this.setXYZ(_i33,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyNormalMatrix:function(m){for(var _i34=0,l=this.count;_i34<l;_i34++)_vector$3.x=this.getX(_i34),_vector$3.y=this.getY(_i34),_vector$3.z=this.getZ(_i34),_vector$3.applyNormalMatrix(m),
this.setXYZ(_i34,_vector$3.x,_vector$3.y,_vector$3.z);return this},transformDirection:function(m){for(var _i35=0,l=this.count;_i35<l;_i35++)_vector$3.x=this.getX(_i35),_vector$3.y=this.getY(_i35),_vector$3.z=this.getZ(_i35),_vector$3.transformDirection(m),this.setXYZ(_i35,_vector$3.x,_vector$3.y,_vector$3.z);return this},set:function(value,offset){void 0===offset&&(offset=0);this.array.set(value,offset);return this},getX:function(index){return this.array[index*this.itemSize]},setX:function(index,
x){this.array[index*this.itemSize]=x;return this},getY:function(index){return this.array[index*this.itemSize+1]},setY:function(index,y){this.array[index*this.itemSize+1]=y;return this},getZ:function(index){return this.array[index*this.itemSize+2]},setZ:function(index,z){this.array[index*this.itemSize+2]=z;return this},getW:function(index){return this.array[index*this.itemSize+3]},setW:function(index,w){this.array[index*this.itemSize+3]=w;return this},setXY:function(index,x,y){index*=this.itemSize;
this.array[index+0]=x;this.array[index+1]=y;return this},setXYZ:function(index,x,y,z){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;return this},setXYZW:function(index,x,y,z,w){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;this.array[index+3]=w;return this},onUpload:function(callback){this.onUploadCallback=callback;return this},clone:function(){return(new this.constructor(this.array,this.itemSize)).copy(this)},toJSON:function(){return{itemSize:this.itemSize,
type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int8BufferAttribute.prototype.constructor=Int8BufferAttribute;Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute;Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8ClampedBufferAttribute.prototype.constructor=
Uint8ClampedBufferAttribute;Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int16BufferAttribute.prototype.constructor=Int16BufferAttribute;Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute;Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int32BufferAttribute.prototype.constructor=Int32BufferAttribute;Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);
Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute;Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float32BufferAttribute.prototype.constructor=Float32BufferAttribute;Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float64BufferAttribute.prototype.constructor=Float64BufferAttribute;Object.assign(DirectGeometry.prototype,{computeGroups:function(geometry){var groups=[],materialIndex=void 0,faces=geometry.faces;for(geometry=0;geometry<
faces.length;geometry++){var face=faces[geometry];if(face.materialIndex!==materialIndex){materialIndex=face.materialIndex;void 0!==group&&(group.count=3*geometry-group.start,groups.push(group));var group={start:3*geometry,materialIndex:materialIndex}}}void 0!==group&&(group.count=3*geometry-group.start,groups.push(group));this.groups=groups},fromGeometry:function(geometry){var faces=geometry.faces,vertices=geometry.vertices,faceVertexUvs=geometry.faceVertexUvs,hasFaceVertexUv=faceVertexUvs[0]&&0<
faceVertexUvs[0].length,hasFaceVertexUv2=faceVertexUvs[1]&&0<faceVertexUvs[1].length,morphTargets=geometry.morphTargets,morphTargetsLength=morphTargets.length;if(0<morphTargetsLength){var morphTargetsPosition=[];for(var _i36=0;_i36<morphTargetsLength;_i36++)morphTargetsPosition[_i36]={name:morphTargets[_i36].name,data:[]};this.morphTargets.position=morphTargetsPosition}_i36=geometry.morphNormals;var morphNormalsLength=_i36.length;if(0<morphNormalsLength){var morphTargetsNormal=[];for(var _i37=0;_i37<
morphNormalsLength;_i37++)morphTargetsNormal[_i37]={name:_i36[_i37].name,data:[]};this.morphTargets.normal=morphTargetsNormal}_i37=geometry.skinIndices;var skinWeights=geometry.skinWeights,hasSkinIndices=_i37.length===vertices.length,hasSkinWeights=skinWeights.length===vertices.length;0<vertices.length&&0===faces.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(var _i38=0;_i38<faces.length;_i38++){var face=faces[_i38];this.vertices.push(vertices[face.a],vertices[face.b],
vertices[face.c]);var vertexNormals=face.vertexNormals;3===vertexNormals.length?this.normals.push(vertexNormals[0],vertexNormals[1],vertexNormals[2]):(vertexNormals=face.normal,this.normals.push(vertexNormals,vertexNormals,vertexNormals));vertexNormals=face.vertexColors;3===vertexNormals.length?this.colors.push(vertexNormals[0],vertexNormals[1],vertexNormals[2]):(vertexNormals=face.color,this.colors.push(vertexNormals,vertexNormals,vertexNormals));!0===hasFaceVertexUv&&(vertexNormals=faceVertexUvs[0][_i38],
void 0!==vertexNormals?this.uvs.push(vertexNormals[0],vertexNormals[1],vertexNormals[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",_i38),this.uvs.push(new Vector2,new Vector2,new Vector2)));!0===hasFaceVertexUv2&&(vertexNormals=faceVertexUvs[1][_i38],void 0!==vertexNormals?this.uvs2.push(vertexNormals[0],vertexNormals[1],vertexNormals[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",_i38),this.uvs2.push(new Vector2,new Vector2,new Vector2)));
for(vertexNormals=0;vertexNormals<morphTargetsLength;vertexNormals++){var morphTarget=morphTargets[vertexNormals].vertices;morphTargetsPosition[vertexNormals].data.push(morphTarget[face.a],morphTarget[face.b],morphTarget[face.c])}for(vertexNormals=0;vertexNormals<morphNormalsLength;vertexNormals++)morphTarget=_i36[vertexNormals].vertexNormals[_i38],morphTargetsNormal[vertexNormals].data.push(morphTarget.a,morphTarget.b,morphTarget.c);hasSkinIndices&&this.skinIndices.push(_i37[face.a],_i37[face.b],
_i37[face.c]);hasSkinWeights&&this.skinWeights.push(skinWeights[face.a],skinWeights[face.b],skinWeights[face.c])}this.computeGroups(geometry);this.verticesNeedUpdate=geometry.verticesNeedUpdate;this.normalsNeedUpdate=geometry.normalsNeedUpdate;this.colorsNeedUpdate=geometry.colorsNeedUpdate;this.uvsNeedUpdate=geometry.uvsNeedUpdate;this.groupsNeedUpdate=geometry.groupsNeedUpdate;null!==geometry.boundingSphere&&(this.boundingSphere=geometry.boundingSphere.clone());null!==geometry.boundingBox&&(this.boundingBox=
geometry.boundingBox.clone());return this}});var _bufferGeometryId=1,_m1$2=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$2=new Box3,_boxMorphTargets=new Box3,_vector$4=new Vector3;BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(index){Array.isArray(index)?this.index=new (65535<arrayMax(index)?Uint32BufferAttribute:Uint16BufferAttribute)(index,1):this.index=
index},getAttribute:function(name){return this.attributes[name]},setAttribute:function(name,attribute){this.attributes[name]=attribute;return this},deleteAttribute:function(name){delete this.attributes[name];return this},addGroup:function(start,count,materialIndex){this.groups.push({start:start,count:count,materialIndex:void 0!==materialIndex?materialIndex:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(start,count){this.drawRange.start=start;this.drawRange.count=count},applyMatrix4:function(matrix){var position=
this.attributes.position;void 0!==position&&(position.applyMatrix4(matrix),position.needsUpdate=!0);position=this.attributes.normal;if(void 0!==position){var normalMatrix=(new Matrix3).getNormalMatrix(matrix);position.applyNormalMatrix(normalMatrix);position.needsUpdate=!0}position=this.attributes.tangent;void 0!==position&&(position.transformDirection(matrix),position.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();return this},
rotateX:function(angle){_m1$2.makeRotationX(angle);this.applyMatrix4(_m1$2);return this},rotateY:function(angle){_m1$2.makeRotationY(angle);this.applyMatrix4(_m1$2);return this},rotateZ:function(angle){_m1$2.makeRotationZ(angle);this.applyMatrix4(_m1$2);return this},translate:function(x,y,z){_m1$2.makeTranslation(x,y,z);this.applyMatrix4(_m1$2);return this},scale:function(x,y,z){_m1$2.makeScale(x,y,z);this.applyMatrix4(_m1$2);return this},lookAt:function(vector){_obj.lookAt(vector);_obj.updateMatrix();
this.applyMatrix4(_obj.matrix);return this},center:function(){this.computeBoundingBox();this.boundingBox.getCenter(_offset).negate();this.translate(_offset.x,_offset.y,_offset.z);return this},setFromObject:function(object){var geometry=object.geometry;if(object.isPoints||object.isLine){object=new Float32BufferAttribute(3*geometry.vertices.length,3);var colors=new Float32BufferAttribute(3*geometry.colors.length,3);this.setAttribute("position",object.copyVector3sArray(geometry.vertices));this.setAttribute("color",
colors.copyColorsArray(geometry.colors));geometry.lineDistances&&geometry.lineDistances.length===geometry.vertices.length&&(object=new Float32BufferAttribute(geometry.lineDistances.length,1),this.setAttribute("lineDistance",object.copyArray(geometry.lineDistances)));null!==geometry.boundingSphere&&(this.boundingSphere=geometry.boundingSphere.clone());null!==geometry.boundingBox&&(this.boundingBox=geometry.boundingBox.clone())}else object.isMesh&&geometry&&geometry.isGeometry&&this.fromGeometry(geometry);
return this},setFromPoints:function(points){for(var position=[],_i40=0,l=points.length;_i40<l;_i40++){var point=points[_i40];position.push(point.x,point.y,point.z||0)}this.setAttribute("position",new Float32BufferAttribute(position,3));return this},updateFromObject:function(object){var geometry=object.geometry;if(object.isMesh){var direct=geometry.__directGeometry;!0===geometry.elementsNeedUpdate&&(direct=void 0,geometry.elementsNeedUpdate=!1);if(void 0===direct)return this.fromGeometry(geometry);
direct.verticesNeedUpdate=geometry.verticesNeedUpdate;direct.normalsNeedUpdate=geometry.normalsNeedUpdate;direct.colorsNeedUpdate=geometry.colorsNeedUpdate;direct.uvsNeedUpdate=geometry.uvsNeedUpdate;direct.groupsNeedUpdate=geometry.groupsNeedUpdate;geometry.verticesNeedUpdate=!1;geometry.normalsNeedUpdate=!1;geometry.colorsNeedUpdate=!1;geometry.uvsNeedUpdate=!1;geometry.groupsNeedUpdate=!1;geometry=direct}!0===geometry.verticesNeedUpdate&&(direct=this.attributes.position,void 0!==direct&&(direct.copyVector3sArray(geometry.vertices),
direct.needsUpdate=!0),geometry.verticesNeedUpdate=!1);!0===geometry.normalsNeedUpdate&&(direct=this.attributes.normal,void 0!==direct&&(direct.copyVector3sArray(geometry.normals),direct.needsUpdate=!0),geometry.normalsNeedUpdate=!1);!0===geometry.colorsNeedUpdate&&(direct=this.attributes.color,void 0!==direct&&(direct.copyColorsArray(geometry.colors),direct.needsUpdate=!0),geometry.colorsNeedUpdate=!1);geometry.uvsNeedUpdate&&(direct=this.attributes.uv,void 0!==direct&&(direct.copyVector2sArray(geometry.uvs),
direct.needsUpdate=!0),geometry.uvsNeedUpdate=!1);geometry.lineDistancesNeedUpdate&&(direct=this.attributes.lineDistance,void 0!==direct&&(direct.copyArray(geometry.lineDistances),direct.needsUpdate=!0),geometry.lineDistancesNeedUpdate=!1);geometry.groupsNeedUpdate&&(geometry.computeGroups(object.geometry),this.groups=geometry.groups,geometry.groupsNeedUpdate=!1);return this},fromGeometry:function(geometry){geometry.__directGeometry=(new DirectGeometry).fromGeometry(geometry);return this.fromDirectGeometry(geometry.__directGeometry)},
fromDirectGeometry:function(geometry){var positions=new Float32Array(3*geometry.vertices.length);this.setAttribute("position",(new BufferAttribute(positions,3)).copyVector3sArray(geometry.vertices));0<geometry.normals.length&&(positions=new Float32Array(3*geometry.normals.length),this.setAttribute("normal",(new BufferAttribute(positions,3)).copyVector3sArray(geometry.normals)));0<geometry.colors.length&&(positions=new Float32Array(3*geometry.colors.length),this.setAttribute("color",(new BufferAttribute(positions,
3)).copyColorsArray(geometry.colors)));0<geometry.uvs.length&&(positions=new Float32Array(2*geometry.uvs.length),this.setAttribute("uv",(new BufferAttribute(positions,2)).copyVector2sArray(geometry.uvs)));0<geometry.uvs2.length&&(positions=new Float32Array(2*geometry.uvs2.length),this.setAttribute("uv2",(new BufferAttribute(positions,2)).copyVector2sArray(geometry.uvs2)));this.groups=geometry.groups;for(var name in geometry.morphTargets){positions=[];for(var morphTargets=geometry.morphTargets[name],
_i41=0,l=morphTargets.length;_i41<l;_i41++){var morphTarget=morphTargets[_i41],attribute=new Float32BufferAttribute(3*morphTarget.data.length,3);attribute.name=morphTarget.name;positions.push(attribute.copyVector3sArray(morphTarget.data))}this.morphAttributes[name]=positions}0<geometry.skinIndices.length&&(name=new Float32BufferAttribute(4*geometry.skinIndices.length,4),this.setAttribute("skinIndex",name.copyVector4sArray(geometry.skinIndices)));0<geometry.skinWeights.length&&(name=new Float32BufferAttribute(4*
geometry.skinWeights.length,4),this.setAttribute("skinWeight",name.copyVector4sArray(geometry.skinWeights)));null!==geometry.boundingSphere&&(this.boundingSphere=geometry.boundingSphere.clone());null!==geometry.boundingBox&&(this.boundingBox=geometry.boundingBox.clone());return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3);var position=this.attributes.position,morphAttributesPosition=this.morphAttributes.position;if(void 0!==position){if(this.boundingBox.setFromBufferAttribute(position),
morphAttributesPosition){position=0;for(var il=morphAttributesPosition.length;position<il;position++)_box$2.setFromBufferAttribute(morphAttributesPosition[position]),this.morphTargetsRelative?(_vector$4.addVectors(this.boundingBox.min,_box$2.min),this.boundingBox.expandByPoint(_vector$4),_vector$4.addVectors(this.boundingBox.max,_box$2.max),this.boundingBox.expandByPoint(_vector$4)):(this.boundingBox.expandByPoint(_box$2.min),this.boundingBox.expandByPoint(_box$2.max))}}else this.boundingBox.makeEmpty();
(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);var position=this.attributes.position,morphAttributesPosition=this.morphAttributes.position;if(position){var center=this.boundingSphere.center;_box$2.setFromBufferAttribute(position);
if(morphAttributesPosition)for(var _i43=0,il=morphAttributesPosition.length;_i43<il;_i43++)_boxMorphTargets.setFromBufferAttribute(morphAttributesPosition[_i43]),this.morphTargetsRelative?(_vector$4.addVectors(_box$2.min,_boxMorphTargets.min),_box$2.expandByPoint(_vector$4),_vector$4.addVectors(_box$2.max,_boxMorphTargets.max),_box$2.expandByPoint(_vector$4)):(_box$2.expandByPoint(_boxMorphTargets.min),_box$2.expandByPoint(_boxMorphTargets.max));_box$2.getCenter(center);il=_i43=0;for(var _il2=position.count;il<
_il2;il++)_vector$4.fromBufferAttribute(position,il),_i43=Math.max(_i43,center.distanceToSquared(_vector$4));if(morphAttributesPosition)for(il=0,_il2=morphAttributesPosition.length;il<_il2;il++)for(var _morphAttribute=morphAttributesPosition[il],morphTargetsRelative=this.morphTargetsRelative,j=0,jl=_morphAttribute.count;j<jl;j++)_vector$4.fromBufferAttribute(_morphAttribute,j),morphTargetsRelative&&(_offset.fromBufferAttribute(position,j),_vector$4.add(_offset)),_i43=Math.max(_i43,center.distanceToSquared(_vector$4));
this.boundingSphere.radius=Math.sqrt(_i43);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){var index=this.index,positionAttribute=this.getAttribute("position");if(void 0!==positionAttribute){var normalAttribute=this.getAttribute("normal");if(void 0===normalAttribute)normalAttribute=new BufferAttribute(new Float32Array(3*
positionAttribute.count),3),this.setAttribute("normal",normalAttribute);else for(var _i46=0,il=normalAttribute.count;_i46<il;_i46++)normalAttribute.setXYZ(_i46,0,0,0);_i46=new Vector3;il=new Vector3;var pC=new Vector3,nA=new Vector3,nB=new Vector3,nC=new Vector3,cb=new Vector3,ab=new Vector3;if(index)for(var _i47=0,_il4=index.count;_i47<_il4;_i47+=3){var vA=index.getX(_i47+0),vB=index.getX(_i47+1),vC=index.getX(_i47+2);_i46.fromBufferAttribute(positionAttribute,vA);il.fromBufferAttribute(positionAttribute,
vB);pC.fromBufferAttribute(positionAttribute,vC);cb.subVectors(pC,il);ab.subVectors(_i46,il);cb.cross(ab);nA.fromBufferAttribute(normalAttribute,vA);nB.fromBufferAttribute(normalAttribute,vB);nC.fromBufferAttribute(normalAttribute,vC);nA.add(cb);nB.add(cb);nC.add(cb);normalAttribute.setXYZ(vA,nA.x,nA.y,nA.z);normalAttribute.setXYZ(vB,nB.x,nB.y,nB.z);normalAttribute.setXYZ(vC,nC.x,nC.y,nC.z)}else for(index=0,nA=positionAttribute.count;index<nA;index+=3)_i46.fromBufferAttribute(positionAttribute,index+
0),il.fromBufferAttribute(positionAttribute,index+1),pC.fromBufferAttribute(positionAttribute,index+2),cb.subVectors(pC,il),ab.subVectors(_i46,il),cb.cross(ab),normalAttribute.setXYZ(index+0,cb.x,cb.y,cb.z),normalAttribute.setXYZ(index+1,cb.x,cb.y,cb.z),normalAttribute.setXYZ(index+2,cb.x,cb.y,cb.z);this.normalizeNormals();normalAttribute.needsUpdate=!0}},merge:function(geometry,offset){if(geometry&&geometry.isBufferGeometry){void 0===offset&&(offset=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset\x3d0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
var attributes=this.attributes,key;for(key in attributes)if(void 0!==geometry.attributes[key]){var attributeArray1=attributes[key].array,attribute2=geometry.attributes[key],attributeArray2=attribute2.array,attributeOffset=attribute2.itemSize*offset;attribute2=Math.min(attributeArray2.length,attributeArray1.length-attributeOffset);for(var _i49=0;_i49<attribute2;_i49++,attributeOffset++)attributeArray1[attributeOffset]=attributeArray2[_i49]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",
geometry)},normalizeNormals:function(){for(var normals=this.attributes.normal,_i50=0,il=normals.count;_i50<il;_i50++)_vector$4.fromBufferAttribute(normals,_i50),_vector$4.normalize(),normals.setXYZ(_i50,_vector$4.x,_vector$4.y,_vector$4.z)},toNonIndexed:function(){function convertBufferAttribute(attribute,indices){var array=attribute.array,itemSize=attribute.itemSize;attribute=attribute.normalized;for(var array2=new array.constructor(indices.length*itemSize),index,index2=0,_i51=0,l=indices.length;_i51<
l;_i51++){index=indices[_i51]*itemSize;for(var j=0;j<itemSize;j++)array2[index2++]=array[index++]}return new BufferAttribute(array2,itemSize,attribute)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var geometry2=new BufferGeometry,indices$jscomp$0=this.index.array,attributes=this.attributes;for(name in attributes){var newAttribute=convertBufferAttribute(attributes[name],indices$jscomp$0);geometry2.setAttribute(name,newAttribute)}attributes=
this.morphAttributes;for(var _name in attributes){var name=[];newAttribute=attributes[_name];for(var _i52=0,il=newAttribute.length;_i52<il;_i52++){var _newAttribute=convertBufferAttribute(newAttribute[_i52],indices$jscomp$0);name.push(_newAttribute)}geometry2.morphAttributes[_name]=name}geometry2.morphTargetsRelative=this.morphTargetsRelative;indices$jscomp$0=this.groups;_name=0;for(attributes=indices$jscomp$0.length;_name<attributes;_name++)name=indices$jscomp$0[_name],geometry2.addGroup(name.start,
name.count,name.materialIndex);return geometry2},toJSON:function(){var data={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};data.uuid=this.uuid;data.type=this.type;""!==this.name&&(data.name=this.name);0<Object.keys(this.userData).length&&(data.userData=this.userData);if(void 0!==this.parameters){var parameters=this.parameters;for(key in parameters)void 0!==parameters[key]&&(data[key]=parameters[key]);return data}data.data={attributes:{}};var key=this.index;null!==
key&&(data.data.index={type:key.array.constructor.name,array:Array.prototype.slice.call(key.array)});key=this.attributes;for(var _key in key){var attribute=key[_key],attributeData=attribute.toJSON(data.data);""!==attribute.name&&(attributeData.name=attribute.name);data.data.attributes[_key]=attributeData}_key={};key=!1;for(parameters in this.morphAttributes){attribute=this.morphAttributes[parameters];attributeData=[];for(var _i54=0,il=attribute.length;_i54<il;_i54++){var _attribute6=attribute[_i54],
_attributeData=_attribute6.toJSON(data.data);""!==_attribute6.name&&(_attributeData.name=_attribute6.name);attributeData.push(_attributeData)}0<attributeData.length&&(_key[parameters]=attributeData,key=!0)}key&&(data.data.morphAttributes=_key,data.data.morphTargetsRelative=this.morphTargetsRelative);parameters=this.groups;0<parameters.length&&(data.data.groups=JSON.parse(JSON.stringify(parameters)));parameters=this.boundingSphere;null!==parameters&&(data.data.boundingSphere={center:parameters.center.toArray(),
radius:parameters.radius});return data},clone:function(){return(new BufferGeometry).copy(this)},copy:function(source){this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;var data={};this.name=source.name;var index=source.index;null!==index&&this.setIndex(index.clone(data));index=source.attributes;for(var name in index)this.setAttribute(name,index[name].clone(data));name=source.morphAttributes;for(var _name2 in name){index=[];for(var morphAttribute=
name[_name2],_i55=0,l=morphAttribute.length;_i55<l;_i55++)index.push(morphAttribute[_i55].clone(data));this.morphAttributes[_name2]=index}this.morphTargetsRelative=source.morphTargetsRelative;data=source.groups;_name2=0;for(name=data.length;_name2<name;_name2++)index=data[_name2],this.addGroup(index.start,index.count,index.materialIndex);data=source.boundingBox;null!==data&&(this.boundingBox=data.clone());data=source.boundingSphere;null!==data&&(this.boundingSphere=data.clone());this.drawRange.start=
source.drawRange.start;this.drawRange.count=source.drawRange.count;this.userData=source.userData;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var _inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere,_vA=new Vector3,_vB=new Vector3,_vC=new Vector3,_tempA=new Vector3,_tempB=new Vector3,_tempC=new Vector3,_morphA=new Vector3,_morphB=new Vector3,_morphC=new Vector3,_uvA=new Vector2,_uvB=new Vector2,_uvC=new Vector2,_intersectionPoint=new Vector3,_intersectionPointWorld=
new Vector3;Mesh.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Mesh,isMesh:!0,copy:function(source){Object3D.prototype.copy.call(this,source);void 0!==source.morphTargetInfluences&&(this.morphTargetInfluences=source.morphTargetInfluences.slice());void 0!==source.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary));this.material=source.material;this.geometry=source.geometry;return this},updateMorphTargets:function(){var geometry=
this.geometry;if(geometry.isBufferGeometry){geometry=geometry.morphAttributes;var keys=Object.keys(geometry);if(0<keys.length&&(geometry=geometry[keys[0]],void 0!==geometry)){this.morphTargetInfluences=[];this.morphTargetDictionary={};keys=0;for(var ml=geometry.length;keys<ml;keys++){var name=geometry[keys].name||String(keys);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=keys}}}else geometry=geometry.morphTargets,void 0!==geometry&&0<geometry.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},
raycast:function(raycaster,intersects){var geometry=this.geometry,material=this.material,matrixWorld=this.matrixWorld;if(void 0!==material&&(null===geometry.boundingSphere&&geometry.computeBoundingSphere(),_sphere.copy(geometry.boundingSphere),_sphere.applyMatrix4(matrixWorld),!1!==raycaster.ray.intersectsSphere(_sphere)&&(_inverseMatrix.getInverse(matrixWorld),_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix),null===geometry.boundingBox||!1!==_ray.intersectsBox(geometry.boundingBox))))if(geometry.isBufferGeometry){var index=
geometry.index,position=geometry.attributes.position;matrixWorld=geometry.morphAttributes.position;var morphTargetsRelative=geometry.morphTargetsRelative,uv=geometry.attributes.uv,uv2=geometry.attributes.uv2,groups=geometry.groups,drawRange=geometry.drawRange;if(null!==index)if(Array.isArray(material))for(var _i57=0,il=groups.length;_i57<il;_i57++)for(var group=groups[_i57],groupMaterial=material[group.materialIndex],j=Math.max(group.start,drawRange.start),jl=Math.min(group.start+group.count,drawRange.start+
drawRange.count);j<jl;j+=3){geometry=index.getX(j);var b=index.getX(j+1),c=index.getX(j+2);if(geometry=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray,position,matrixWorld,morphTargetsRelative,uv,uv2,geometry,b,c))geometry.faceIndex=Math.floor(j/3),geometry.face.materialIndex=group.materialIndex,intersects.push(geometry)}else for(groups=Math.max(0,drawRange.start),drawRange=Math.min(index.count,drawRange.start+drawRange.count);groups<drawRange;groups+=3){if(geometry=index.getX(groups),
_i57=index.getX(groups+1),il=index.getX(groups+2),geometry=checkBufferGeometryIntersection(this,material,raycaster,_ray,position,matrixWorld,morphTargetsRelative,uv,uv2,geometry,_i57,il))geometry.faceIndex=Math.floor(groups/3),intersects.push(geometry)}else if(void 0!==position)if(Array.isArray(material))for(index=0,_i57=groups.length;index<_i57;index++)for(il=groups[index],group=material[il.materialIndex],groupMaterial=Math.max(il.start,drawRange.start),j=Math.min(il.start+il.count,drawRange.start+
drawRange.count);groupMaterial<j;groupMaterial+=3){if(geometry=checkBufferGeometryIntersection(this,group,raycaster,_ray,position,matrixWorld,morphTargetsRelative,uv,uv2,groupMaterial,groupMaterial+1,groupMaterial+2))geometry.faceIndex=Math.floor(groupMaterial/3),geometry.face.materialIndex=il.materialIndex,intersects.push(geometry)}else for(groups=Math.max(0,drawRange.start),drawRange=Math.min(position.count,drawRange.start+drawRange.count);groups<drawRange;groups+=3)if(geometry=checkBufferGeometryIntersection(this,
material,raycaster,_ray,position,matrixWorld,morphTargetsRelative,uv,uv2,groups,groups+1,groups+2))geometry.faceIndex=Math.floor(groups/3),intersects.push(geometry)}else if(geometry.isGeometry)for(matrixWorld=Array.isArray(material),morphTargetsRelative=geometry.vertices,uv=geometry.faces,geometry=geometry.faceVertexUvs[0],0<geometry.length&&(position=geometry),uv2=0,drawRange=uv.length;uv2<drawRange;uv2++)if(groups=uv[uv2],geometry=matrixWorld?material[groups.materialIndex]:material,void 0!==geometry&&
(index=morphTargetsRelative[groups.a],_i57=morphTargetsRelative[groups.b],il=morphTargetsRelative[groups.c],geometry=checkIntersection(this,geometry,raycaster,_ray,index,_i57,il,_intersectionPoint)))position&&position[uv2]&&(group=position[uv2],_uvA.copy(group[0]),_uvB.copy(group[1]),_uvC.copy(group[2]),geometry.uv=Triangle.getUV(_intersectionPoint,index,_i57,il,_uvA,_uvB,_uvC,new Vector2)),geometry.face=groups,geometry.faceIndex=uv2,intersects.push(geometry)}});var _geometryId=0,_m1$3=new Matrix4,
_obj$1=new Object3D,_offset$1=new Vector3;Geometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Geometry,isGeometry:!0,applyMatrix4:function(matrix){for(var normalMatrix=(new Matrix3).getNormalMatrix(matrix),_i62=0,il=this.vertices.length;_i62<il;_i62++)this.vertices[_i62].applyMatrix4(matrix);matrix=0;for(_i62=this.faces.length;matrix<_i62;matrix++){il=this.faces[matrix];il.normal.applyMatrix3(normalMatrix).normalize();for(var j=0,jl=il.vertexNormals.length;j<jl;j++)il.vertexNormals[j].applyMatrix3(normalMatrix).normalize()}null!==
this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=this.verticesNeedUpdate=!0;return this},rotateX:function(angle){_m1$3.makeRotationX(angle);this.applyMatrix4(_m1$3);return this},rotateY:function(angle){_m1$3.makeRotationY(angle);this.applyMatrix4(_m1$3);return this},rotateZ:function(angle){_m1$3.makeRotationZ(angle);this.applyMatrix4(_m1$3);return this},translate:function(x,y,z){_m1$3.makeTranslation(x,y,z);this.applyMatrix4(_m1$3);
return this},scale:function(x,y,z){_m1$3.makeScale(x,y,z);this.applyMatrix4(_m1$3);return this},lookAt:function(vector){_obj$1.lookAt(vector);_obj$1.updateMatrix();this.applyMatrix4(_obj$1.matrix);return this},fromBufferGeometry:function(geometry){function addFace(a,b,c,materialIndex){var vertexColors=void 0===color?[]:[scope.colors[a].clone(),scope.colors[b].clone(),scope.colors[c].clone()],vertexNormals=void 0===normal?[]:[(new Vector3).fromBufferAttribute(normal,a),(new Vector3).fromBufferAttribute(normal,
b),(new Vector3).fromBufferAttribute(normal,c)];materialIndex=new Face3(a,b,c,vertexNormals,vertexColors,materialIndex);scope.faces.push(materialIndex);void 0!==uv&&scope.faceVertexUvs[0].push([(new Vector2).fromBufferAttribute(uv,a),(new Vector2).fromBufferAttribute(uv,b),(new Vector2).fromBufferAttribute(uv,c)]);void 0!==uv2&&scope.faceVertexUvs[1].push([(new Vector2).fromBufferAttribute(uv2,a),(new Vector2).fromBufferAttribute(uv2,b),(new Vector2).fromBufferAttribute(uv2,c)])}var scope=this,index=
null!==geometry.index?geometry.index:void 0,attributes=geometry.attributes;if(void 0===attributes.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var position=attributes.position,normal=attributes.normal,color=attributes.color,uv=attributes.uv,uv2=attributes.uv2;void 0!==uv2&&(this.faceVertexUvs[1]=[]);for(attributes=0;attributes<position.count;attributes++)scope.vertices.push((new Vector3).fromBufferAttribute(position,attributes)),
void 0!==color&&scope.colors.push((new Color).fromBufferAttribute(color,attributes));attributes=geometry.groups;if(0<attributes.length)for(position=0;position<attributes.length;position++){var group=attributes[position],start=group.start,j=start;for(start+=group.count;j<start;j+=3)void 0!==index?addFace(index.getX(j),index.getX(j+1),index.getX(j+2),group.materialIndex):addFace(j,j+1,j+2,group.materialIndex)}else if(void 0!==index)for(attributes=0;attributes<index.count;attributes+=3)addFace(index.getX(attributes),
index.getX(attributes+1),index.getX(attributes+2));else for(index=0;index<position.count;index+=3)addFace(index,index+1,index+2);this.computeFaceNormals();null!==geometry.boundingBox&&(this.boundingBox=geometry.boundingBox.clone());null!==geometry.boundingSphere&&(this.boundingSphere=geometry.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();this.boundingBox.getCenter(_offset$1).negate();this.translate(_offset$1.x,_offset$1.y,_offset$1.z);return this},normalize:function(){this.computeBoundingSphere();
var center=this.boundingSphere.center,radius=this.boundingSphere.radius;radius=0===radius?1:1/radius;var matrix=new Matrix4;matrix.set(radius,0,0,-radius*center.x,0,radius,0,-radius*center.y,0,0,radius,-radius*center.z,0,0,0,1);this.applyMatrix4(matrix);return this},computeFaceNormals:function(){for(var cb=new Vector3,ab=new Vector3,f=0,fl=this.faces.length;f<fl;f++){var face=this.faces[f],vA=this.vertices[face.a],vB=this.vertices[face.b];cb.subVectors(this.vertices[face.c],vB);ab.subVectors(vA,vB);
cb.cross(ab);cb.normalize();face.normal.copy(cb)}},computeVertexNormals:function(areaWeighted){void 0===areaWeighted&&(areaWeighted=!0);for(var vertices=Array(this.vertices.length),v=0,vl=this.vertices.length;v<vl;v++)vertices[v]=new Vector3;if(areaWeighted){areaWeighted=new Vector3;v=new Vector3;vl=0;for(var fl=this.faces.length;vl<fl;vl++){var face=this.faces[vl],vA=this.vertices[face.a],vB=this.vertices[face.b];areaWeighted.subVectors(this.vertices[face.c],vB);v.subVectors(vA,vB);areaWeighted.cross(v);
vertices[face.a].add(areaWeighted);vertices[face.b].add(areaWeighted);vertices[face.c].add(areaWeighted)}}else for(this.computeFaceNormals(),areaWeighted=0,v=this.faces.length;areaWeighted<v;areaWeighted++)vl=this.faces[areaWeighted],vertices[vl.a].add(vl.normal),vertices[vl.b].add(vl.normal),vertices[vl.c].add(vl.normal);areaWeighted=0;for(v=this.vertices.length;areaWeighted<v;areaWeighted++)vertices[areaWeighted].normalize();areaWeighted=0;for(v=this.faces.length;areaWeighted<v;areaWeighted++)vl=
this.faces[areaWeighted],fl=vl.vertexNormals,3===fl.length?(fl[0].copy(vertices[vl.a]),fl[1].copy(vertices[vl.b]),fl[2].copy(vertices[vl.c])):(fl[0]=vertices[vl.a].clone(),fl[1]=vertices[vl.b].clone(),fl[2]=vertices[vl.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(var f=0,fl=this.faces.length;f<fl;f++){var face=this.faces[f],vertexNormals=face.vertexNormals;3===vertexNormals.length?(vertexNormals[0].copy(face.normal),
vertexNormals[1].copy(face.normal),vertexNormals[2].copy(face.normal)):(vertexNormals[0]=face.normal.clone(),vertexNormals[1]=face.normal.clone(),vertexNormals[2]=face.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(var f=0,fl=this.faces.length;f<fl;f++){var face=this.faces[f];face.__originalFaceNormal?face.__originalFaceNormal.copy(face.normal):face.__originalFaceNormal=face.normal.clone();face.__originalVertexNormals||(face.__originalVertexNormals=
[]);for(var _i68=0,il=face.vertexNormals.length;_i68<il;_i68++)face.__originalVertexNormals[_i68]?face.__originalVertexNormals[_i68].copy(face.vertexNormals[_i68]):face.__originalVertexNormals[_i68]=face.vertexNormals[_i68].clone()}f=new Geometry;f.faces=this.faces;fl=0;for(face=this.morphTargets.length;fl<face;fl++){if(!this.morphNormals[fl]){this.morphNormals[fl]={};this.morphNormals[fl].faceNormals=[];this.morphNormals[fl].vertexNormals=[];_i68=this.morphNormals[fl].faceNormals;il=this.morphNormals[fl].vertexNormals;
for(var _f4=0,_fl3=this.faces.length;_f4<_fl3;_f4++){var faceNormal=new Vector3,vertexNormals={a:new Vector3,b:new Vector3,c:new Vector3};_i68.push(faceNormal);il.push(vertexNormals)}}_i68=this.morphNormals[fl];f.vertices=this.morphTargets[fl].vertices;f.computeFaceNormals();f.computeVertexNormals();il=0;for(_f4=this.faces.length;il<_f4;il++)_fl3=this.faces[il],faceNormal=_i68.vertexNormals[il],_i68.faceNormals[il].copy(_fl3.normal),faceNormal.a.copy(_fl3.vertexNormals[0]),faceNormal.b.copy(_fl3.vertexNormals[1]),
faceNormal.c.copy(_fl3.vertexNormals[2])}f=0;for(fl=this.faces.length;f<fl;f++)face=this.faces[f],face.normal=face.__originalFaceNormal,face.vertexNormals=face.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(geometry,matrix,materialIndexOffset){if(geometry&&
geometry.isGeometry){var normalMatrix,vertexOffset=this.vertices.length,vertices1=this.vertices,vertices2=geometry.vertices,faces1=this.faces,faces2=geometry.faces,colors1=this.colors,colors2=geometry.colors;void 0===materialIndexOffset&&(materialIndexOffset=0);void 0!==matrix&&(normalMatrix=(new Matrix3).getNormalMatrix(matrix));for(var _i70=0,il=vertices2.length;_i70<il;_i70++){var vertexCopy=vertices2[_i70].clone();void 0!==matrix&&vertexCopy.applyMatrix4(matrix);vertices1.push(vertexCopy)}matrix=
0;for(vertices1=colors2.length;matrix<vertices1;matrix++)colors1.push(colors2[matrix].clone());colors1=0;for(colors2=faces2.length;colors1<colors2;colors1++){matrix=faces2[colors1];il=matrix.vertexNormals;vertices2=matrix.vertexColors;vertices1=new Face3(matrix.a+vertexOffset,matrix.b+vertexOffset,matrix.c+vertexOffset);vertices1.normal.copy(matrix.normal);void 0!==normalMatrix&&vertices1.normal.applyMatrix3(normalMatrix).normalize();vertexCopy=0;for(var jl=il.length;vertexCopy<jl;vertexCopy++)_i70=
il[vertexCopy].clone(),void 0!==normalMatrix&&_i70.applyMatrix3(normalMatrix).normalize(),vertices1.vertexNormals.push(_i70);vertices1.color.copy(matrix.color);il=0;for(vertexCopy=vertices2.length;il<vertexCopy;il++)_i70=vertices2[il],vertices1.vertexColors.push(_i70.clone());vertices1.materialIndex=matrix.materialIndex+materialIndexOffset;faces1.push(vertices1)}materialIndexOffset=0;for(normalMatrix=geometry.faceVertexUvs.length;materialIndexOffset<normalMatrix;materialIndexOffset++)for(vertexOffset=
geometry.faceVertexUvs[materialIndexOffset],void 0===this.faceVertexUvs[materialIndexOffset]&&(this.faceVertexUvs[materialIndexOffset]=[]),faces1=0,faces2=vertexOffset.length;faces1<faces2;faces1++){colors1=vertexOffset[faces1];colors2=[];matrix=0;for(vertices1=colors1.length;matrix<vertices1;matrix++)colors2.push(colors1[matrix].clone());this.faceVertexUvs[materialIndexOffset].push(colors2)}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",geometry)},mergeMesh:function(mesh){mesh&&
mesh.isMesh?(mesh.matrixAutoUpdate&&mesh.updateMatrix(),this.merge(mesh.geometry,mesh.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",mesh)},mergeVertices:function(){for(var verticesMap={},unique=[],changes=[],precision=Math.pow(10,4),_i74=0,il=this.vertices.length;_i74<il;_i74++){var v=this.vertices[_i74];v=Math.round(v.x*precision)+"_"+Math.round(v.y*precision)+"_"+Math.round(v.z*precision);void 0===verticesMap[v]?(verticesMap[v]=_i74,unique.push(this.vertices[_i74]),
changes[_i74]=unique.length-1):changes[_i74]=changes[verticesMap[v]]}verticesMap=[];precision=0;for(_i74=this.faces.length;precision<_i74;precision++)for(il=this.faces[precision],il.a=changes[il.a],il.b=changes[il.b],il.c=changes[il.c],il=[il.a,il.b,il.c],v=0;3>v;v++)if(il[v]===il[(v+1)%3]){verticesMap.push(precision);break}for(changes=verticesMap.length-1;0<=changes;changes--)for(precision=verticesMap[changes],this.faces.splice(precision,1),_i74=0,il=this.faceVertexUvs.length;_i74<il;_i74++)this.faceVertexUvs[_i74].splice(precision,
1);changes=this.vertices.length-unique.length;this.vertices=unique;return changes},setFromPoints:function(points){this.vertices=[];for(var _i77=0,l=points.length;_i77<l;_i77++){var point=points[_i77];this.vertices.push(new Vector3(point.x,point.y,point.z||0))}return this},sortFacesByMaterialIndex:function(){for(var faces=this.faces,length=faces.length,_i78=0;_i78<length;_i78++)faces[_i78]._id=_i78;faces.sort(function(a,b){return a.materialIndex-b.materialIndex});_i78=this.faceVertexUvs[0];var uvs2=
this.faceVertexUvs[1],newUvs1,newUvs2;_i78&&_i78.length===length&&(newUvs1=[]);uvs2&&uvs2.length===length&&(newUvs2=[]);for(var _i79=0;_i79<length;_i79++){var id=faces[_i79]._id;newUvs1&&newUvs1.push(_i78[id]);newUvs2&&newUvs2.push(uvs2[id])}newUvs1&&(this.faceVertexUvs[0]=newUvs1);newUvs2&&(this.faceVertexUvs[1]=newUvs2)},toJSON:function(){function setBit(value,position,enabled){return enabled?value|1<<position:value&~(1<<position)}function getNormalIndex(normal){var hash=normal.x.toString()+normal.y.toString()+
normal.z.toString();if(void 0!==normalsHash[hash])return normalsHash[hash];normalsHash[hash]=normals.length/3;normals.push(normal.x,normal.y,normal.z);return normalsHash[hash]}function getColorIndex(color){var hash=color.r.toString()+color.g.toString()+color.b.toString();if(void 0!==colorsHash[hash])return colorsHash[hash];colorsHash[hash]=colors.length;colors.push(color.getHex());return colorsHash[hash]}function getUvIndex(uv){var hash=uv.x.toString()+uv.y.toString();if(void 0!==uvsHash[hash])return uvsHash[hash];
uvsHash[hash]=uvs.length/2;uvs.push(uv.x,uv.y);return uvsHash[hash]}var data={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};data.uuid=this.uuid;data.type=this.type;""!==this.name&&(data.name=this.name);if(void 0!==this.parameters){var parameters=this.parameters,key;for(key in parameters)void 0!==parameters[key]&&(data[key]=parameters[key]);return data}parameters=[];for(key=0;key<this.vertices.length;key++){var vertex=this.vertices[key];parameters.push(vertex.x,vertex.y,vertex.z)}key=
[];var normals=[],normalsHash={},colors=[],colorsHash={},uvs=[],uvsHash={};for(vertex=0;vertex<this.faces.length;vertex++){var face=this.faces[vertex],hasFaceVertexUv=void 0!==this.faceVertexUvs[0][vertex],hasFaceNormal=0<face.normal.length(),hasFaceVertexNormal=0<face.vertexNormals.length,hasFaceColor=1!==face.color.r||1!==face.color.g||1!==face.color.b,hasFaceVertexColor=0<face.vertexColors.length,faceType=0;faceType=setBit(faceType,0,0);faceType=setBit(faceType,1,!0);faceType=setBit(faceType,2,
!1);faceType=setBit(faceType,3,hasFaceVertexUv);faceType=setBit(faceType,4,hasFaceNormal);faceType=setBit(faceType,5,hasFaceVertexNormal);faceType=setBit(faceType,6,hasFaceColor);faceType=setBit(faceType,7,hasFaceVertexColor);key.push(faceType);key.push(face.a,face.b,face.c);key.push(face.materialIndex);hasFaceVertexUv&&(hasFaceVertexUv=this.faceVertexUvs[0][vertex],key.push(getUvIndex(hasFaceVertexUv[0]),getUvIndex(hasFaceVertexUv[1]),getUvIndex(hasFaceVertexUv[2])));hasFaceNormal&&key.push(getNormalIndex(face.normal));
hasFaceVertexNormal&&(hasFaceNormal=face.vertexNormals,key.push(getNormalIndex(hasFaceNormal[0]),getNormalIndex(hasFaceNormal[1]),getNormalIndex(hasFaceNormal[2])));hasFaceColor&&key.push(getColorIndex(face.color));hasFaceVertexColor&&(face=face.vertexColors,key.push(getColorIndex(face[0]),getColorIndex(face[1]),getColorIndex(face[2])))}data.data={};data.data.vertices=parameters;data.data.normals=normals;0<colors.length&&(data.data.colors=colors);0<uvs.length&&(data.data.uvs=[uvs]);data.data.faces=
key;return data},clone:function(){return(new Geometry).copy(this)},copy:function(source){this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.name=source.name;for(var vertices=source.vertices,_i82=0,il=vertices.length;_i82<il;_i82++)this.vertices.push(vertices[_i82].clone());vertices=source.colors;_i82=0;for(il=vertices.length;_i82<
il;_i82++)this.colors.push(vertices[_i82].clone());vertices=source.faces;_i82=0;for(il=vertices.length;_i82<il;_i82++)this.faces.push(vertices[_i82].clone());vertices=0;for(_i82=source.faceVertexUvs.length;vertices<_i82;vertices++){il=source.faceVertexUvs[vertices];void 0===this.faceVertexUvs[vertices]&&(this.faceVertexUvs[vertices]=[]);for(var j=0,jl=il.length;j<jl;j++){for(var uvs=il[j],uvsCopy=[],k=0,kl=uvs.length;k<kl;k++)uvsCopy.push(uvs[k].clone());this.faceVertexUvs[vertices].push(uvsCopy)}}vertices=
source.morphTargets;_i82=0;for(il=vertices.length;_i82<il;_i82++){j={};j.name=vertices[_i82].name;if(void 0!==vertices[_i82].vertices)for(j.vertices=[],jl=0,uvs=vertices[_i82].vertices.length;jl<uvs;jl++)j.vertices.push(vertices[_i82].vertices[jl].clone());if(void 0!==vertices[_i82].normals)for(j.normals=[],jl=0,uvs=vertices[_i82].normals.length;jl<uvs;jl++)j.normals.push(vertices[_i82].normals[jl].clone());this.morphTargets.push(j)}vertices=source.morphNormals;_i82=0;for(il=vertices.length;_i82<
il;_i82++){j={};if(void 0!==vertices[_i82].vertexNormals)for(j.vertexNormals=[],jl=0,uvs=vertices[_i82].vertexNormals.length;jl<uvs;jl++)uvsCopy=vertices[_i82].vertexNormals[jl],k={},k.a=uvsCopy.a.clone(),k.b=uvsCopy.b.clone(),k.c=uvsCopy.c.clone(),j.vertexNormals.push(k);if(void 0!==vertices[_i82].faceNormals)for(j.faceNormals=[],jl=0,uvs=vertices[_i82].faceNormals.length;jl<uvs;jl++)j.faceNormals.push(vertices[_i82].faceNormals[jl].clone());this.morphNormals.push(j)}vertices=source.skinWeights;
_i82=0;for(il=vertices.length;_i82<il;_i82++)this.skinWeights.push(vertices[_i82].clone());vertices=source.skinIndices;_i82=0;for(il=vertices.length;_i82<il;_i82++)this.skinIndices.push(vertices[_i82].clone());vertices=source.lineDistances;_i82=0;for(il=vertices.length;_i82<il;_i82++)this.lineDistances.push(vertices[_i82]);vertices=source.boundingBox;null!==vertices&&(this.boundingBox=vertices.clone());vertices=source.boundingSphere;null!==vertices&&(this.boundingSphere=vertices.clone());this.elementsNeedUpdate=
source.elementsNeedUpdate;this.verticesNeedUpdate=source.verticesNeedUpdate;this.uvsNeedUpdate=source.uvsNeedUpdate;this.normalsNeedUpdate=source.normalsNeedUpdate;this.colorsNeedUpdate=source.colorsNeedUpdate;this.lineDistancesNeedUpdate=source.lineDistancesNeedUpdate;this.groupsNeedUpdate=source.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var BoxGeometry$jscomp$0=function(_Geometry){function BoxGeometry(width,height,depth,widthSegments,heightSegments,
depthSegments){_classCallCheck(this,BoxGeometry);var _this2=_possibleConstructorReturn(this,_getPrototypeOf(BoxGeometry).call(this));_this2.type="BoxGeometry";_this2.parameters={width:width,height:height,depth:depth,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};_this2.fromBufferGeometry(new BoxBufferGeometry$jscomp$0(width,height,depth,widthSegments,heightSegments,depthSegments));_this2.mergeVertices();return _this2}_inherits(BoxGeometry,_Geometry);return BoxGeometry}(Geometry);
exports.CubeGeometry=exports.BoxGeometry=BoxGeometry$jscomp$0;var BoxBufferGeometry$jscomp$0=function(_BufferGeometry){function BoxBufferGeometry(width$jscomp$0,height$jscomp$0,depth$jscomp$0,widthSegments,heightSegments,depthSegments){function buildPlane(u,v,w,udir,vdir,width,height,depth,gridX,gridY,materialIndex){var segmentWidth=width/gridX,segmentHeight=height/gridY,widthHalf=width/2,heightHalf=height/2,depthHalf=depth/2;height=gridX+1;for(var gridY1=gridY+1,groupCount=width=0,vector=new Vector3,
iy=0;iy<gridY1;iy++)for(var y=iy*segmentHeight-heightHalf,ix=0;ix<height;ix++)vector[u]=(ix*segmentWidth-widthHalf)*udir,vector[v]=y*vdir,vector[w]=depthHalf,vertices.push(vector.x,vector.y,vector.z),vector[u]=0,vector[v]=0,vector[w]=0<depth?1:-1,normals.push(vector.x,vector.y,vector.z),uvs.push(ix/gridX),uvs.push(1-iy/gridY),width+=1;for(u=0;u<gridY;u++)for(v=0;v<gridX;v++)w=numberOfVertices+v+height*(u+1),udir=numberOfVertices+(v+1)+height*(u+1),vdir=numberOfVertices+(v+1)+height*u,indices.push(numberOfVertices+
v+height*u,w,vdir),indices.push(w,udir,vdir),groupCount+=6;scope.addGroup(groupStart,groupCount,materialIndex);groupStart+=groupCount;numberOfVertices+=width}_classCallCheck(this,BoxBufferGeometry);var _this3=_possibleConstructorReturn(this,_getPrototypeOf(BoxBufferGeometry).call(this));_this3.type="BoxBufferGeometry";_this3.parameters={width:width$jscomp$0,height:height$jscomp$0,depth:depth$jscomp$0,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};var scope=
_assertThisInitialized(_this3);width$jscomp$0=width$jscomp$0||1;height$jscomp$0=height$jscomp$0||1;depth$jscomp$0=depth$jscomp$0||1;widthSegments=Math.floor(widthSegments)||1;heightSegments=Math.floor(heightSegments)||1;depthSegments=Math.floor(depthSegments)||1;var indices=[],vertices=[],normals=[],uvs=[],numberOfVertices=0,groupStart=0;buildPlane("z","y","x",-1,-1,depth$jscomp$0,height$jscomp$0,width$jscomp$0,depthSegments,heightSegments,0);buildPlane("z","y","x",1,-1,depth$jscomp$0,height$jscomp$0,
-width$jscomp$0,depthSegments,heightSegments,1);buildPlane("x","z","y",1,1,width$jscomp$0,depth$jscomp$0,height$jscomp$0,widthSegments,depthSegments,2);buildPlane("x","z","y",1,-1,width$jscomp$0,depth$jscomp$0,-height$jscomp$0,widthSegments,depthSegments,3);buildPlane("x","y","z",1,-1,width$jscomp$0,height$jscomp$0,depth$jscomp$0,widthSegments,heightSegments,4);buildPlane("x","y","z",-1,-1,width$jscomp$0,height$jscomp$0,-depth$jscomp$0,widthSegments,heightSegments,5);_this3.setIndex(indices);_this3.setAttribute("position",
new Float32BufferAttribute(vertices,3));_this3.setAttribute("normal",new Float32BufferAttribute(normals,3));_this3.setAttribute("uv",new Float32BufferAttribute(uvs,2));return _this3}_inherits(BoxBufferGeometry,_BufferGeometry);return BoxBufferGeometry}(BufferGeometry);exports.BoxBufferGeometry=BoxBufferGeometry$jscomp$0;var UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};exports.UniformsUtils=UniformsUtils;var default_vertex="void main() {\n\tgl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
default_fragment="void main() {\n\tgl_FragColor \x3d vec4( 1.0, 0.0, 0.0, 1.0 );\n}";ShaderMaterial.prototype=Object.create(Material.prototype);ShaderMaterial.prototype.constructor=ShaderMaterial;ShaderMaterial.prototype.isShaderMaterial=!0;ShaderMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.fragmentShader=source.fragmentShader;this.vertexShader=source.vertexShader;this.uniforms=cloneUniforms(source.uniforms);this.defines=Object.assign({},source.defines);
this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.lights=source.lights;this.clipping=source.clipping;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.extensions=Object.assign({},source.extensions);return this};ShaderMaterial.prototype.toJSON=function(meta){var data=Material.prototype.toJSON.call(this,meta);data.uniforms={};for(var name in this.uniforms){var value=this.uniforms[name].value;data.uniforms[name]=
value&&value.isTexture?{type:"t",value:value.toJSON(meta).uuid}:value&&value.isColor?{type:"c",value:value.getHex()}:value&&value.isVector2?{type:"v2",value:value.toArray()}:value&&value.isVector3?{type:"v3",value:value.toArray()}:value&&value.isVector4?{type:"v4",value:value.toArray()}:value&&value.isMatrix3?{type:"m3",value:value.toArray()}:value&&value.isMatrix4?{type:"m4",value:value.toArray()}:{value:value}}0<Object.keys(this.defines).length&&(data.defines=this.defines);data.vertexShader=this.vertexShader;
data.fragmentShader=this.fragmentShader;meta={};for(var key in this.extensions)!0===this.extensions[key]&&(meta[key]=!0);0<Object.keys(meta).length&&(data.extensions=meta);return data};Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:!0,copy:function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);this.matrixWorldInverse.copy(source.matrixWorldInverse);this.projectionMatrix.copy(source.projectionMatrix);this.projectionMatrixInverse.copy(source.projectionMatrixInverse);
return this},getWorldDirection:function(target){void 0===target&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),target=new Vector3);this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return target.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(force){Object3D.prototype.updateMatrixWorld.call(this,force);this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(updateParents,updateChildren){Object3D.prototype.updateWorldMatrix.call(this,
updateParents,updateChildren);this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}});PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:!0,copy:function(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.fov=source.fov;this.zoom=source.zoom;this.near=source.near;this.far=source.far;this.focus=source.focus;this.aspect=source.aspect;this.view=null===
source.view?null:Object.assign({},source.view);this.filmGauge=source.filmGauge;this.filmOffset=source.filmOffset;return this},setFocalLength:function(focalLength){focalLength=.5*this.getFilmHeight()/focalLength;this.fov=2*MathUtils.RAD2DEG*Math.atan(focalLength);this.updateProjectionMatrix()},getFocalLength:function(){var vExtentSlope=Math.tan(.5*MathUtils.DEG2RAD*this.fov);return.5*this.getFilmHeight()/vExtentSlope},getEffectiveFOV:function(){return 2*MathUtils.RAD2DEG*Math.atan(Math.tan(.5*MathUtils.DEG2RAD*
this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight;null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=
width;this.view.height=height;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},updateProjectionMatrix:function(){var near=this.near,top=near*Math.tan(.5*MathUtils.DEG2RAD*this.fov)/this.zoom,height=2*top,width=this.aspect*height,left=-.5*width,view=this.view;if(null!==this.view&&this.view.enabled){var fullWidth=view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth;top-=view.offsetY*height/fullHeight;
width*=view.width/fullWidth;height*=view.height/fullHeight}view=this.filmOffset;0!==view&&(left+=near*view/this.getFilmWidth());this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far);this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(meta){meta=Object3D.prototype.toJSON.call(this,meta);meta.object.fov=this.fov;meta.object.zoom=this.zoom;meta.object.near=this.near;meta.object.far=this.far;meta.object.focus=this.focus;meta.object.aspect=this.aspect;
null!==this.view&&(meta.object.view=Object.assign({},this.view));meta.object.filmGauge=this.filmGauge;meta.object.filmOffset=this.filmOffset;return meta}});var fov$jscomp$0=90,aspect$jscomp$0=1;CubeCamera.prototype=Object.create(Object3D.prototype);CubeCamera.prototype.constructor=CubeCamera;WebGLCubeRenderTarget.prototype=Object.create(WebGLRenderTarget.prototype);WebGLCubeRenderTarget.prototype.constructor=WebGLCubeRenderTarget;WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=!0;WebGLCubeRenderTarget.prototype.fromEquirectangularTexture=
function(renderer,texture){this.texture.type=texture.type;this.texture.format=texture.format;this.texture.encoding=texture.encoding;var scene=new Scene,material=new ShaderMaterial({name:"CubemapFromEquirect",uniforms:cloneUniforms({tEquirect:{value:null}}),vertexShader:"varying vec3 vWorldDirection;\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvoid main() {\n\tvWorldDirection \x3d transformDirection( position, modelMatrix );\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n}",
fragmentShader:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include \x3ccommon\x3e\nvoid main() {\n\tvec3 direction \x3d normalize( vWorldDirection );\n\tvec2 sampleUV \x3d equirectUv( direction );\n\tgl_FragColor \x3d texture2D( tEquirect, sampleUV );\n}",side:BackSide,blending:NoBlending});material.uniforms.tEquirect.value=texture;texture=new Mesh(new BoxBufferGeometry$jscomp$0(5,5,5),material);scene.add(texture);(new CubeCamera(1,10,this)).update(renderer,scene);texture.geometry.dispose();
texture.material.dispose();return this};DataTexture.prototype=Object.create(Texture.prototype);DataTexture.prototype.constructor=DataTexture;DataTexture.prototype.isDataTexture=!0;var _sphere$1=new Sphere,_vector$5=new Vector3;Object.assign(Frustum.prototype,{set:function(p0,p1,p2,p3,p4,p5){var planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(frustum){for(var planes=
this.planes,_i92=0;6>_i92;_i92++)planes[_i92].copy(frustum.planes[_i92]);return this},setFromProjectionMatrix:function(m){var planes=this.planes,me=m.elements;m=me[0];var me1=me[1],me2=me[2],me3=me[3],me4=me[4],me5=me[5],me6=me[6],me7=me[7],me8=me[8],me9=me[9],me10=me[10],me11=me[11],me12=me[12],me13=me[13],me14=me[14];me=me[15];planes[0].setComponents(me3-m,me7-me4,me11-me8,me-me12).normalize();planes[1].setComponents(me3+m,me7+me4,me11+me8,me+me12).normalize();planes[2].setComponents(me3+me1,me7+
me5,me11+me9,me+me13).normalize();planes[3].setComponents(me3-me1,me7-me5,me11-me9,me-me13).normalize();planes[4].setComponents(me3-me2,me7-me6,me11-me10,me-me14).normalize();planes[5].setComponents(me3+me2,me7+me6,me11+me10,me+me14).normalize();return this},intersectsObject:function(object){var geometry=object.geometry;null===geometry.boundingSphere&&geometry.computeBoundingSphere();_sphere$1.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);return this.intersectsSphere(_sphere$1)},
intersectsSprite:function(sprite){_sphere$1.center.set(0,0,0);_sphere$1.radius=.7071067811865476;_sphere$1.applyMatrix4(sprite.matrixWorld);return this.intersectsSphere(_sphere$1)},intersectsSphere:function(sphere){var planes=this.planes,center=sphere.center;sphere=-sphere.radius;for(var _i93=0;6>_i93;_i93++)if(planes[_i93].distanceToPoint(center)<sphere)return!1;return!0},intersectsBox:function(box){for(var planes=this.planes,_i94=0;6>_i94;_i94++){var plane=planes[_i94];_vector$5.x=0<plane.normal.x?
box.max.x:box.min.x;_vector$5.y=0<plane.normal.y?box.max.y:box.min.y;_vector$5.z=0<plane.normal.z?box.max.z:box.min.z;if(0>plane.distanceToPoint(_vector$5))return!1}return!0},containsPoint:function(point){for(var planes=this.planes,_i95=0;6>_i95;_i95++)if(0>planes[_i95].distanceToPoint(point))return!1;return!0}});var UniformsLib={common:{diffuse:{value:new Color(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3},uv2Transform:{value:new Matrix3},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},
envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},
roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:2.5E-4},fogNear:{value:1},fogFar:{value:2E3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},
spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},
pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(15658734)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},
alphaMap:{value:null},uvTransform:{value:new Matrix3}}};exports.UniformsLib=UniformsLib;PlaneGeometry.prototype=Object.create(Geometry.prototype);PlaneGeometry.prototype.constructor=PlaneGeometry;PlaneBufferGeometry.prototype=Object.create(BufferGeometry.prototype);PlaneBufferGeometry.prototype.constructor=PlaneBufferGeometry;var ShaderChunk={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *\x3d texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a \x3c ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion \x3d ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *\x3d ambientOcclusion;\n\t#if defined( USE_ENVMAP ) \x26\x26 defined( STANDARD )\n\t\tfloat dotNV \x3d saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *\x3d computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed \x3d vec3( position );",beginnormal_vertex:"vec3 objectNormal \x3d vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent \x3d vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 \x3d vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 \x3d vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r \x3d roughness * c0 + c1;\n\tfloat a004 \x3d min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff \x3d 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance \x3e 0.0 ) {\n\t\tdistanceFalloff *\x3d pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance \x3e 0.0 \x26\x26 decayExponent \x3e 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel \x3d exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel \x3d exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr \x3d max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 \x3d pow2( alpha );\n\tfloat gl \x3d dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv \x3d dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 \x3d pow2( alpha );\n\tfloat gv \x3d dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl \x3d dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 \x3d pow2( alpha );\n\tfloat denom \x3d pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha \x3d pow2( roughness );\n\tvec3 halfDir \x3d normalize( incidentLight.direction + viewDir );\n\tfloat dotNL \x3d saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV \x3d saturate( dot( normal, viewDir ) );\n\tfloat dotNH \x3d saturate( dot( normal, halfDir ) );\n\tfloat dotLH \x3d saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F \x3d F_Schlick( specularColor, dotLH );\n\tfloat G \x3d G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D \x3d D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  \x3d 64.0;\n\tconst float LUT_SCALE \x3d ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  \x3d 0.5 / LUT_SIZE;\n\tfloat dotNV \x3d saturate( dot( N, V ) );\n\tvec2 uv \x3d vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv \x3d uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l \x3d length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x \x3d dot( v1, v2 );\n\tfloat y \x3d abs( x );\n\tfloat a \x3d 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b \x3d 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v \x3d a / b;\n\tfloat theta_sintheta \x3d ( x \x3e 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 \x3d rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 \x3d rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal \x3d cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) \x3c 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 \x3d normalize( V - N * dot( V, N ) );\n\tT2 \x3d - cross( N, T1 );\n\tmat3 mat \x3d mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] \x3d mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] \x3d mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] \x3d mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] \x3d mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] \x3d normalize( coords[ 0 ] );\n\tcoords[ 1 ] \x3d normalize( coords[ 1 ] );\n\tcoords[ 2 ] \x3d normalize( coords[ 2 ] );\n\tcoords[ 3 ] \x3d normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor \x3d vec3( 0.0 );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor +\x3d LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result \x3d LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV \x3d saturate( dot( normal, viewDir ) );\n\tvec2 brdf \x3d integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV \x3d saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F \x3d F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf \x3d integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss \x3d F * brdf.x + brdf.y;\n\tfloat Ess \x3d brdf.x + brdf.y;\n\tfloat Ems \x3d 1.0 - Ess;\n\tvec3 Favg \x3d specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms \x3d FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter +\x3d FssEss;\n\tmultiScatter +\x3d Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir \x3d normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH \x3d saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH \x3d saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F \x3d F_Schlick( specularColor, dotLH );\n\tfloat G \x3d G_BlinnPhong_Implicit( );\n\tfloat D \x3d D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  \x3d 1.0 / roughness;\n\tfloat cos2h \x3d NoH * NoH;\n\tfloat sin2h \x3d max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N \x3d geometry.normal;\n\tvec3 V \x3d geometry.viewDir;\n\tvec3 H \x3d normalize( V + L );\n\tfloat dotNH \x3d saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",
bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx \x3d dFdx( vUv );\n\t\tvec2 dSTdy \x3d dFdy( vUv );\n\t\tfloat Hll \x3d bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx \x3d bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy \x3d bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX \x3d vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY \x3d vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN \x3d surf_norm;\n\t\tvec3 R1 \x3d cross( vSigmaY, vN );\n\t\tvec3 R2 \x3d cross( vN, vSigmaX );\n\t\tfloat fDet \x3d dot( vSigmaX, R1 );\n\t\tfDet *\x3d ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad \x3d sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
clipping_planes_fragment:"#if NUM_CLIPPING_PLANES \x3e 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane \x3d clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) \x3e plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES \x3c NUM_CLIPPING_PLANES\n\t\tbool clipped \x3d true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i \x3d UNION_CLIPPING_PLANES; i \x3c NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane \x3d clippingPlanes[ i ];\n\t\t\tclipped \x3d ( dot( vClipPosition, plane.xyz ) \x3e plane.w ) \x26\x26 clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES \x3e 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES \x3e 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES \x3e 0\n\tvClipPosition \x3d - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *\x3d vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz \x3d color.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 \x3d x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a \x3d 12.9898, b \x3d 78.233, c \x3d 43758.5453;\n\thighp float dt \x3d dot( uv.xy, vec2( a,b ) ), sn \x3d mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent \x3d max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance \x3d dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] \x3d vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] \x3d vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] \x3d vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights \x3d vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] \x3d\x3d - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u \x3d atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v \x3d asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",
cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection \x3d abs(direction);\n    float face \x3d -1.0;\n    if (absDirection.x \x3e absDirection.z) {\n      if (absDirection.x \x3e absDirection.y)\n        face \x3d direction.x \x3e 0.0 ? 0.0 : 3.0;\n      else\n        face \x3d direction.y \x3e 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z \x3e absDirection.y)\n        face \x3d direction.z \x3e 0.0 ? 2.0 : 5.0;\n      else\n        face \x3d direction.y \x3e 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face \x3d\x3d 0.0) {\n      uv \x3d vec2(direction.z, direction.y) / abs(direction.x);    } else if (face \x3d\x3d 1.0) {\n      uv \x3d vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face \x3d\x3d 2.0) {\n      uv \x3d vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face \x3d\x3d 3.0) {\n      uv \x3d vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face \x3d\x3d 4.0) {\n      uv \x3d vec2(-direction.x, direction.z) / abs(direction.y);    } else {\n      uv \x3d vec2(direction.x, direction.y) / abs(direction.z);    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face \x3d getFace(direction);\n  float filterInt \x3d max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt \x3d max(mipInt, cubeUV_minMipLevel);\n  float faceSize \x3d exp2(mipInt);\n  float texelSize \x3d 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv \x3d getUV(direction, face) * (faceSize - 1.0);\n  vec2 f \x3d fract(uv);\n  uv +\x3d 0.5 - f;\n  if (face \x3e 2.0) {\n    uv.y +\x3d faceSize;\n    face -\x3d 3.0;\n  }\n  uv.x +\x3d face * faceSize;\n  if(mipInt \x3c cubeUV_maxMipLevel){\n    uv.y +\x3d 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y +\x3d filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x +\x3d 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *\x3d texelSize;\n  vec3 tl \x3d envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x +\x3d texelSize;\n  vec3 tr \x3d envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y +\x3d texelSize;\n  vec3 br \x3d envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -\x3d texelSize;\n  vec3 bl \x3d envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm \x3d mix(tl, tr, f.x);\n  vec3 bm \x3d mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip \x3d 0.0;\n  if (roughness \x3e\x3d r1) {\n    mip \x3d (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness \x3e\x3d r4) {\n    mip \x3d (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness \x3e\x3d r5) {\n    mip \x3d (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness \x3e\x3d r6) {\n    mip \x3d (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip \x3d -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip \x3d clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF \x3d fract(mip);\n  float mipInt \x3d floor(mip);\n  vec3 color0 \x3d bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF \x3d\x3d 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 \x3d bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",
defaultnormal_vertex:"vec3 transformedNormal \x3d objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m \x3d mat3( instanceMatrix );\n\ttransformedNormal /\x3d vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal \x3d m * transformedNormal;\n#endif\ntransformedNormal \x3d normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal \x3d - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent \x3d ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent \x3d - transformedTangent;\n\t#endif\n#endif",
displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed +\x3d normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor \x3d texture2D( emissiveMap, vUv );\n\temissiveColor.rgb \x3d emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *\x3d emissiveColor.rgb;\n#endif",
emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor \x3d linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent \x3d max( max( value.r, value.g ), value.b );\n\tfloat fExp \x3d clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB \x3d max( value.r, max( value.g, value.b ) );\n\tfloat M \x3d clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM \x3d ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB \x3d max( value.r, max( value.g, value.b ) );\n\tfloat D \x3d max( maxRange / maxRGB, 1.0 );\n\tD \x3d clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM \x3d mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp \x3d cLogLuvM * value.rgb;\n\tXp_Y_XYZp \x3d max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy \x3d Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le \x3d 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w \x3d fract( Le );\n\tvResult.z \x3d ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM \x3d mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le \x3d value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y \x3d exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z \x3d Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x \x3d value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB \x3d cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag \x3d normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag \x3d normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal \x3d inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec \x3d reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec \x3d refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec \x3d vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor \x3d textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor \x3d textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\treflectVec \x3d normalize( reflectVec );\n\t\tvec2 sampleUV \x3d equirectUv( reflectVec );\n\t\tvec4 envColor \x3d texture2D( envMap, sampleUV );\n\t#else\n\t\tvec4 envColor \x3d vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor \x3d envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight \x3d mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight \x3d mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight +\x3d envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal \x3d inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec \x3d vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor \x3d textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor \x3d textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb \x3d envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor \x3d textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor \x3d vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar \x3d float( maxMIPLevel );\n\t\tfloat sigma \x3d PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel \x3d maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec \x3d reflect( -viewDir, normal );\n\t\t  reflectVec \x3d normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec \x3d refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec \x3d inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel \x3d getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec \x3d vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor \x3d textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor \x3d textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb \x3d envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor \x3d textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV \x3d equirectUv( reflectVec );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor \x3d texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor \x3d texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb \x3d envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition \x3d worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex \x3d normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex \x3d normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal \x3d inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect \x3d reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect \x3d refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
fog_vertex:"#ifdef USE_FOG\n\tfogDepth \x3d -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor \x3d 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor \x3d smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb \x3d mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL \x3d dot( normal, lightDirection );\n\tvec2 coord \x3d vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x \x3c 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel\x3d texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse +\x3d PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse \x3d vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position \x3d mvPosition.xyz;\ngeometry.normal \x3d normalize( transformedNormal );\ngeometry.viewDir \x3d ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position \x3d geometry.position;\nbackGeometry.normal \x3d -geometry.normal;\nbackGeometry.viewDir \x3d geometry.viewDir;\nvLightFront \x3d vec3( 0.0 );\nvIndirectFront \x3d vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack \x3d vec3( 0.0 );\n\tvIndirectBack \x3d vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront +\x3d getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront +\x3d getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack +\x3d getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack +\x3d getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS \x3e 0\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL \x3d dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse \x3d PI * directLight.color;\n\t\tvLightFront +\x3d saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack +\x3d saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS \x3e 0\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL \x3d dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse \x3d PI * directLight.color;\n\t\tvLightFront +\x3d saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack +\x3d saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS \x3e 0\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL \x3d dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse \x3d PI * directLight.color;\n\t\tvLightFront +\x3d saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack +\x3d saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS \x3e 0\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront +\x3d getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack +\x3d getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",
lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x \x3d normal.x, y \x3d normal.y, z \x3d normal.z;\n\tvec3 result \x3d shCoefficients[ 0 ] * 0.886227;\n\tresult +\x3d shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult +\x3d shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult +\x3d shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult +\x3d shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult +\x3d shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult +\x3d shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult +\x3d shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult +\x3d shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal \x3d inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance \x3d shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance \x3d ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *\x3d PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS \x3e 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color \x3d directionalLight.color;\n\t\tdirectLight.direction \x3d directionalLight.direction;\n\t\tdirectLight.visible \x3d true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS \x3e 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector \x3d pointLight.position - geometry.position;\n\t\tdirectLight.direction \x3d normalize( lVector );\n\t\tfloat lightDistance \x3d length( lVector );\n\t\tdirectLight.color \x3d pointLight.color;\n\t\tdirectLight.color *\x3d punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible \x3d ( directLight.color !\x3d vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS \x3e 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector \x3d spotLight.position - geometry.position;\n\t\tdirectLight.direction \x3d normalize( lVector );\n\t\tfloat lightDistance \x3d length( lVector );\n\t\tfloat angleCos \x3d dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos \x3e spotLight.coneCos ) {\n\t\t\tfloat spotEffect \x3d smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color \x3d spotLight.color;\n\t\t\tdirectLight.color *\x3d spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible \x3d true;\n\t\t} else {\n\t\t\tdirectLight.color \x3d vec3( 0.0 );\n\t\t\tdirectLight.visible \x3d false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS \x3e 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS \x3e 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL \x3d dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight \x3d 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance \x3d mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *\x3d PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor \x3d diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance \x3d getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *\x3d PI;\n\t#endif\n\treflectedLight.directDiffuse +\x3d irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse +\x3d irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor \x3d diffuseColor.rgb;\nmaterial.specularColor \x3d specular;\nmaterial.specularShininess \x3d shininess;\nmaterial.specularStrength \x3d specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL \x3d saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance \x3d dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *\x3d PI;\n\t#endif\n\treflectedLight.directDiffuse +\x3d irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular +\x3d irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse +\x3d irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor \x3d diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy \x3d max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness \x3d max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness \x3d max( roughnessFactor, 0.0525 );material.specularRoughness +\x3d geometryRoughness;\nmaterial.specularRoughness \x3d min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor \x3d mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor \x3d mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat \x3d clearcoat;\n\tmaterial.clearcoatRoughness \x3d clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *\x3d texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *\x3d texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat \x3d saturate( material.clearcoat );\tmaterial.clearcoatRoughness \x3d max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness +\x3d geometryRoughness;\n\tmaterial.clearcoatRoughness \x3d min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor \x3d sheen;\n#endif",
lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS \x3e 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal \x3d geometry.normal;\n\t\tvec3 viewDir \x3d geometry.viewDir;\n\t\tvec3 position \x3d geometry.position;\n\t\tvec3 lightPos \x3d rectAreaLight.position;\n\t\tvec3 halfWidth \x3d rectAreaLight.halfWidth;\n\t\tvec3 halfHeight \x3d rectAreaLight.halfHeight;\n\t\tvec3 lightColor \x3d rectAreaLight.color;\n\t\tfloat roughness \x3d material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] \x3d lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] \x3d lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] \x3d lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] \x3d lightPos + halfWidth + halfHeight;\n\t\tvec2 uv \x3d LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 \x3d texture2D( ltc_1, uv );\n\t\tvec4 t2 \x3d texture2D( ltc_2, uv );\n\t\tmat3 mInv \x3d mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel \x3d ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular +\x3d lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse +\x3d lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL \x3d saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance \x3d dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *\x3d PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL \x3d saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance \x3d ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *\x3d PI;\n\t\t#endif\n\t\tfloat clearcoatDHR \x3d material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular +\x3d ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR \x3d 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular +\x3d ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular +\x3d ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse +\x3d ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse +\x3d irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV \x3d saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular +\x3d clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL \x3d ccDotNV;\n\t\tfloat clearcoatDHR \x3d material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR \x3d 0.0;\n\t#endif\n\tfloat clearcoatInv \x3d 1.0 - clearcoatDHR;\n\tvec3 singleScattering \x3d vec3( 0.0 );\n\tvec3 multiScattering \x3d vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance \x3d irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse \x3d material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular +\x3d clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular +\x3d multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse +\x3d diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position \x3d - vViewPosition;\ngeometry.normal \x3d normal;\ngeometry.viewDir \x3d ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal \x3d clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) \x26\x26 NUM_POINT_LIGHT_SHADOWS \x3e 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight \x3d pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) \x26\x26 ( UNROLLED_LOOP_INDEX \x3c NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow \x3d pointLightShadows[ i ];\n\t\tdirectLight.color *\x3d all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) \x26\x26 NUM_SPOT_LIGHT_SHADOWS \x3e 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight \x3d spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) \x26\x26 ( UNROLLED_LOOP_INDEX \x3c NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow \x3d spotLightShadows[ i ];\n\t\tdirectLight.color *\x3d all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) \x26\x26 NUM_DIR_LIGHT_SHADOWS \x3e 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight \x3d directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) \x26\x26 ( UNROLLED_LOOP_INDEX \x3c NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow \x3d directionalLightShadows[ i ];\n\t\tdirectLight.color *\x3d all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS \x3e 0 ) \x26\x26 defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight \x3d rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance \x3d vec3( 0.0 );\n\tvec3 irradiance \x3d getAmbientLightIrradiance( ambientLightColor );\n\tirradiance +\x3d getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS \x3e 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i \x3d 0; i \x3c NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance +\x3d getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance \x3d vec3( 0.0 );\n\tvec3 clearcoatRadiance \x3d vec3( 0.0 );\n#endif",
lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel\x3d texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance \x3d lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *\x3d PI;\n\t\t#endif\n\t\tirradiance +\x3d lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) \x26\x26 defined( STANDARD ) \x26\x26 defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance +\x3d getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) \x26\x26 defined( RE_IndirectSpecular )\n\tradiance +\x3d getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance +\x3d getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",
lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) \x26\x26 defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT \x3d vIsPerspective \x3d\x3d 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) \x26\x26 defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth \x3d 1.0 + gl_Position.w;\n\t\tvIsPerspective \x3d float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z \x3d log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *\x3d gl_Position.w;\n\t\t}\n\t#endif\n#endif",
map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor \x3d texture2D( map, vUv );\n\ttexelColor \x3d mapTexelToLinear( texelColor );\n\tdiffuseColor *\x3d texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv \x3d ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel \x3d texture2D( map, uv );\n\tdiffuseColor *\x3d mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *\x3d texture2D( alphaMap, uv ).g;\n#endif",
map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor \x3d metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness \x3d texture2D( metalnessMap, vUv );\n\tmetalnessFactor *\x3d texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *\x3d morphTargetBaseInfluence;\n\tobjectNormal +\x3d morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal +\x3d morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal +\x3d morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal +\x3d morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *\x3d morphTargetBaseInfluence;\n\ttransformed +\x3d morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed +\x3d morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed +\x3d morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed +\x3d morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed +\x3d morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed +\x3d morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed +\x3d morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed +\x3d morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx \x3d vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy \x3d vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal \x3d normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal \x3d normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal \x3d normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent \x3d normalize( vTangent );\n\t\tvec3 bitangent \x3d normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent \x3d tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent \x3d bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN \x3d mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal \x3d normal;",
normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal \x3d texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal \x3d - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal \x3d normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal \x3d normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN \x3d texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *\x3d normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal \x3d normalize( vTBN * mapN );\n\t#else\n\t\tnormal \x3d perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal \x3d perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) \x26\x26 ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 \x3d vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 \x3d vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 \x3d dFdx( vUv.st );\n\t\tvec2 st1 \x3d dFdy( vUv.st );\n\t\tfloat scale \x3d sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S \x3d normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T \x3d normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N \x3d normalize( surf_norm );\n\t\tmat3 tsn \x3d mat3( S, T, N );\n\t\tmapN.xy *\x3d ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",
clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal \x3d geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN \x3d texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *\x3d clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal \x3d normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal \x3d perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",
clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale \x3d 256. / 255.;const float UnpackDownscale \x3d 255. / 256.;\nconst vec3 PackFactors \x3d vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors \x3d UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 \x3d 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r \x3d vec4( fract( v * PackFactors ), v );\n\tr.yzw -\x3d r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r \x3d vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *\x3d gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition \x3d vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition \x3d instanceMatrix * mvPosition;\n#endif\nmvPosition \x3d modelViewMatrix * mvPosition;\ngl_Position \x3d projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb \x3d dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position \x3d rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB \x3d vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB \x3d mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
roughnessmap_fragment:"float roughnessFactor \x3d roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness \x3d texture2D( roughnessMap, vUv );\n\troughnessFactor *\x3d texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS \x3e 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS \x3e 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS \x3e 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion \x3d 1.0;\n\t\tvec2 distribution \x3d texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow \x3d step( compare , distribution.x );\n\t\tif (hard_shadow !\x3d 1.0 ) {\n\t\t\tfloat distance \x3d compare - distribution.x ;\n\t\t\tfloat variance \x3d max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability \x3d variance / (variance + distance * distance );\t\t\tsoftness_probability \x3d clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion \x3d clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow \x3d 1.0;\n\t\tshadowCoord.xyz /\x3d shadowCoord.w;\n\t\tshadowCoord.z +\x3d shadowBias;\n\t\tbvec4 inFrustumVec \x3d bvec4 ( shadowCoord.x \x3e\x3d 0.0, shadowCoord.x \x3c\x3d 1.0, shadowCoord.y \x3e\x3d 0.0, shadowCoord.y \x3c\x3d 1.0 );\n\t\tbool inFrustum \x3d all( inFrustumVec );\n\t\tbvec2 frustumTestVec \x3d bvec2( inFrustum, shadowCoord.z \x3c\x3d 1.0 );\n\t\tbool frustumTest \x3d all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize \x3d vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 \x3d - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 \x3d - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 \x3d + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 \x3d + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 \x3d dx0 / 2.0;\n\t\t\tfloat dy2 \x3d dy0 / 2.0;\n\t\t\tfloat dx3 \x3d dx1 / 2.0;\n\t\t\tfloat dy3 \x3d dy1 / 2.0;\n\t\t\tshadow \x3d (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize \x3d vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx \x3d texelSize.x;\n\t\t\tfloat dy \x3d texelSize.y;\n\t\t\tvec2 uv \x3d shadowCoord.xy;\n\t\t\tvec2 f \x3d fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -\x3d f * texelSize;\n\t\t\tshadow \x3d (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow \x3d VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow \x3d texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV \x3d abs( v );\n\t\tfloat scaleToCube \x3d 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *\x3d scaleToCube;\n\t\tv *\x3d scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar \x3d v.xy;\n\t\tfloat almostATexel \x3d 1.5 * texelSizeY;\n\t\tfloat almostOne \x3d 1.0 - almostATexel;\n\t\tif ( absV.z \x3e\x3d almostOne ) {\n\t\t\tif ( v.z \x3e 0.0 )\n\t\t\t\tplanar.x \x3d 4.0 - v.x;\n\t\t} else if ( absV.x \x3e\x3d almostOne ) {\n\t\t\tfloat signX \x3d sign( v.x );\n\t\t\tplanar.x \x3d v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y \x3e\x3d almostOne ) {\n\t\t\tfloat signY \x3d sign( v.y );\n\t\t\tplanar.x \x3d v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y \x3d v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize \x3d vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition \x3d shadowCoord.xyz;\n\t\tfloat dp \x3d ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp +\x3d shadowBias;\n\t\tvec3 bd3D \x3d normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset \x3d vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS \x3e 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS \x3e 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS \x3e 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS \x3e 0 || NUM_SPOT_LIGHT_SHADOWS \x3e 0 || NUM_POINT_LIGHT_SHADOWS \x3e 0\n\t\tvec3 shadowWorldNormal \x3d inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS \x3e 0\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition \x3d worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] \x3d directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS \x3e 0\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition \x3d worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] \x3d spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS \x3e 0\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition \x3d worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] \x3d pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",
shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow \x3d 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS \x3e 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight \x3d directionalLightShadows[ i ];\n\t\tshadow *\x3d receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS \x3e 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight \x3d spotLightShadows[ i ];\n\t\tshadow *\x3d receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS \x3e 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i \x3d 0; i \x3c NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight \x3d pointLightShadows[ i ];\n\t\tshadow *\x3d receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX \x3d getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY \x3d getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ \x3d getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW \x3d getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j \x3d i * 4.0;\n\t\t\tfloat x \x3d mod( j, float( boneTextureSize ) );\n\t\t\tfloat y \x3d floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx \x3d 1.0 / float( boneTextureSize );\n\t\t\tfloat dy \x3d 1.0 / float( boneTextureSize );\n\t\t\ty \x3d dy * ( y + 0.5 );\n\t\t\tvec4 v1 \x3d texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 \x3d texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 \x3d texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 \x3d texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone \x3d mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone \x3d boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex \x3d bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned \x3d vec4( 0.0 );\n\tskinned +\x3d boneMatX * skinVertex * skinWeight.x;\n\tskinned +\x3d boneMatY * skinVertex * skinWeight.y;\n\tskinned +\x3d boneMatZ * skinVertex * skinWeight.z;\n\tskinned +\x3d boneMatW * skinVertex * skinWeight.w;\n\ttransformed \x3d ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix \x3d mat4( 0.0 );\n\tskinMatrix +\x3d skinWeight.x * boneMatX;\n\tskinMatrix +\x3d skinWeight.y * boneMatY;\n\tskinMatrix +\x3d skinWeight.z * boneMatZ;\n\tskinMatrix +\x3d skinWeight.w * boneMatW;\n\tskinMatrix  \x3d bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal \x3d vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent \x3d vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular \x3d texture2D( specularMap, vUv );\n\tspecularStrength \x3d texelSpecular.r;\n#else\n\tspecularStrength \x3d 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb \x3d toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *\x3d toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *\x3d toneMappingExposure;\n\tcolor \x3d max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a \x3d v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b \x3d v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat \x3d mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat \x3d mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *\x3d toneMappingExposure / 0.6;\n\tcolor \x3d ACESInputMat * color;\n\tcolor \x3d RRTAndODTFit( color );\n\tcolor \x3d ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
uv_pars_fragment:"#if ( defined( USE_UV ) \x26\x26 ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv \x3d ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 \x3d ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition \x3d vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition \x3d instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition \x3d modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor \x3d texture2D( t2D, vUv );\n\tgl_FragColor \x3d mapTexelToLinear( texColor );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n}",
background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv \x3d ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position \x3d vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include \x3cenvmap_common_pars_fragment\x3e\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include \x3ccube_uv_reflection_fragment\x3e\nvoid main() {\n\tvec3 vReflect \x3d vWorldDirection;\n\t#include \x3cenvmap_fragment\x3e\n\tgl_FragColor \x3d envColor;\n\tgl_FragColor.a *\x3d opacity;\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n}",
cube_vert:"varying vec3 vWorldDirection;\n#include \x3ccommon\x3e\nvoid main() {\n\tvWorldDirection \x3d transformDirection( position, modelMatrix );\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\tgl_Position.z \x3d gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING \x3d\x3d 3200\n\tuniform float opacity;\n#endif\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( 1.0 );\n\t#if DEPTH_PACKING \x3d\x3d 3200\n\t\tdiffuseColor.a \x3d opacity;\n\t#endif\n\t#include \x3cmap_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3clogdepthbuf_fragment\x3e\n\tfloat fragCoordZ \x3d 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING \x3d\x3d 3200\n\t\tgl_FragColor \x3d vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING \x3d\x3d 3201\n\t\tgl_FragColor \x3d packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
depth_vert:"#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include \x3cbeginnormal_vertex\x3e\n\t\t#include \x3cmorphnormal_vertex\x3e\n\t\t#include \x3cskinnormal_vertex\x3e\n\t#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvHighPrecisionZW \x3d gl_Position.zw;\n}",
distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main () {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( 1.0 );\n\t#include \x3cmap_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\tfloat dist \x3d length( vWorldPosition - referencePosition );\n\tdist \x3d ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist \x3d saturate( dist );\n\tgl_FragColor \x3d packDepthToRGBA( dist );\n}",
distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include \x3cbeginnormal_vertex\x3e\n\t\t#include \x3cmorphnormal_vertex\x3e\n\t\t#include \x3cskinnormal_vertex\x3e\n\t#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvWorldPosition \x3d worldPosition.xyz;\n}",
equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include \x3ccommon\x3e\nvoid main() {\n\tvec3 direction \x3d normalize( vWorldDirection );\n\tvec2 sampleUV \x3d equirectUv( direction );\n\tvec4 texColor \x3d texture2D( tEquirect, sampleUV );\n\tgl_FragColor \x3d mapTexelToLinear( texColor );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include \x3ccommon\x3e\nvoid main() {\n\tvWorldDirection \x3d transformDirection( position, modelMatrix );\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n}",
linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tif ( mod( vLineDistance, totalSize ) \x3e dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight \x3d vec3( 0.0 );\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\toutgoingLight \x3d diffuseColor.rgb;\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n}",
linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\tvLineDistance \x3d scale * lineDistance;\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cuv2_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cenvmap_common_pars_fragment\x3e\n#include \x3cenvmap_pars_fragment\x3e\n#include \x3ccube_uv_reflection_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cspecularmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3cspecularmap_fragment\x3e\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel\x3d texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse +\x3d lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse +\x3d vec3( 1.0 );\n\t#endif\n\t#include \x3caomap_fragment\x3e\n\treflectedLight.indirectDiffuse *\x3d diffuseColor.rgb;\n\tvec3 outgoingLight \x3d reflectedLight.indirectDiffuse;\n\t#include \x3cenvmap_fragment\x3e\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshbasic_vert:"#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cuv2_pars_vertex\x3e\n#include \x3cenvmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cuv2_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#ifdef USE_ENVMAP\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cenvmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cuv2_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cemissivemap_pars_fragment\x3e\n#include \x3cenvmap_common_pars_fragment\x3e\n#include \x3cenvmap_pars_fragment\x3e\n#include \x3ccube_uv_reflection_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cshadowmask_pars_fragment\x3e\n#include \x3cspecularmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance \x3d emissive;\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3cspecularmap_fragment\x3e\n\t#include \x3cemissivemap_fragment\x3e\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse +\x3d ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse +\x3d vIndirectFront;\n\t#endif\n\t#include \x3clightmap_fragment\x3e\n\treflectedLight.indirectDiffuse *\x3d BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse \x3d ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse \x3d vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *\x3d BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include \x3caomap_fragment\x3e\n\tvec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include \x3cenvmap_fragment\x3e\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cuv2_pars_vertex\x3e\n#include \x3cenvmap_pars_vertex\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cuv2_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cenvmap_vertex\x3e\n\t#include \x3clights_lambert_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\tvec3 viewDir \x3d normalize( vViewPosition );\n\tvec3 x \x3d normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y \x3d cross( viewDir, x );\n\tvec2 uv \x3d vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor \x3d texture2D( matcap, uv );\n\t\tmatcapColor \x3d matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor \x3d vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight \x3d diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#ifndef FLAT_SHADED\n\t\tvNormal \x3d normalize( transformedNormal );\n\t#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n}",
meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cuv2_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cemissivemap_pars_fragment\x3e\n#include \x3cgradientmap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3clights_toon_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance \x3d emissive;\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\t#include \x3cemissivemap_fragment\x3e\n\t#include \x3clights_toon_fragment\x3e\n\t#include \x3clights_fragment_begin\x3e\n\t#include \x3clights_fragment_maps\x3e\n\t#include \x3clights_fragment_end\x3e\n\t#include \x3caomap_fragment\x3e\n\tvec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cuv2_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cuv2_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n#ifndef FLAT_SHADED\n\tvNormal \x3d normalize( transformedNormal );\n#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cuv2_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cemissivemap_pars_fragment\x3e\n#include \x3cenvmap_common_pars_fragment\x3e\n#include \x3cenvmap_pars_fragment\x3e\n#include \x3ccube_uv_reflection_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3clights_phong_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3cspecularmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance \x3d emissive;\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3cspecularmap_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\t#include \x3cemissivemap_fragment\x3e\n\t#include \x3clights_phong_fragment\x3e\n\t#include \x3clights_fragment_begin\x3e\n\t#include \x3clights_fragment_maps\x3e\n\t#include \x3clights_fragment_end\x3e\n\t#include \x3caomap_fragment\x3e\n\tvec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include \x3cenvmap_fragment\x3e\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cuv2_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cenvmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cuv2_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n#ifndef FLAT_SHADED\n\tvNormal \x3d normalize( transformedNormal );\n#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cenvmap_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cdithering_pars_fragment\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cuv2_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3caomap_pars_fragment\x3e\n#include \x3clightmap_pars_fragment\x3e\n#include \x3cemissivemap_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3ccube_uv_reflection_fragment\x3e\n#include \x3cenvmap_common_pars_fragment\x3e\n#include \x3cenvmap_physical_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3clights_physical_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3cclearcoat_pars_fragment\x3e\n#include \x3croughnessmap_pars_fragment\x3e\n#include \x3cmetalnessmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance \x3d emissive;\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\t#include \x3croughnessmap_fragment\x3e\n\t#include \x3cmetalnessmap_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\t#include \x3cclearcoat_normal_fragment_begin\x3e\n\t#include \x3cclearcoat_normal_fragment_maps\x3e\n\t#include \x3cemissivemap_fragment\x3e\n\t#include \x3clights_physical_fragment\x3e\n\t#include \x3clights_fragment_begin\x3e\n\t#include \x3clights_fragment_maps\x3e\n\t#include \x3clights_fragment_end\x3e\n\t#include \x3caomap_fragment\x3e\n\tvec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *\x3d saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n\t#include \x3cdithering_fragment\x3e\n}",
meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cuv2_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cuv2_vertex\x3e\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n#ifndef FLAT_SHADED\n\tvNormal \x3d normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent \x3d normalize( transformedTangent );\n\t\tvBitangent \x3d normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\tvViewPosition \x3d - mvPosition.xyz;\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include \x3cpacking\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cbumpmap_pars_fragment\x3e\n#include \x3cnormalmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cnormal_fragment_begin\x3e\n\t#include \x3cnormal_fragment_maps\x3e\n\tgl_FragColor \x3d vec4( packNormalToRGB( normal ), opacity );\n}",
normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n#ifndef FLAT_SHADED\n\tvNormal \x3d normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent \x3d normalize( transformedTangent );\n\t\tvBitangent \x3d normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition \x3d - mvPosition.xyz;\n#endif\n}",
points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_fragment\x3e\n#include \x3cmap_particle_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec3 outgoingLight \x3d vec3( 0.0 );\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_particle_fragment\x3e\n\t#include \x3ccolor_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\toutgoingLight \x3d diffuseColor.rgb;\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n\t#include \x3cpremultiplied_alpha_fragment\x3e\n}",
points_vert:"uniform float size;\nuniform float scale;\n#include \x3ccommon\x3e\n#include \x3ccolor_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3ccolor_vertex\x3e\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\tgl_PointSize \x3d size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective \x3d isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *\x3d ( scale / - mvPosition.z );\n\t#endif\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3cshadowmask_pars_fragment\x3e\nvoid main() {\n\tgl_FragColor \x3d vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n}",shadow_vert:"#include \x3ccommon\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\nvoid main() {\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cbeginnormal_vertex\x3e\n\t#include \x3cmorphnormal_vertex\x3e\n\t#include \x3cskinbase_vertex\x3e\n\t#include \x3cskinnormal_vertex\x3e\n\t#include \x3cdefaultnormal_vertex\x3e\n\t#include \x3cshadowmap_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}",
sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include \x3ccommon\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\nvoid main() {\n\t#include \x3cclipping_planes_fragment\x3e\n\tvec3 outgoingLight \x3d vec3( 0.0 );\n\tvec4 diffuseColor \x3d vec4( diffuse, opacity );\n\t#include \x3clogdepthbuf_fragment\x3e\n\t#include \x3cmap_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\toutgoingLight \x3d diffuseColor.rgb;\n\tgl_FragColor \x3d vec4( outgoingLight, diffuseColor.a );\n\t#include \x3ctonemapping_fragment\x3e\n\t#include \x3cencodings_fragment\x3e\n\t#include \x3cfog_fragment\x3e\n}",
sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\nvoid main() {\n\t#include \x3cuv_vertex\x3e\n\tvec4 mvPosition \x3d modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x \x3d length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y \x3d length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective \x3d isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *\x3d - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition \x3d ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x \x3d cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y \x3d sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy +\x3d rotatedPosition;\n\tgl_Position \x3d projectionMatrix * mvPosition;\n\t#include \x3clogdepthbuf_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\t#include \x3cfog_vertex\x3e\n}"};
exports.ShaderChunk=ShaderChunk;var ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),
vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},
standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,
UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,
fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,
fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,
fragmentShader:ShaderChunk.background_frag},cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1E3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,
fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};exports.ShaderLib=ShaderLib;ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},
sheen:{value:new Color(0)},transparency:{value:0}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};CubeTexture.prototype=Object.create(Texture.prototype);CubeTexture.prototype.constructor=CubeTexture;CubeTexture.prototype.isCubeTexture=!0;Object.defineProperty(CubeTexture.prototype,"images",{get:function(){return this.image},set:function(value){this.image=value}});DataTexture2DArray.prototype=Object.create(Texture.prototype);DataTexture2DArray.prototype.constructor=
DataTexture2DArray;DataTexture2DArray.prototype.isDataTexture2DArray=!0;DataTexture3D.prototype=Object.create(Texture.prototype);DataTexture3D.prototype.constructor=DataTexture3D;DataTexture3D.prototype.isDataTexture3D=!0;var emptyTexture=new Texture,emptyTexture2dArray=new DataTexture2DArray,emptyTexture3d=new DataTexture3D,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);PureArrayUniform.prototype.updateCache=
function(data){var cache=this.cache;data instanceof Float32Array&&cache.length!==data.length&&(this.cache=new Float32Array(data.length));copyArray(cache,data)};StructuredUniform.prototype.setValue=function(gl,value,textures){for(var seq=this.seq,_i115=0,n=seq.length;_i115!==n;++_i115){var u=seq[_i115];u.setValue(gl,value[u.id],textures)}};var RePathPart=/([\w\d_]+)(\])?(\[|\.)?/g;WebGLUniforms.prototype.setValue=function(gl,name,value,textures){name=this.map[name];void 0!==name&&name.setValue(gl,
value,textures)};WebGLUniforms.prototype.setOptional=function(gl,object,name){object=object[name];void 0!==object&&this.setValue(gl,name,object)};WebGLUniforms.upload=function(gl,seq,values,textures){for(var _i117=0,n=seq.length;_i117!==n;++_i117){var u=seq[_i117],v=values[u.id];!1!==v.needsUpdate&&u.setValue(gl,v.value,textures)}};WebGLUniforms.seqWithValue=function(seq,values){for(var r=[],_i118=0,n=seq.length;_i118!==n;++_i118){var u=seq[_i118];u.id in values&&r.push(u)}return r};var programIdCount=
0,includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm,deprecatedUnrollLoopPattern=/#pragma unroll_loop[\s]+?for \( int i = (\d+); i < (\d+); i \+\+ \) \{([\s\S]+?)(?=\})\}/g,unrollLoopPattern=/#pragma unroll_loop_start[\s]+?for \( int i = (\d+); i < (\d+); i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g,nextVersion=0;MeshDepthMaterial.prototype=Object.create(Material.prototype);MeshDepthMaterial.prototype.constructor=MeshDepthMaterial;MeshDepthMaterial.prototype.isMeshDepthMaterial=!0;
MeshDepthMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.depthPacking=source.depthPacking;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;return this};MeshDistanceMaterial.prototype=
Object.create(Material.prototype);MeshDistanceMaterial.prototype.constructor=MeshDistanceMaterial;MeshDistanceMaterial.prototype.isMeshDistanceMaterial=!0;MeshDistanceMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.referencePosition.copy(source.referencePosition);this.nearDistance=source.nearDistance;this.farDistance=source.farDistance;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=
source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;return this};var vsm_frag="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include \x3cpacking\x3e\nvoid main() {\n  float mean \x3d 0.0;\n  float squared_mean \x3d 0.0;\n\tfloat depth \x3d unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i \x3d -1.0; i \x3c 1.0 ; i +\x3d SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution \x3d unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean +\x3d distribution.x;\n      squared_mean +\x3d distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth \x3d unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean +\x3d depth;\n      squared_mean +\x3d depth * depth;\n    #endif\n  }\n  mean \x3d mean * HALF_SAMPLE_RATE;\n  squared_mean \x3d squared_mean * HALF_SAMPLE_RATE;\n  float std_dev \x3d sqrt( squared_mean - mean * mean );\n  gl_FragColor \x3d pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",
vsm_vert="void main() {\n\tgl_Position \x3d vec4( position, 1.0 );\n}";ArrayCamera.prototype=Object.assign(Object.create(PerspectiveCamera.prototype),{constructor:ArrayCamera,isArrayCamera:!0});Group.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Group,isGroup:!0});Object.assign(WebXRController.prototype,{constructor:WebXRController,getTargetRaySpace:function(){null===this._targetRay&&(this._targetRay=new Group,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1);
return this._targetRay},getGripSpace:function(){null===this._grip&&(this._grip=new Group,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1);return this._grip},dispatchEvent:function(event){null!==this._targetRay&&this._targetRay.dispatchEvent(event);null!==this._grip&&this._grip.dispatchEvent(event);return this},disconnect:function(inputSource){this.dispatchEvent({type:"disconnected",data:inputSource});null!==this._targetRay&&(this._targetRay.visible=!1);null!==this._grip&&(this._grip.visible=
!1);return this},update:function(inputSource,frame,referenceSpace){var inputPose=null,gripPose=null,targetRay=this._targetRay,grip=this._grip;inputSource&&(null!==targetRay&&(inputPose=frame.getPose(inputSource.targetRaySpace,referenceSpace),null!==inputPose&&(targetRay.matrix.fromArray(inputPose.transform.matrix),targetRay.matrix.decompose(targetRay.position,targetRay.rotation,targetRay.scale))),null!==grip&&inputSource.gripSpace&&(gripPose=frame.getPose(inputSource.gripSpace,referenceSpace),null!==
gripPose&&(grip.matrix.fromArray(gripPose.transform.matrix),grip.matrix.decompose(grip.position,grip.rotation,grip.scale))));null!==targetRay&&(targetRay.visible=null!==inputPose);null!==grip&&(grip.visible=null!==gripPose);return this}});Object.assign(WebXRManager.prototype,EventDispatcher.prototype);WebGL1Renderer.prototype=Object.assign(Object.create(WebGLRenderer.prototype),{constructor:WebGL1Renderer,isWebGL1Renderer:!0});Object.assign(FogExp2.prototype,{isFogExp2:!0,clone:function(){return new FogExp2(this.color,
this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}});Object.assign(Fog.prototype,{isFog:!0,clone:function(){return new Fog(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}});Object.defineProperty(InterleavedBuffer.prototype,"needsUpdate",{set:function(value){!0===value&&this.version++}});Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},
setUsage:function(value){this.usage=value;return this},copy:function(source){this.array=new source.array.constructor(source.array);this.count=source.count;this.stride=source.stride;this.usage=source.usage;return this},copyAt:function(index1,attribute,index2){index1*=this.stride;index2*=attribute.stride;for(var _i155=0,l=this.stride;_i155<l;_i155++)this.array[index1+_i155]=attribute.array[index2+_i155];return this},set:function(value,offset){void 0===offset&&(offset=0);this.array.set(value,offset);
return this},clone:function(data){void 0===data.arrayBuffers&&(data.arrayBuffers={});void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=MathUtils.generateUUID());void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);data=new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);data=new InterleavedBuffer(data,this.stride);data.setUsage(this.usage);return data},onUpload:function(callback){this.onUploadCallback=
callback;return this},toJSON:function(data){void 0===data.arrayBuffers&&(data.arrayBuffers={});void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=MathUtils.generateUUID());void 0===data.arrayBuffers[this.array.buffer._uuid]&&(data.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer)));return{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});var _vector$6=new Vector3;Object.defineProperties(InterleavedBufferAttribute.prototype,
{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}});Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(m){for(var _i156=0,l=this.data.count;_i156<l;_i156++)_vector$6.x=this.getX(_i156),_vector$6.y=this.getY(_i156),_vector$6.z=this.getZ(_i156),_vector$6.applyMatrix4(m),this.setXYZ(_i156,_vector$6.x,_vector$6.y,_vector$6.z);return this},setX:function(index,x){this.data.array[index*this.data.stride+this.offset]=
x;return this},setY:function(index,y){this.data.array[index*this.data.stride+this.offset+1]=y;return this},setZ:function(index,z){this.data.array[index*this.data.stride+this.offset+2]=z;return this},setW:function(index,w){this.data.array[index*this.data.stride+this.offset+3]=w;return this},getX:function(index){return this.data.array[index*this.data.stride+this.offset]},getY:function(index){return this.data.array[index*this.data.stride+this.offset+1]},getZ:function(index){return this.data.array[index*
this.data.stride+this.offset+2]},getW:function(index){return this.data.array[index*this.data.stride+this.offset+3]},setXY:function(index,x,y){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;return this},setXYZ:function(index,x,y,z){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;return this},setXYZW:function(index,x,y,z,w){index=index*this.data.stride+this.offset;this.data.array[index+
0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;this.data.array[index+3]=w;return this},clone:function(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");data=[];for(var _i157=0;_i157<this.count;_i157++)for(var index=_i157*this.data.stride+this.offset,j=0;j<this.itemSize;j++)data.push(this.data.array[index+j]);return new BufferAttribute(new this.array.constructor(data),this.itemSize,this.normalized)}void 0===
data.interleavedBuffers&&(data.interleavedBuffers={});void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.clone(data));return new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(data){if(void 0===data){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");data=[];for(var _i158=0;_i158<this.count;_i158++)for(var index=
_i158*this.data.stride+this.offset,j=0;j<this.itemSize;j++)data.push(this.data.array[index+j]);return{itemSize:this.itemSize,type:this.array.constructor.name,array:data,normalized:this.normalized}}void 0===data.interleavedBuffers&&(data.interleavedBuffers={});void 0===data.interleavedBuffers[this.data.uuid]&&(data.interleavedBuffers[this.data.uuid]=this.data.toJSON(data));return{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});
SpriteMaterial.prototype=Object.create(Material.prototype);SpriteMaterial.prototype.constructor=SpriteMaterial;SpriteMaterial.prototype.isSpriteMaterial=!0;SpriteMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.rotation=source.rotation;this.sizeAttenuation=source.sizeAttenuation;return this};var _geometry,_intersectPoint=new Vector3,_worldScale=new Vector3,_mvPosition=new Vector3,
_alignedPosition=new Vector2,_rotatedPosition=new Vector2,_viewWorldMatrix=new Matrix4,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_uvA$1=new Vector2,_uvB$1=new Vector2,_uvC$1=new Vector2;Sprite.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Sprite,isSprite:!0,raycast:function(raycaster,intersects){null===raycaster.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.');_worldScale.setFromMatrixScale(this.matrixWorld);
_viewWorldMatrix.copy(raycaster.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse,this.matrixWorld);_mvPosition.setFromMatrixPosition(this.modelViewMatrix);raycaster.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_worldScale.multiplyScalar(-_mvPosition.z);var rotation=this.material.rotation;if(0!==rotation){var cos=Math.cos(rotation);var sin=Math.sin(rotation)}rotation=this.center;transformVertex(_vA$1.set(-.5,-.5,0),_mvPosition,rotation,
_worldScale,sin,cos);transformVertex(_vB$1.set(.5,-.5,0),_mvPosition,rotation,_worldScale,sin,cos);transformVertex(_vC$1.set(.5,.5,0),_mvPosition,rotation,_worldScale,sin,cos);_uvA$1.set(0,0);_uvB$1.set(1,0);_uvC$1.set(1,1);var intersect=raycaster.ray.intersectTriangle(_vA$1,_vB$1,_vC$1,!1,_intersectPoint);if(null===intersect&&(transformVertex(_vB$1.set(-.5,.5,0),_mvPosition,rotation,_worldScale,sin,cos),_uvB$1.set(0,1),intersect=raycaster.ray.intersectTriangle(_vA$1,_vC$1,_vB$1,!1,_intersectPoint),
null===intersect))return;sin=raycaster.ray.origin.distanceTo(_intersectPoint);sin<raycaster.near||sin>raycaster.far||intersects.push({distance:sin,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2),face:null,object:this})},copy:function(source){Object3D.prototype.copy.call(this,source);void 0!==source.center&&this.center.copy(source.center);this.material=source.material;return this}});var _v1$4=new Vector3,_v2$2=new Vector3;LOD.prototype=
Object.assign(Object.create(Object3D.prototype),{constructor:LOD,isLOD:!0,copy:function(source){Object3D.prototype.copy.call(this,source,!1);for(var levels=source.levels,_i159=0,l=levels.length;_i159<l;_i159++){var level=levels[_i159];this.addLevel(level.object.clone(),level.distance)}this.autoUpdate=source.autoUpdate;return this},addLevel:function(object,distance){void 0===distance&&(distance=0);distance=Math.abs(distance);var levels=this.levels,l;for(l=0;l<levels.length&&!(distance<levels[l].distance);l++);
levels.splice(l,0,{distance:distance,object:object});this.add(object);return this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(distance){var levels=this.levels;if(0<levels.length){var l;var _i160=1;for(l=levels.length;_i160<l&&!(distance<levels[_i160].distance);_i160++);return levels[_i160-1].object}return null},raycast:function(raycaster,intersects){if(0<this.levels.length){_v1$4.setFromMatrixPosition(this.matrixWorld);var distance=raycaster.ray.origin.distanceTo(_v1$4);
this.getObjectForDistance(distance).raycast(raycaster,intersects)}},update:function(camera){var levels=this.levels;if(1<levels.length){_v1$4.setFromMatrixPosition(camera.matrixWorld);_v2$2.setFromMatrixPosition(this.matrixWorld);camera=_v1$4.distanceTo(_v2$2)/camera.zoom;levels[0].object.visible=!0;var l;var _i161=1;for(l=levels.length;_i161<l;_i161++)if(camera>=levels[_i161].distance)levels[_i161-1].object.visible=!1,levels[_i161].object.visible=!0;else break;for(this._currentLevel=_i161-1;_i161<
l;_i161++)levels[_i161].object.visible=!1}},toJSON:function(meta){meta=Object3D.prototype.toJSON.call(this,meta);!1===this.autoUpdate&&(meta.object.autoUpdate=!1);meta.object.levels=[];for(var levels=this.levels,_i162=0,l=levels.length;_i162<l;_i162++){var level=levels[_i162];meta.object.levels.push({object:level.object.uuid,distance:level.distance})}return meta}});SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:!0,copy:function(source){Mesh.prototype.copy.call(this,
source);this.bindMode=source.bindMode;this.bindMatrix.copy(source.bindMatrix);this.bindMatrixInverse.copy(source.bindMatrixInverse);this.skeleton=source.skeleton;return this},bind:function(skeleton,bindMatrix){this.skeleton=skeleton;void 0===bindMatrix&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),bindMatrix=this.matrixWorld);this.bindMatrix.copy(bindMatrix);this.bindMatrixInverse.getInverse(bindMatrix)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var vector=
new Vector4,skinWeight=this.geometry.attributes.skinWeight,_i163=0,l=skinWeight.count;_i163<l;_i163++){vector.x=skinWeight.getX(_i163);vector.y=skinWeight.getY(_i163);vector.z=skinWeight.getZ(_i163);vector.w=skinWeight.getW(_i163);var scale=1/vector.manhattanLength();Infinity!==scale?vector.multiplyScalar(scale):vector.set(1,0,0,0);skinWeight.setXYZW(_i163,vector.x,vector.y,vector.z,vector.w)}},updateMatrixWorld:function(force){Mesh.prototype.updateMatrixWorld.call(this,force);"attached"===this.bindMode?
this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){var basePosition=new Vector3,skinIndex=new Vector4,skinWeight=new Vector4,vector=new Vector3,matrix=new Matrix4;return function(index,target){var skeleton=this.skeleton,geometry=this.geometry;skinIndex.fromBufferAttribute(geometry.attributes.skinIndex,index);skinWeight.fromBufferAttribute(geometry.attributes.skinWeight,
index);basePosition.fromBufferAttribute(geometry.attributes.position,index).applyMatrix4(this.bindMatrix);target.set(0,0,0);for(index=0;4>index;index++)if(geometry=skinWeight.getComponent(index),0!==geometry){var boneIndex=skinIndex.getComponent(index);matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld,skeleton.boneInverses[boneIndex]);target.addScaledVector(vector.copy(basePosition).applyMatrix4(matrix),geometry)}return target.applyMatrix4(this.bindMatrixInverse)}}()});var _offsetMatrix=
new Matrix4,_identityMatrix=new Matrix4;Object.assign(Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var _i166=0,il=this.bones.length;_i166<il;_i166++){var inverse=new Matrix4;this.bones[_i166]&&inverse.getInverse(this.bones[_i166].matrixWorld);this.boneInverses.push(inverse)}},pose:function(){for(var _i167=0,il=this.bones.length;_i167<il;_i167++){var bone=this.bones[_i167];bone&&bone.matrixWorld.getInverse(this.boneInverses[_i167])}_i167=0;for(il=this.bones.length;_i167<
il;_i167++)if(bone=this.bones[_i167])bone.parent&&bone.parent.isBone?(bone.matrix.getInverse(bone.parent.matrixWorld),bone.matrix.multiply(bone.matrixWorld)):bone.matrix.copy(bone.matrixWorld),bone.matrix.decompose(bone.position,bone.quaternion,bone.scale)},update:function(){for(var bones=this.bones,boneInverses=this.boneInverses,boneMatrices=this.boneMatrices,boneTexture=this.boneTexture,_i169=0,il=bones.length;_i169<il;_i169++)_offsetMatrix.multiplyMatrices(bones[_i169]?bones[_i169].matrixWorld:
_identityMatrix,boneInverses[_i169]),_offsetMatrix.toArray(boneMatrices,16*_i169);void 0!==boneTexture&&(boneTexture.needsUpdate=!0)},clone:function(){return new Skeleton(this.bones,this.boneInverses)},getBoneByName:function(name){for(var _i170=0,il=this.bones.length;_i170<il;_i170++){var bone=this.bones[_i170];if(bone.name===name)return bone}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}});Bone.prototype=Object.assign(Object.create(Object3D.prototype),
{constructor:Bone,isBone:!0});var _instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceIntersects=[],_mesh=new Mesh;InstancedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:InstancedMesh,isInstancedMesh:!0,copy:function(source){Mesh.prototype.copy.call(this,source);this.instanceMatrix.copy(source.instanceMatrix);this.count=source.count;return this},getMatrixAt:function(index,matrix){matrix.fromArray(this.instanceMatrix.array,16*index)},raycast:function(raycaster,
intersects){var matrixWorld=this.matrixWorld,raycastTimes=this.count;_mesh.geometry=this.geometry;_mesh.material=this.material;if(void 0!==_mesh.material)for(var instanceId=0;instanceId<raycastTimes;instanceId++){this.getMatrixAt(instanceId,_instanceLocalMatrix);_instanceWorldMatrix.multiplyMatrices(matrixWorld,_instanceLocalMatrix);_mesh.matrixWorld=_instanceWorldMatrix;_mesh.raycast(raycaster,_instanceIntersects);for(var _i171=0,l=_instanceIntersects.length;_i171<l;_i171++){var intersect=_instanceIntersects[_i171];
intersect.instanceId=instanceId;intersect.object=this;intersects.push(intersect)}_instanceIntersects.length=0}},setMatrixAt:function(index,matrix){matrix.toArray(this.instanceMatrix.array,16*index)},updateMorphTargets:function(){}});LineBasicMaterial.prototype=Object.create(Material.prototype);LineBasicMaterial.prototype.constructor=LineBasicMaterial;LineBasicMaterial.prototype.isLineBasicMaterial=!0;LineBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);
this.linewidth=source.linewidth;this.linecap=source.linecap;this.linejoin=source.linejoin;this.morphTargets=source.morphTargets;return this};var _start=new Vector3,_end=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1=new Ray,_sphere$2=new Sphere;Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:!0,copy:function(source){Object3D.prototype.copy.call(this,source);this.material=source.material;this.geometry=source.geometry;return this},computeLineDistances:function(){var geometry=
this.geometry;if(geometry.isBufferGeometry)if(null===geometry.index){for(var positionAttribute=geometry.attributes.position,lineDistances=[0],_i172=1,l=positionAttribute.count;_i172<l;_i172++)_start.fromBufferAttribute(positionAttribute,_i172-1),_end.fromBufferAttribute(positionAttribute,_i172),lineDistances[_i172]=lineDistances[_i172-1],lineDistances[_i172]+=_start.distanceTo(_end);geometry.setAttribute("lineDistance",new Float32BufferAttribute(lineDistances,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
else if(geometry.isGeometry)for(positionAttribute=geometry.vertices,geometry=geometry.lineDistances,geometry[0]=0,lineDistances=1,_i172=positionAttribute.length;lineDistances<_i172;lineDistances++)geometry[lineDistances]=geometry[lineDistances-1],geometry[lineDistances]+=positionAttribute[lineDistances-1].distanceTo(positionAttribute[lineDistances]);return this},raycast:function(raycaster,intersects){var geometry=this.geometry,matrixWorld=this.matrixWorld,threshold=raycaster.params.Line.threshold;
null===geometry.boundingSphere&&geometry.computeBoundingSphere();_sphere$2.copy(geometry.boundingSphere);_sphere$2.applyMatrix4(matrixWorld);_sphere$2.radius+=threshold;if(!1!==raycaster.ray.intersectsSphere(_sphere$2)){_inverseMatrix$1.getInverse(matrixWorld);_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);matrixWorld=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);matrixWorld*=matrixWorld;var vStart=new Vector3,vEnd=new Vector3;threshold=new Vector3;var interRay=new Vector3,step=
this&&this.isLineSegments?2:1;if(geometry.isBufferGeometry){var index=geometry.index;geometry=geometry.attributes.position.array;if(null!==index){index=index.array;for(var _i174=0,l=index.length-1;_i174<l;_i174+=step){var b=index[_i174+1];vStart.fromArray(geometry,3*index[_i174]);vEnd.fromArray(geometry,3*b);_ray$1.distanceSqToSegment(vStart,vEnd,interRay,threshold)>matrixWorld||(interRay.applyMatrix4(this.matrixWorld),b=raycaster.ray.origin.distanceTo(interRay),b<raycaster.near||b>raycaster.far||
intersects.push({distance:b,point:threshold.clone().applyMatrix4(this.matrixWorld),index:_i174,face:null,faceIndex:null,object:this}))}}else for(index=0,_i174=geometry.length/3-1;index<_i174;index+=step)vStart.fromArray(geometry,3*index),vEnd.fromArray(geometry,3*index+3),_ray$1.distanceSqToSegment(vStart,vEnd,interRay,threshold)>matrixWorld||(interRay.applyMatrix4(this.matrixWorld),l=raycaster.ray.origin.distanceTo(interRay),l<raycaster.near||l>raycaster.far||intersects.push({distance:l,point:threshold.clone().applyMatrix4(this.matrixWorld),
index:index,face:null,faceIndex:null,object:this}))}else if(geometry.isGeometry)for(vStart=geometry.vertices,vEnd=vStart.length,geometry=0;geometry<vEnd-1;geometry+=step)_ray$1.distanceSqToSegment(vStart[geometry],vStart[geometry+1],interRay,threshold)>matrixWorld||(interRay.applyMatrix4(this.matrixWorld),index=raycaster.ray.origin.distanceTo(interRay),index<raycaster.near||index>raycaster.far||intersects.push({distance:index,point:threshold.clone().applyMatrix4(this.matrixWorld),index:geometry,face:null,
faceIndex:null,object:this}))}},updateMorphTargets:function(){var geometry=this.geometry;if(geometry.isBufferGeometry){geometry=geometry.morphAttributes;var keys=Object.keys(geometry);if(0<keys.length&&(geometry=geometry[keys[0]],void 0!==geometry)){this.morphTargetInfluences=[];this.morphTargetDictionary={};keys=0;for(var ml=geometry.length;keys<ml;keys++){var name=geometry[keys].name||String(keys);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=keys}}}else geometry=geometry.morphTargets,
void 0!==geometry&&0<geometry.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}});var _start$1=new Vector3,_end$1=new Vector3;LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:!0,computeLineDistances:function(){var geometry=this.geometry;if(geometry.isBufferGeometry)if(null===geometry.index){for(var positionAttribute=geometry.attributes.position,lineDistances=[],_i177=
0,l=positionAttribute.count;_i177<l;_i177+=2)_start$1.fromBufferAttribute(positionAttribute,_i177),_end$1.fromBufferAttribute(positionAttribute,_i177+1),lineDistances[_i177]=0===_i177?0:lineDistances[_i177-1],lineDistances[_i177+1]=lineDistances[_i177]+_start$1.distanceTo(_end$1);geometry.setAttribute("lineDistance",new Float32BufferAttribute(lineDistances,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(geometry.isGeometry)for(positionAttribute=
geometry.vertices,geometry=geometry.lineDistances,lineDistances=0,_i177=positionAttribute.length;lineDistances<_i177;lineDistances+=2)_start$1.copy(positionAttribute[lineDistances]),_end$1.copy(positionAttribute[lineDistances+1]),geometry[lineDistances]=0===lineDistances?0:geometry[lineDistances-1],geometry[lineDistances+1]=geometry[lineDistances]+_start$1.distanceTo(_end$1);return this}});LineLoop.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineLoop,isLineLoop:!0});PointsMaterial.prototype=
Object.create(Material.prototype);PointsMaterial.prototype.constructor=PointsMaterial;PointsMaterial.prototype.isPointsMaterial=!0;PointsMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.size=source.size;this.sizeAttenuation=source.sizeAttenuation;this.morphTargets=source.morphTargets;return this};var _inverseMatrix$2=new Matrix4,_ray$2=new Ray,_sphere$3=new Sphere,_position$1=new Vector3;
Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:!0,copy:function(source){Object3D.prototype.copy.call(this,source);this.material=source.material;this.geometry=source.geometry;return this},raycast:function(raycaster,intersects){var geometry=this.geometry,matrixWorld=this.matrixWorld,threshold=raycaster.params.Points.threshold;null===geometry.boundingSphere&&geometry.computeBoundingSphere();_sphere$3.copy(geometry.boundingSphere);_sphere$3.applyMatrix4(matrixWorld);
_sphere$3.radius+=threshold;if(!1!==raycaster.ray.intersectsSphere(_sphere$3))if(_inverseMatrix$2.getInverse(matrixWorld),_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2),threshold/=(this.scale.x+this.scale.y+this.scale.z)/3,threshold*=threshold,geometry.isBufferGeometry){var index=geometry.index;geometry=geometry.attributes.position.array;if(null!==index){index=index.array;for(var _i179=0,il=index.length;_i179<il;_i179++){var a=index[_i179];_position$1.fromArray(geometry,3*a);testPoint(_position$1,
a,threshold,matrixWorld,raycaster,intersects,this)}}else for(index=0,_i179=geometry.length/3;index<_i179;index++)_position$1.fromArray(geometry,3*index),testPoint(_position$1,index,threshold,matrixWorld,raycaster,intersects,this)}else for(geometry=geometry.vertices,index=0,_i179=geometry.length;index<_i179;index++)testPoint(geometry[index],index,threshold,matrixWorld,raycaster,intersects,this)},updateMorphTargets:function(){var geometry=this.geometry;if(geometry.isBufferGeometry){geometry=geometry.morphAttributes;
var keys=Object.keys(geometry);if(0<keys.length&&(geometry=geometry[keys[0]],void 0!==geometry)){this.morphTargetInfluences=[];this.morphTargetDictionary={};keys=0;for(var ml=geometry.length;keys<ml;keys++){var name=geometry[keys].name||String(keys);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=keys}}}else geometry=geometry.morphTargets,void 0!==geometry&&0<geometry.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}});
VideoTexture.prototype=Object.assign(Object.create(Texture.prototype),{constructor:VideoTexture,isVideoTexture:!0,update:function(){var video=this.image;video.readyState>=video.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});CompressedTexture.prototype=Object.create(Texture.prototype);CompressedTexture.prototype.constructor=CompressedTexture;CompressedTexture.prototype.isCompressedTexture=!0;CanvasTexture.prototype=Object.create(Texture.prototype);CanvasTexture.prototype.constructor=CanvasTexture;CanvasTexture.prototype.isCanvasTexture=
!0;DepthTexture.prototype=Object.create(Texture.prototype);DepthTexture.prototype.constructor=DepthTexture;DepthTexture.prototype.isDepthTexture=!0;WireframeGeometry.prototype=Object.create(BufferGeometry.prototype);WireframeGeometry.prototype.constructor=WireframeGeometry;ParametricGeometry.prototype=Object.create(Geometry.prototype);ParametricGeometry.prototype.constructor=ParametricGeometry;ParametricBufferGeometry.prototype=Object.create(BufferGeometry.prototype);ParametricBufferGeometry.prototype.constructor=
ParametricBufferGeometry;PolyhedronGeometry.prototype=Object.create(Geometry.prototype);PolyhedronGeometry.prototype.constructor=PolyhedronGeometry;PolyhedronBufferGeometry.prototype=Object.create(BufferGeometry.prototype);PolyhedronBufferGeometry.prototype.constructor=PolyhedronBufferGeometry;TetrahedronGeometry.prototype=Object.create(Geometry.prototype);TetrahedronGeometry.prototype.constructor=TetrahedronGeometry;TetrahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);
TetrahedronBufferGeometry.prototype.constructor=TetrahedronBufferGeometry;OctahedronGeometry.prototype=Object.create(Geometry.prototype);OctahedronGeometry.prototype.constructor=OctahedronGeometry;OctahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);OctahedronBufferGeometry.prototype.constructor=OctahedronBufferGeometry;IcosahedronGeometry.prototype=Object.create(Geometry.prototype);IcosahedronGeometry.prototype.constructor=IcosahedronGeometry;IcosahedronBufferGeometry.prototype=
Object.create(PolyhedronBufferGeometry.prototype);IcosahedronBufferGeometry.prototype.constructor=IcosahedronBufferGeometry;DodecahedronGeometry.prototype=Object.create(Geometry.prototype);DodecahedronGeometry.prototype.constructor=DodecahedronGeometry;DodecahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);DodecahedronBufferGeometry.prototype.constructor=DodecahedronBufferGeometry;TubeGeometry.prototype=Object.create(Geometry.prototype);TubeGeometry.prototype.constructor=
TubeGeometry;TubeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);TubeBufferGeometry.prototype.constructor=TubeBufferGeometry;TubeBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);data.path=this.parameters.path.toJSON();return data};TorusKnotGeometry.prototype=Object.create(Geometry.prototype);TorusKnotGeometry.prototype.constructor=TorusKnotGeometry;TorusKnotBufferGeometry.prototype=Object.create(BufferGeometry.prototype);TorusKnotBufferGeometry.prototype.constructor=
TorusKnotBufferGeometry;TorusGeometry.prototype=Object.create(Geometry.prototype);TorusGeometry.prototype.constructor=TorusGeometry;TorusBufferGeometry.prototype=Object.create(BufferGeometry.prototype);TorusBufferGeometry.prototype.constructor=TorusBufferGeometry;var Earcut={triangulate:function(data,holeIndices,dim$jscomp$0){dim$jscomp$0=dim$jscomp$0||2;var hasHoles=holeIndices&&holeIndices.length,outerLen=hasHoles?holeIndices[0]*dim$jscomp$0:data.length,outerNode=linkedList(data,0,outerLen,dim$jscomp$0,
!0),triangles=[];if(!outerNode||outerNode.next===outerNode.prev)return triangles;var maxX;if(hasHoles){var dim=dim$jscomp$0;hasHoles=[];var len;var x=0;for(len=holeIndices.length;x<len;x++){var start=holeIndices[x]*dim;var end=x<len-1?holeIndices[x+1]*dim:data.length;start=linkedList(data,start,end,dim,!1);start===start.next&&(start.steiner=!0);hasHoles.push(getLeftmost(start))}hasHoles.sort(compareX);for(x=0;x<hasHoles.length;x++){dim=hasHoles[x];holeIndices=outerNode;if(holeIndices=findHoleBridge(dim,
holeIndices))dim=splitPolygon(holeIndices,dim),filterPoints(holeIndices,holeIndices.next),filterPoints(dim,dim.next);outerNode=filterPoints(outerNode,outerNode.next)}}if(data.length>80*dim$jscomp$0){var minX=maxX=data[0];var minY=hasHoles=data[1];for(dim=dim$jscomp$0;dim<outerLen;dim+=dim$jscomp$0)x=data[dim],holeIndices=data[dim+1],x<minX&&(minX=x),holeIndices<minY&&(minY=holeIndices),x>maxX&&(maxX=x),holeIndices>hasHoles&&(hasHoles=holeIndices);maxX=Math.max(maxX-minX,hasHoles-minY);maxX=0!==maxX?
1/maxX:0}earcutLinked(outerNode,triangles,dim$jscomp$0,minX,minY,maxX);return triangles}},ShapeUtils={area:function(contour){for(var n=contour.length,a=0,p=n-1,q=0;q<n;p=q++)a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;return.5*a},isClockWise:function(pts){return 0>ShapeUtils.area(pts)},triangulateShape:function(contour,holes){var vertices=[],holeIndices=[],faces=[];removeDupEndPts(contour);addContour(vertices,contour);contour=contour.length;holes.forEach(removeDupEndPts);for(var _i203=
0;_i203<holes.length;_i203++)holeIndices.push(contour),contour+=holes[_i203].length,addContour(vertices,holes[_i203]);holes=Earcut.triangulate(vertices,holeIndices);for(vertices=0;vertices<holes.length;vertices+=3)faces.push(holes.slice(vertices,vertices+3));return faces}};exports.ShapeUtils=ShapeUtils;ExtrudeGeometry.prototype=Object.create(Geometry.prototype);ExtrudeGeometry.prototype.constructor=ExtrudeGeometry;ExtrudeGeometry.prototype.toJSON=function(){var data=Geometry.prototype.toJSON.call(this);
return toJSON(this.parameters.shapes,this.parameters.options,data)};ExtrudeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);ExtrudeBufferGeometry.prototype.constructor=ExtrudeBufferGeometry;ExtrudeBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);return toJSON(this.parameters.shapes,this.parameters.options,data)};var WorldUVGenerator={generateTopUV:function(geometry,vertices,indexA,indexB,indexC){geometry=vertices[3*indexB];indexB=vertices[3*
indexB+1];var c_x=vertices[3*indexC];indexC=vertices[3*indexC+1];return[new Vector2(vertices[3*indexA],vertices[3*indexA+1]),new Vector2(geometry,indexB),new Vector2(c_x,indexC)]},generateSideWallUV:function(geometry,vertices,indexA,indexB,indexC,indexD){geometry=vertices[3*indexA];var a_y=vertices[3*indexA+1];indexA=vertices[3*indexA+2];var b_x=vertices[3*indexB],b_y=vertices[3*indexB+1];indexB=vertices[3*indexB+2];var c_x=vertices[3*indexC],c_y=vertices[3*indexC+1];indexC=vertices[3*indexC+2];var d_x=
vertices[3*indexD],d_y=vertices[3*indexD+1];vertices=vertices[3*indexD+2];return.01>Math.abs(a_y-b_y)?[new Vector2(geometry,1-indexA),new Vector2(b_x,1-indexB),new Vector2(c_x,1-indexC),new Vector2(d_x,1-vertices)]:[new Vector2(a_y,1-indexA),new Vector2(b_y,1-indexB),new Vector2(c_y,1-indexC),new Vector2(d_y,1-vertices)]}};TextGeometry.prototype=Object.create(Geometry.prototype);TextGeometry.prototype.constructor=TextGeometry;TextBufferGeometry.prototype=Object.create(ExtrudeBufferGeometry.prototype);
TextBufferGeometry.prototype.constructor=TextBufferGeometry;SphereGeometry.prototype=Object.create(Geometry.prototype);SphereGeometry.prototype.constructor=SphereGeometry;SphereBufferGeometry.prototype=Object.create(BufferGeometry.prototype);SphereBufferGeometry.prototype.constructor=SphereBufferGeometry;RingGeometry.prototype=Object.create(Geometry.prototype);RingGeometry.prototype.constructor=RingGeometry;RingBufferGeometry.prototype=Object.create(BufferGeometry.prototype);RingBufferGeometry.prototype.constructor=
RingBufferGeometry;LatheGeometry.prototype=Object.create(Geometry.prototype);LatheGeometry.prototype.constructor=LatheGeometry;LatheBufferGeometry.prototype=Object.create(BufferGeometry.prototype);LatheBufferGeometry.prototype.constructor=LatheBufferGeometry;ShapeGeometry.prototype=Object.create(Geometry.prototype);ShapeGeometry.prototype.constructor=ShapeGeometry;ShapeGeometry.prototype.toJSON=function(){var data=Geometry.prototype.toJSON.call(this);return toJSON$1(this.parameters.shapes,data)};
ShapeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);ShapeBufferGeometry.prototype.constructor=ShapeBufferGeometry;ShapeBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);return toJSON$1(this.parameters.shapes,data)};EdgesGeometry.prototype=Object.create(BufferGeometry.prototype);EdgesGeometry.prototype.constructor=EdgesGeometry;CylinderGeometry.prototype=Object.create(Geometry.prototype);CylinderGeometry.prototype.constructor=CylinderGeometry;
CylinderBufferGeometry.prototype=Object.create(BufferGeometry.prototype);CylinderBufferGeometry.prototype.constructor=CylinderBufferGeometry;ConeGeometry.prototype=Object.create(CylinderGeometry.prototype);ConeGeometry.prototype.constructor=ConeGeometry;ConeBufferGeometry.prototype=Object.create(CylinderBufferGeometry.prototype);ConeBufferGeometry.prototype.constructor=ConeBufferGeometry;CircleGeometry.prototype=Object.create(Geometry.prototype);CircleGeometry.prototype.constructor=CircleGeometry;
CircleBufferGeometry.prototype=Object.create(BufferGeometry.prototype);CircleBufferGeometry.prototype.constructor=CircleBufferGeometry;var Geometries=Object.freeze({__proto__:null,WireframeGeometry:WireframeGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricBufferGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronBufferGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronBufferGeometry,IcosahedronGeometry:IcosahedronGeometry,
IcosahedronBufferGeometry:IcosahedronBufferGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronBufferGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronBufferGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeBufferGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotBufferGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusBufferGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextBufferGeometry,
SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereBufferGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingBufferGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneBufferGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheBufferGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeBufferGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeBufferGeometry,EdgesGeometry:EdgesGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeBufferGeometry,
CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderBufferGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleBufferGeometry,BoxGeometry:BoxGeometry$jscomp$0,BoxBufferGeometry:BoxBufferGeometry$jscomp$0});ShadowMaterial.prototype=Object.create(Material.prototype);ShadowMaterial.prototype.constructor=ShadowMaterial;ShadowMaterial.prototype.isShadowMaterial=!0;ShadowMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);
return this};RawShaderMaterial.prototype=Object.create(ShaderMaterial.prototype);RawShaderMaterial.prototype.constructor=RawShaderMaterial;RawShaderMaterial.prototype.isRawShaderMaterial=!0;MeshStandardMaterial.prototype=Object.create(Material.prototype);MeshStandardMaterial.prototype.constructor=MeshStandardMaterial;MeshStandardMaterial.prototype.isMeshStandardMaterial=!0;MeshStandardMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={STANDARD:""};this.color.copy(source.color);
this.roughness=source.roughness;this.metalness=source.metalness;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);
this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.roughnessMap=source.roughnessMap;this.metalnessMap=source.metalnessMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapIntensity=source.envMapIntensity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=
source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.vertexTangents=source.vertexTangents;return this};MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype);MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial;MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=!0;MeshPhysicalMaterial.prototype.copy=function(source){MeshStandardMaterial.prototype.copy.call(this,source);this.defines=
{STANDARD:"",PHYSICAL:""};this.clearcoat=source.clearcoat;this.clearcoatMap=source.clearcoatMap;this.clearcoatRoughness=source.clearcoatRoughness;this.clearcoatRoughnessMap=source.clearcoatRoughnessMap;this.clearcoatNormalMap=source.clearcoatNormalMap;this.clearcoatNormalScale.copy(source.clearcoatNormalScale);this.reflectivity=source.reflectivity;this.sheen=source.sheen?(this.sheen||new Color).copy(source.sheen):null;this.transparency=source.transparency;return this};MeshPhongMaterial.prototype=
Object.create(Material.prototype);MeshPhongMaterial.prototype.constructor=MeshPhongMaterial;MeshPhongMaterial.prototype.isMeshPhongMaterial=!0;MeshPhongMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.specular.copy(source.specular);this.shininess=source.shininess;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);
this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=
source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this};MeshToonMaterial.prototype=Object.create(Material.prototype);MeshToonMaterial.prototype.constructor=MeshToonMaterial;
MeshToonMaterial.prototype.isMeshToonMaterial=!0;MeshToonMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.gradientMap=source.gradientMap;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=
source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;
this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this};MeshNormalMaterial.prototype=Object.create(Material.prototype);MeshNormalMaterial.prototype.constructor=MeshNormalMaterial;MeshNormalMaterial.prototype.isMeshNormalMaterial=!0;MeshNormalMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;
this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this};MeshLambertMaterial.prototype=Object.create(Material.prototype);MeshLambertMaterial.prototype.constructor=MeshLambertMaterial;
MeshLambertMaterial.prototype.isMeshLambertMaterial=!0;MeshLambertMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.specularMap=source.specularMap;this.alphaMap=
source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this};MeshMatcapMaterial.prototype=Object.create(Material.prototype);
MeshMatcapMaterial.prototype.constructor=MeshMatcapMaterial;MeshMatcapMaterial.prototype.isMeshMatcapMaterial=!0;MeshMatcapMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={MATCAP:""};this.color.copy(source.color);this.matcap=source.matcap;this.map=source.map;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=
source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this};LineDashedMaterial.prototype=Object.create(LineBasicMaterial.prototype);LineDashedMaterial.prototype.constructor=LineDashedMaterial;LineDashedMaterial.prototype.isLineDashedMaterial=!0;LineDashedMaterial.prototype.copy=function(source){LineBasicMaterial.prototype.copy.call(this,
source);this.scale=source.scale;this.dashSize=source.dashSize;this.gapSize=source.gapSize;return this};var Materials=Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,
MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material}),AnimationUtils={arraySlice:function(array,from,to){return AnimationUtils.isTypedArray(array)?new array.constructor(array.subarray(from,void 0!==to?to:array.length)):array.slice(from,to)},convertArray:function(array,type,forceClone){return!array||!forceClone&&
array.constructor===type?array:"number"===typeof type.BYTES_PER_ELEMENT?new type(array):Array.prototype.slice.call(array)},isTypedArray:function(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView)},getKeyframeOrder:function(times){for(var n=times.length,result=Array(n),_i235=0;_i235!==n;++_i235)result[_i235]=_i235;result.sort(function(i,j){return times[i]-times[j]});return result},sortedArray:function(values,stride,order){for(var nValues=values.length,result=new values.constructor(nValues),
_i236=0,dstOffset=0;dstOffset!==nValues;++_i236)for(var srcOffset=order[_i236]*stride,j=0;j!==stride;++j)result[dstOffset++]=values[srcOffset+j];return result},flattenJSON:function(jsonKeys,times,values,valuePropertyName){for(var i=1,key=jsonKeys[0];void 0!==key&&void 0===key[valuePropertyName];)key=jsonKeys[i++];if(void 0!==key){var value=key[valuePropertyName];if(void 0!==value)if(Array.isArray(value)){do value=key[valuePropertyName],void 0!==value&&(times.push(key.time),values.push.apply(values,
value)),key=jsonKeys[i++];while(void 0!==key)}else if(void 0!==value.toArray){do value=key[valuePropertyName],void 0!==value&&(times.push(key.time),value.toArray(values,values.length)),key=jsonKeys[i++];while(void 0!==key)}else{do value=key[valuePropertyName],void 0!==value&&(times.push(key.time),values.push(value)),key=jsonKeys[i++];while(void 0!==key)}}},subclip:function(sourceClip,name,startFrame,endFrame,fps){fps=fps||30;sourceClip=sourceClip.clone();sourceClip.name=name;name=[];for(var _i237=
0;_i237<sourceClip.tracks.length;++_i237){for(var track=sourceClip.tracks[_i237],valueSize=track.getValueSize(),times=[],values=[],j=0;j<track.times.length;++j){var frame=track.times[j]*fps;if(!(frame<startFrame||frame>=endFrame))for(times.push(track.times[j]),frame=0;frame<valueSize;++frame)values.push(track.values[j*valueSize+frame])}0!==times.length&&(track.times=AnimationUtils.convertArray(times,track.times.constructor),track.values=AnimationUtils.convertArray(values,track.values.constructor),
name.push(track))}sourceClip.tracks=name;startFrame=Infinity;for(endFrame=0;endFrame<sourceClip.tracks.length;++endFrame)startFrame>sourceClip.tracks[endFrame].times[0]&&(startFrame=sourceClip.tracks[endFrame].times[0]);for(endFrame=0;endFrame<sourceClip.tracks.length;++endFrame)sourceClip.tracks[endFrame].shift(-1*startFrame);sourceClip.resetDuration();return sourceClip},makeClipAdditive:function(targetClip,referenceFrame,referenceClip,fps){void 0===referenceFrame&&(referenceFrame=0);void 0===referenceClip&&
(referenceClip=targetClip);if(void 0===fps||0>=fps)fps=30;var numTracks=targetClip.tracks.length,referenceTime=referenceFrame/fps;referenceFrame=function(_i240){var referenceTrack=referenceClip.tracks[_i240],referenceTrackType=referenceTrack.ValueTypeName;if("bool"===referenceTrackType||"string"===referenceTrackType)return"continue";_i240=targetClip.tracks.find(function(track){return track.name===referenceTrack.name&&track.ValueTypeName===referenceTrackType});if(void 0===_i240)return"continue";var valueSize=
referenceTrack.getValueSize(),lastIndex=referenceTrack.times.length-1,referenceValue=void 0;referenceTime<=referenceTrack.times[0]?referenceValue=AnimationUtils.arraySlice(referenceTrack.values,0,referenceTrack.valueSize):referenceTime>=referenceTrack.times[lastIndex]?referenceValue=AnimationUtils.arraySlice(referenceTrack.values,lastIndex*valueSize):(referenceValue=referenceTrack.createInterpolant(),referenceValue.evaluate(referenceTime),referenceValue=referenceValue.resultBuffer);"quaternion"===
referenceTrackType&&(new Quaternion(referenceValue[0],referenceValue[1],referenceValue[2],referenceValue[3])).normalize().conjugate().toArray(referenceValue);lastIndex=_i240.times.length;for(var j=0;j<lastIndex;++j){var valueStart=j*valueSize;if("quaternion"===referenceTrackType)Quaternion.multiplyQuaternionsFlat(_i240.values,valueStart,referenceValue,0,_i240.values,valueStart);else for(var k=0;k<valueSize;++k)_i240.values[valueStart+k]-=referenceValue[k]}};for(fps=0;fps<numTracks;++fps)referenceFrame(fps);
targetClip.blendMode=2501;return targetClip}};exports.AnimationUtils=AnimationUtils;Object.assign(Interpolant.prototype,{evaluate:function(t){var pp=this.parameterPositions,i1=this._cachedIndex,t1=pp[i1],t0=pp[i1-1];a:{b:{c:{d:if(!(t<t1)){for(var giveUpAt=i1+2;;){if(void 0===t1){if(t<t0)break d;this._cachedIndex=i1=pp.length;return this.afterEnd_(i1-1,t,t0)}if(i1===giveUpAt)break;t0=t1;t1=pp[++i1];if(t<t1)break b}t1=pp.length;break c}if(t>=t0)break a;else{giveUpAt=pp[1];t<giveUpAt&&(i1=2,t0=giveUpAt);
for(giveUpAt=i1-2;;){if(void 0===t0)return this._cachedIndex=0,this.beforeStart_(0,t,t1);if(i1===giveUpAt)break;t1=t0;t0=pp[--i1-1];if(t>=t0)break b}t1=i1;i1=0}}for(;i1<t1;)t0=i1+t1>>>1,t<pp[t0]?t1=t0:i1=t0+1;t1=pp[i1];t0=pp[i1-1];if(void 0===t0)return this._cachedIndex=0,this.beforeStart_(0,t,t1);if(void 0===t1)return this._cachedIndex=i1=pp.length,this.afterEnd_(i1-1,t0,t)}this._cachedIndex=i1;this.intervalChanged_(i1,t0,t1)}return this.interpolate_(i1,t0,t,t1)},settings:null,DefaultSettings_:{},
getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(index){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize;index*=stride;for(var _i241=0;_i241!==stride;++_i241)result[_i241]=values[index+_i241];return result},interpolate_:function(){throw Error("call to abstract method");},intervalChanged_:function(){}});Object.assign(Interpolant.prototype,{beforeStart_:Interpolant.prototype.copySampleValue_,afterEnd_:Interpolant.prototype.copySampleValue_});
CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(i1,t0,t1){var pp=this.parameterPositions,iPrev=i1-2,iNext=i1+1,tPrev=pp[iPrev],tNext=pp[iNext];if(void 0===tPrev)switch(this.getSettings_().endingStart){case 2401:iPrev=i1;tPrev=2*t0-t1;break;case 2402:iPrev=pp.length-2;tPrev=t0+pp[iPrev]-pp[iPrev+1];break;default:iPrev=i1,tPrev=t1}if(void 0===tNext)switch(this.getSettings_().endingEnd){case 2401:iNext=
i1;tNext=2*t1-t0;break;case 2402:iNext=1;tNext=t1+pp[1]-pp[0];break;default:iNext=i1-1,tNext=t0}i1=.5*(t1-t0);pp=this.valueSize;this._weightPrev=i1/(t0-tPrev);this._weightNext=i1/(tNext-t1);this._offsetPrev=iPrev*pp;this._offsetNext=iNext*pp},interpolate_:function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize;i1*=stride;var o0=i1-stride,oP=this._offsetPrev,oN=this._offsetNext,wP=this._weightPrev,wN=this._weightNext,p=(t-t0)/(t1-t0);t=p*p;t1=t*p;t0=-wP*t1+
2*wP*t-wP*p;wP=(1+wP)*t1+(-1.5-2*wP)*t+(-.5+wP)*p+1;p=(-1-wN)*t1+(1.5+wN)*t+.5*p;wN=wN*t1-wN*t;for(t=0;t!==stride;++t)result[t]=t0*values[oP+t]+wP*values[o0+t]+p*values[i1+t]+wN*values[oN+t];return result}});LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize;i1*=stride;var offset0=i1-stride;t0=(t-t0)/(t1-t0);t=1-t0;for(t1=0;t1!==stride;++t1)result[t1]=
values[offset0+t1]*t+values[i1+t1]*t0;return result}});DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function(i1){return this.copySampleValue_(i1-1)}});Object.assign(KeyframeTrack,{toJSON:function(track){var trackType=track.constructor;if(void 0!==trackType.toJSON)trackType=trackType.toJSON(track);else{trackType={name:track.name,times:AnimationUtils.convertArray(track.times,Array),values:AnimationUtils.convertArray(track.values,
Array)};var interpolation=track.getInterpolation();interpolation!==track.DefaultInterpolation&&(trackType.interpolation=interpolation)}trackType.type=track.ValueTypeName;return trackType}});Object.assign(KeyframeTrack.prototype,{constructor:KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(result){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),result)},InterpolantFactoryMethodLinear:function(result){return new LinearInterpolant(this.times,
this.values,this.getValueSize(),result)},InterpolantFactoryMethodSmooth:function(result){return new CubicInterpolant(this.times,this.values,this.getValueSize(),result)},setInterpolation:function(interpolation){switch(interpolation){case 2300:var factoryMethod=this.InterpolantFactoryMethodDiscrete;break;case 2301:factoryMethod=this.InterpolantFactoryMethodLinear;break;case 2302:factoryMethod=this.InterpolantFactoryMethodSmooth}if(void 0===factoryMethod){factoryMethod="unsupported interpolation for "+
this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)if(interpolation!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(factoryMethod);console.warn("THREE.KeyframeTrack:",factoryMethod);return this}this.createInterpolant=factoryMethod;return this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},
getValueSize:function(){return this.values.length/this.times.length},shift:function(timeOffset){if(0!==timeOffset)for(var times=this.times,_i244=0,n=times.length;_i244!==n;++_i244)times[_i244]+=timeOffset;return this},scale:function(timeScale){if(1!==timeScale)for(var times=this.times,_i245=0,n=times.length;_i245!==n;++_i245)times[_i245]*=timeScale;return this},trim:function(startTime,endTime){for(var times=this.times,nKeys=times.length,from=0,to=nKeys-1;from!==nKeys&&times[from]<startTime;)++from;
for(;-1!==to&&times[to]>endTime;)--to;++to;if(0!==from||to!==nKeys)from>=to&&(to=Math.max(to,1),from=to-1),startTime=this.getValueSize(),this.times=AnimationUtils.arraySlice(times,from,to),this.values=AnimationUtils.arraySlice(this.values,from*startTime,to*startTime);return this},validate:function(){var valid=!0,valueSize=this.getValueSize();0!==valueSize-Math.floor(valueSize)&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),valid=!1);var times=this.times;valueSize=this.values;
var nKeys=times.length;0===nKeys&&(console.error("THREE.KeyframeTrack: Track is empty.",this),valid=!1);for(var prevTime=null,_i246=0;_i246!==nKeys;_i246++){var currTime=times[_i246];if("number"===typeof currTime&&isNaN(currTime)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,_i246,currTime);valid=!1;break}if(null!==prevTime&&prevTime>currTime){console.error("THREE.KeyframeTrack: Out of order keys.",this,_i246,currTime,prevTime);valid=!1;break}prevTime=currTime}if(void 0!==
valueSize&&AnimationUtils.isTypedArray(valueSize))for(times=0,nKeys=valueSize.length;times!==nKeys;++times)if(prevTime=valueSize[times],isNaN(prevTime)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,times,prevTime);valid=!1;break}return valid},optimize:function(){for(var times=AnimationUtils.arraySlice(this.times),values=AnimationUtils.arraySlice(this.values),stride=this.getValueSize(),smoothInterpolation=2302===this.getInterpolation(),lastIndex=times.length-1,writeIndex=
1,_i248=1;_i248<lastIndex;++_i248){var keep=!1,time=times[_i248];if(time!==times[_i248+1]&&(1!==_i248||time!==time[0]))if(smoothInterpolation)keep=!0;else{time=_i248*stride;for(var offsetP=time-stride,offsetN=time+stride,j=0;j!==stride;++j){var value=values[time+j];if(value!==values[offsetP+j]||value!==values[offsetN+j]){keep=!0;break}}}if(keep){if(_i248!==writeIndex)for(times[writeIndex]=times[_i248],keep=_i248*stride,time=writeIndex*stride,offsetP=0;offsetP!==stride;++offsetP)values[time+offsetP]=
values[keep+offsetP];++writeIndex}}if(0<lastIndex){times[writeIndex]=times[lastIndex];smoothInterpolation=lastIndex*stride;lastIndex=writeIndex*stride;for(_i248=0;_i248!==stride;++_i248)values[lastIndex+_i248]=values[smoothInterpolation+_i248];++writeIndex}writeIndex!==times.length?(this.times=AnimationUtils.arraySlice(times,0,writeIndex),this.values=AnimationUtils.arraySlice(values,0,writeIndex*stride)):(this.times=times,this.values=values);return this},clone:function(){var times=AnimationUtils.arraySlice(this.times,
0),values=AnimationUtils.arraySlice(this.values,0);times=new this.constructor(this.name,times,values);times.createInterpolant=this.createInterpolant;return times}});BooleanKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});ColorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),
{constructor:ColorKeyframeTrack,ValueTypeName:"color"});NumberKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:NumberKeyframeTrack,ValueTypeName:"number"});QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:QuaternionLinearInterpolant,interpolate_:function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize;t0=(t-t0)/(t1-t0);i1*=stride;for(t=i1+stride;i1!==t;i1+=4)Quaternion.slerpFlat(result,
0,values,i1-stride,values,i1,t0);return result}});QuaternionKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(result){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),result)},InterpolantFactoryMethodSmooth:void 0});StringKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:StringKeyframeTrack,
ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});VectorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:VectorKeyframeTrack,ValueTypeName:"vector"});Object.assign(AnimationClip,{parse:function(json){for(var tracks=[],jsonTracks=json.tracks,frameTime=1/(json.fps||1),_i249=0,n=jsonTracks.length;_i249!==n;++_i249)tracks.push(parseKeyframeTrack(jsonTracks[_i249]).scale(frameTime));
return new AnimationClip(json.name,json.duration,tracks,json.blendMode)},toJSON:function(clip){var tracks=[],clipTracks=clip.tracks;clip={name:clip.name,duration:clip.duration,tracks:tracks,uuid:clip.uuid,blendMode:clip.blendMode};for(var _i250=0,n=clipTracks.length;_i250!==n;++_i250)tracks.push(KeyframeTrack.toJSON(clipTracks[_i250]));return clip},CreateFromMorphTargetSequence:function(name,morphTargetSequence,fps,noLoop){for(var numMorphTargets=morphTargetSequence.length,tracks=[],_i251=0;_i251<
numMorphTargets;_i251++){var times=[],values=[];times.push((_i251+numMorphTargets-1)%numMorphTargets,_i251,(_i251+1)%numMorphTargets);values.push(0,1,0);var order=AnimationUtils.getKeyframeOrder(times);times=AnimationUtils.sortedArray(times,1,order);values=AnimationUtils.sortedArray(values,1,order);noLoop||0!==times[0]||(times.push(numMorphTargets),values.push(values[0]));tracks.push((new NumberKeyframeTrack(".morphTargetInfluences["+morphTargetSequence[_i251].name+"]",times,values)).scale(1/fps))}return new AnimationClip(name,
-1,tracks)},findByName:function(objectOrClipArray,name){var clipArray=objectOrClipArray;Array.isArray(objectOrClipArray)||(clipArray=objectOrClipArray.geometry&&objectOrClipArray.geometry.animations||objectOrClipArray.animations);for(objectOrClipArray=0;objectOrClipArray<clipArray.length;objectOrClipArray++)if(clipArray[objectOrClipArray].name===name)return clipArray[objectOrClipArray];return null},CreateClipsFromMorphTargetSequences:function(morphTargets,fps,noLoop){for(var animationToMorphTargets=
{},pattern=/^([\w-]*?)([\d]+)$/,_i253=0,il=morphTargets.length;_i253<il;_i253++){var morphTarget=morphTargets[_i253],parts=morphTarget.name.match(pattern);if(parts&&1<parts.length){parts=parts[1];var animationMorphTargets=animationToMorphTargets[parts];animationMorphTargets||(animationToMorphTargets[parts]=animationMorphTargets=[]);animationMorphTargets.push(morphTarget)}}morphTargets=[];for(var _name4 in animationToMorphTargets)morphTargets.push(AnimationClip.CreateFromMorphTargetSequence(_name4,
animationToMorphTargets[_name4],fps,noLoop));return morphTargets},parseAnimation:function(animation,bones){if(!animation)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;var addNonemptyTrack=function(trackType,trackName,animationKeys,propertyName,destTracks){if(0!==animationKeys.length){var times=[],values=[];AnimationUtils.flattenJSON(animationKeys,times,values,propertyName);0!==times.length&&destTracks.push(new trackType(trackName,times,values))}},tracks=[],clipName=
animation.name||"default",fps=animation.fps||30,blendMode=animation.blendMode,duration=animation.length||-1;animation=animation.hierarchy||[];for(var h=0;h<animation.length;h++){var animationKeys$jscomp$0=animation[h].keys;if(animationKeys$jscomp$0&&0!==animationKeys$jscomp$0.length)if(animationKeys$jscomp$0[0].morphTargets){duration={};var k=void 0;for(k=0;k<animationKeys$jscomp$0.length;k++)if(animationKeys$jscomp$0[k].morphTargets)for(var m=0;m<animationKeys$jscomp$0[k].morphTargets.length;m++)duration[animationKeys$jscomp$0[k].morphTargets[m]]=
-1;for(var morphTargetName in duration){m=[];for(var values$jscomp$0=[],_m=0;_m!==animationKeys$jscomp$0[k].morphTargets.length;++_m){var animationKey=animationKeys$jscomp$0[k];m.push(animationKey.time);values$jscomp$0.push(animationKey.morphTarget===morphTargetName?1:0)}tracks.push(new NumberKeyframeTrack(".morphTargetInfluence["+morphTargetName+"]",m,values$jscomp$0))}duration=duration.length*(fps||1)}else k=".bones["+bones[h].name+"]",addNonemptyTrack(VectorKeyframeTrack,k+".position",animationKeys$jscomp$0,
"pos",tracks),addNonemptyTrack(QuaternionKeyframeTrack,k+".quaternion",animationKeys$jscomp$0,"rot",tracks),addNonemptyTrack(VectorKeyframeTrack,k+".scale",animationKeys$jscomp$0,"scl",tracks)}return 0===tracks.length?null:new AnimationClip(clipName,duration,tracks,blendMode)}});Object.assign(AnimationClip.prototype,{resetDuration:function(){for(var duration=0,_i254=0,n=this.tracks.length;_i254!==n;++_i254){var track=this.tracks[_i254];duration=Math.max(duration,track.times[track.times.length-1])}this.duration=
duration;return this},trim:function(){for(var _i255=0;_i255<this.tracks.length;_i255++)this.tracks[_i255].trim(0,this.duration);return this},validate:function(){for(var valid=!0,_i256=0;_i256<this.tracks.length;_i256++)valid=valid&&this.tracks[_i256].validate();return valid},optimize:function(){for(var _i257=0;_i257<this.tracks.length;_i257++)this.tracks[_i257].optimize();return this},clone:function(){for(var tracks=[],_i258=0;_i258<this.tracks.length;_i258++)tracks.push(this.tracks[_i258].clone());
return new AnimationClip(this.name,this.duration,tracks,this.blendMode)}});var Cache={enabled:!1,files:{},add:function(key,file){!1!==this.enabled&&(this.files[key]=file)},get:function(key){if(!1!==this.enabled)return this.files[key]},remove:function(key){delete this.files[key]},clear:function(){this.files={}}};exports.Cache=Cache;var DefaultLoadingManager=new LoadingManager;exports.DefaultLoadingManager=DefaultLoadingManager;Object.assign(Loader.prototype,{load:function(){},loadAsync:function(url,
onProgress){var scope=this;return new Promise(function(resolve,reject){scope.load(url,resolve,onProgress,reject)})},parse:function(){},setCrossOrigin:function(crossOrigin){this.crossOrigin=crossOrigin;return this},setPath:function(path){this.path=path;return this},setResourcePath:function(resourcePath){this.resourcePath=resourcePath;return this},setRequestHeader:function(requestHeader){this.requestHeader=requestHeader;return this}});var loading={};FileLoader.prototype=Object.assign(Object.create(Loader.prototype),
{constructor:FileLoader,load:function(url,onLoad,onProgress,onError){void 0===url&&(url="");void 0!==this.path&&(url=this.path+url);url=this.manager.resolveURL(url);var scope=this,cached=Cache.get(url);if(void 0!==cached)return scope.manager.itemStart(url),setTimeout(function(){onLoad&&onLoad(cached);scope.manager.itemEnd(url)},0),cached;if(void 0!==loading[url])loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});else{var dataUriRegexResult=url.match(/^data:(.*?)(;base64)?,(.*)$/);
if(dataUriRegexResult){onProgress=dataUriRegexResult[1];var isBase64=!!dataUriRegexResult[2];dataUriRegexResult=dataUriRegexResult[3];dataUriRegexResult=decodeURIComponent(dataUriRegexResult);isBase64&&(dataUriRegexResult=atob(dataUriRegexResult));try{var responseType=(this.responseType||"").toLowerCase();switch(responseType){case "arraybuffer":case "blob":var view=new Uint8Array(dataUriRegexResult.length);for(isBase64=0;isBase64<dataUriRegexResult.length;isBase64++)view[isBase64]=dataUriRegexResult.charCodeAt(isBase64);
var response$jscomp$0="blob"===responseType?new Blob([view.buffer],{type:onProgress}):view.buffer;break;case "document":response$jscomp$0=(new DOMParser).parseFromString(dataUriRegexResult,onProgress);break;case "json":response$jscomp$0=JSON.parse(dataUriRegexResult);break;default:response$jscomp$0=dataUriRegexResult}setTimeout(function(){onLoad&&onLoad(response$jscomp$0);scope.manager.itemEnd(url)},0)}catch(error){setTimeout(function(){onError&&onError(error);scope.manager.itemError(url);scope.manager.itemEnd(url)},
0)}}else{loading[url]=[];loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});var request=new XMLHttpRequest;request.open("GET",url,!0);request.addEventListener("load",function(event){var response=this.response,callbacks=loading[url];delete loading[url];if(200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received.");Cache.add(url,response);event=0;for(var il=callbacks.length;event<il;event++){var callback=callbacks[event];if(callback.onLoad)callback.onLoad(response)}}else{response=
0;for(il=callbacks.length;response<il;response++)if(callback=callbacks[response],callback.onError)callback.onError(event);scope.manager.itemError(url)}scope.manager.itemEnd(url)},!1);request.addEventListener("progress",function(event){for(var callbacks=loading[url],_i263=0,il=callbacks.length;_i263<il;_i263++){var callback=callbacks[_i263];if(callback.onProgress)callback.onProgress(event)}},!1);request.addEventListener("error",function(event){var callbacks=loading[url];delete loading[url];for(var _i264=
0,il=callbacks.length;_i264<il;_i264++){var callback=callbacks[_i264];if(callback.onError)callback.onError(event)}scope.manager.itemError(url);scope.manager.itemEnd(url)},!1);request.addEventListener("abort",function(event){var callbacks=loading[url];delete loading[url];for(var _i265=0,il=callbacks.length;_i265<il;_i265++){var callback=callbacks[_i265];if(callback.onError)callback.onError(event)}scope.manager.itemError(url);scope.manager.itemEnd(url)},!1);void 0!==this.responseType&&(request.responseType=
this.responseType);void 0!==this.withCredentials&&(request.withCredentials=this.withCredentials);request.overrideMimeType&&request.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(isBase64 in this.requestHeader)request.setRequestHeader(isBase64,this.requestHeader[isBase64]);request.send(null)}scope.manager.itemStart(url);return request}},setResponseType:function(value){this.responseType=value;return this},setWithCredentials:function(value){this.withCredentials=value;return this},
setMimeType:function(value){this.mimeType=value;return this}});AnimationLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AnimationLoader,load:function(url,onLoad,onProgress,onError){var scope=this,loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)))}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}},onProgress,onError)},parse:function(json){for(var animations=[],
_i266=0;_i266<json.length;_i266++){var clip=AnimationClip.parse(json[_i266]);animations.push(clip)}return animations}});CompressedTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CompressedTextureLoader,load:function(url,onLoad,onProgress,onError){function loadTexture(i){loader.load(url[i],function(buffer){buffer=scope.parse(buffer,!0);images[i]={width:buffer.width,height:buffer.height,format:buffer.format,mipmaps:buffer.mipmaps};loaded+=1;6===loaded&&(1===buffer.mipmapCount&&
(texture.minFilter=LinearFilter),texture.format=buffer.format,texture.needsUpdate=!0,onLoad&&onLoad(texture))},onProgress,onError)}var scope=this,images=[],texture=new CompressedTexture;texture.image=images;var loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setResponseType("arraybuffer");var loaded=0;if(Array.isArray(url))for(var _i267=0,il=url.length;_i267<il;++_i267)loadTexture(_i267);else loader.load(url,function(buffer){buffer=scope.parse(buffer,!0);if(buffer.isCubemap)for(var faces=
buffer.mipmaps.length/buffer.mipmapCount,f=0;f<faces;f++){images[f]={mipmaps:[]};for(var _i268=0;_i268<buffer.mipmapCount;_i268++)images[f].mipmaps.push(buffer.mipmaps[f*buffer.mipmapCount+_i268]),images[f].format=buffer.format,images[f].width=buffer.width,images[f].height=buffer.height}else texture.image.width=buffer.width,texture.image.height=buffer.height,texture.mipmaps=buffer.mipmaps;1===buffer.mipmapCount&&(texture.minFilter=LinearFilter);texture.format=buffer.format;texture.needsUpdate=!0;
onLoad&&onLoad(texture)},onProgress,onError);return texture}});DataTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:DataTextureLoader,load:function(url,onLoad,onProgress,onError){var scope=this,texture=new DataTexture,loader=new FileLoader(this.manager);loader.setResponseType("arraybuffer");loader.setPath(this.path);loader.load(url,function(buffer){if(buffer=scope.parse(buffer))void 0!==buffer.image?texture.image=buffer.image:void 0!==buffer.data&&(texture.image.width=
buffer.width,texture.image.height=buffer.height,texture.image.data=buffer.data),texture.wrapS=void 0!==buffer.wrapS?buffer.wrapS:ClampToEdgeWrapping,texture.wrapT=void 0!==buffer.wrapT?buffer.wrapT:ClampToEdgeWrapping,texture.magFilter=void 0!==buffer.magFilter?buffer.magFilter:LinearFilter,texture.minFilter=void 0!==buffer.minFilter?buffer.minFilter:LinearFilter,texture.anisotropy=void 0!==buffer.anisotropy?buffer.anisotropy:1,void 0!==buffer.format&&(texture.format=buffer.format),void 0!==buffer.type&&
(texture.type=buffer.type),void 0!==buffer.mipmaps&&(texture.mipmaps=buffer.mipmaps,texture.minFilter=LinearMipmapLinearFilter),1===buffer.mipmapCount&&(texture.minFilter=LinearFilter),texture.needsUpdate=!0,onLoad&&onLoad(texture,buffer)},onProgress,onError);return texture}});ImageLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageLoader,load:function(url,onLoad,onProgress,onError){function onImageLoad(){image.removeEventListener("load",onImageLoad,!1);image.removeEventListener("error",
onImageError,!1);Cache.add(url,this);onLoad&&onLoad(this);scope.manager.itemEnd(url)}function onImageError(event){image.removeEventListener("load",onImageLoad,!1);image.removeEventListener("error",onImageError,!1);onError&&onError(event);scope.manager.itemError(url);scope.manager.itemEnd(url)}void 0!==this.path&&(url=this.path+url);url=this.manager.resolveURL(url);var scope=this,cached=Cache.get(url);if(void 0!==cached)return scope.manager.itemStart(url),setTimeout(function(){onLoad&&onLoad(cached);
scope.manager.itemEnd(url)},0),cached;var image=document.createElementNS("http://www.w3.org/1999/xhtml","img");image.addEventListener("load",onImageLoad,!1);image.addEventListener("error",onImageError,!1);"data:"!==url.substr(0,5)&&void 0!==this.crossOrigin&&(image.crossOrigin=this.crossOrigin);scope.manager.itemStart(url);image.src=url;return image}});CubeTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CubeTextureLoader,load:function(urls,onLoad,onProgress,onError){function loadTexture(i){loader.load(urls[i],
function(image){texture.images[i]=image;loaded++;6===loaded&&(texture.needsUpdate=!0,onLoad&&onLoad(texture))},void 0,onError)}var texture=new CubeTexture,loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);var loaded=0;for(onProgress=0;onProgress<urls.length;++onProgress)loadTexture(onProgress);return texture}});TextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:TextureLoader,load:function(url,onLoad,onProgress,onError){var texture=
new Texture,loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);loader.load(url,function(image){texture.image=image;image=0<url.search(/\.jpe?g($|\?)/i)||0===url.search(/^data:image\/jpeg/);texture.format=image?RGBFormat:RGBAFormat;texture.needsUpdate=!0;void 0!==onLoad&&onLoad(texture)},onProgress,onError);return texture}});Object.assign(Curve.prototype,{getPoint:function(){console.warn("THREE.Curve: .getPoint() not implemented.");return null},getPointAt:function(u,
optionalTarget){u=this.getUtoTmapping(u);return this.getPoint(u,optionalTarget)},getPoints:function(divisions){void 0===divisions&&(divisions=5);for(var points=[],d=0;d<=divisions;d++)points.push(this.getPoint(d/divisions));return points},getSpacedPoints:function(divisions){void 0===divisions&&(divisions=5);for(var points=[],d=0;d<=divisions;d++)points.push(this.getPointAt(d/divisions));return points},getLength:function(){var lengths=this.getLengths();return lengths[lengths.length-1]},getLengths:function(divisions){void 0===
divisions&&(divisions=this.arcLengthDivisions);if(this.cacheArcLengths&&this.cacheArcLengths.length===divisions+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var cache=[],last=this.getPoint(0),sum=0;cache.push(0);for(var p=1;p<=divisions;p++){var current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current}return this.cacheArcLengths=cache},updateArcLengths:function(){this.needsUpdate=!0;this.getLengths()},getUtoTmapping:function(u,distance){var arcLengths=
this.getLengths(),il=arcLengths.length;distance=distance?distance:u*arcLengths[il-1];for(var low=0,high=il-1,comparison;low<=high;)if(u=Math.floor(low+(high-low)/2),comparison=arcLengths[u]-distance,0>comparison)low=u+1;else if(0<comparison)high=u-1;else{high=u;break}u=high;if(arcLengths[u]===distance)return u/(il-1);low=arcLengths[u];return(u+(distance-low)/(arcLengths[u+1]-low))/(il-1)},getTangent:function(t,optionalTarget){var t1=t-1E-4;t+=1E-4;0>t1&&(t1=0);1<t&&(t=1);t1=this.getPoint(t1);t=this.getPoint(t);
optionalTarget=optionalTarget||(t1.isVector2?new Vector2:new Vector3);optionalTarget.copy(t).sub(t1).normalize();return optionalTarget},getTangentAt:function(u,optionalTarget){u=this.getUtoTmapping(u);return this.getTangent(u,optionalTarget)},computeFrenetFrames:function(segments,closed){for(var normal=new Vector3,tangents=[],normals=[],binormals=[],vec=new Vector3,mat=new Matrix4,_i270=0;_i270<=segments;_i270++)tangents[_i270]=this.getTangentAt(_i270/segments,new Vector3),tangents[_i270].normalize();
normals[0]=new Vector3;binormals[0]=new Vector3;_i270=Number.MAX_VALUE;var tx=Math.abs(tangents[0].x),ty=Math.abs(tangents[0].y),tz=Math.abs(tangents[0].z);tx<=_i270&&(_i270=tx,normal.set(1,0,0));ty<=_i270&&(_i270=ty,normal.set(0,1,0));tz<=_i270&&normal.set(0,0,1);vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0]);for(normal=1;normal<=segments;normal++)normals[normal]=normals[normal-1].clone(),binormals[normal]=
binormals[normal-1].clone(),vec.crossVectors(tangents[normal-1],tangents[normal]),vec.length()>Number.EPSILON&&(vec.normalize(),_i270=Math.acos(MathUtils.clamp(tangents[normal-1].dot(tangents[normal]),-1,1)),normals[normal].applyMatrix4(mat.makeRotationAxis(vec,_i270))),binormals[normal].crossVectors(tangents[normal],normals[normal]);if(!0===closed)for(closed=Math.acos(MathUtils.clamp(normals[0].dot(normals[segments]),-1,1)),closed/=segments,0<tangents[0].dot(vec.crossVectors(normals[0],normals[segments]))&&
(closed=-closed),vec=1;vec<=segments;vec++)normals[vec].applyMatrix4(mat.makeRotationAxis(tangents[vec],closed*vec)),binormals[vec].crossVectors(tangents[vec],normals[vec]);return{tangents:tangents,normals:normals,binormals:binormals}},clone:function(){return(new this.constructor).copy(this)},copy:function(source){this.arcLengthDivisions=source.arcLengthDivisions;return this},toJSON:function(){var data={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};data.arcLengthDivisions=this.arcLengthDivisions;
data.type=this.type;return data},fromJSON:function(json){this.arcLengthDivisions=json.arcLengthDivisions;return this}});EllipseCurve.prototype=Object.create(Curve.prototype);EllipseCurve.prototype.constructor=EllipseCurve;EllipseCurve.prototype.isEllipseCurve=!0;EllipseCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=optionalTarget||new Vector2;for(var twoPi=2*Math.PI,deltaAngle=this.aEndAngle-this.aStartAngle,samePoints=Math.abs(deltaAngle)<Number.EPSILON;0>deltaAngle;)deltaAngle+=
twoPi;for(;deltaAngle>twoPi;)deltaAngle-=twoPi;deltaAngle<Number.EPSILON&&(deltaAngle=samePoints?0:twoPi);!0!==this.aClockwise||samePoints||(deltaAngle=deltaAngle===twoPi?-twoPi:deltaAngle-twoPi);twoPi=this.aStartAngle+t*deltaAngle;t=this.aX+this.xRadius*Math.cos(twoPi);var y=this.aY+this.yRadius*Math.sin(twoPi);0!==this.aRotation&&(twoPi=Math.cos(this.aRotation),deltaAngle=Math.sin(this.aRotation),samePoints=t-this.aX,y-=this.aY,t=samePoints*twoPi-y*deltaAngle+this.aX,y=samePoints*deltaAngle+y*twoPi+
this.aY);return optionalTarget.set(t,y)};EllipseCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.aX=source.aX;this.aY=source.aY;this.xRadius=source.xRadius;this.yRadius=source.yRadius;this.aStartAngle=source.aStartAngle;this.aEndAngle=source.aEndAngle;this.aClockwise=source.aClockwise;this.aRotation=source.aRotation;return this};EllipseCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.aX=this.aX;data.aY=this.aY;data.xRadius=this.xRadius;
data.yRadius=this.yRadius;data.aStartAngle=this.aStartAngle;data.aEndAngle=this.aEndAngle;data.aClockwise=this.aClockwise;data.aRotation=this.aRotation;return data};EllipseCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.aX=json.aX;this.aY=json.aY;this.xRadius=json.xRadius;this.yRadius=json.yRadius;this.aStartAngle=json.aStartAngle;this.aEndAngle=json.aEndAngle;this.aClockwise=json.aClockwise;this.aRotation=json.aRotation;return this};ArcCurve.prototype=Object.create(EllipseCurve.prototype);
ArcCurve.prototype.constructor=ArcCurve;ArcCurve.prototype.isArcCurve=!0;var tmp$jscomp$0=new Vector3,px$jscomp$0=new CubicPoly,py$jscomp$0=new CubicPoly,pz=new CubicPoly;CatmullRomCurve3.prototype=Object.create(Curve.prototype);CatmullRomCurve3.prototype.constructor=CatmullRomCurve3;CatmullRomCurve3.prototype.isCatmullRomCurve3=!0;CatmullRomCurve3.prototype.getPoint=function(t,optionalTarget){optionalTarget=optionalTarget||new Vector3;var points=this.points,l=points.length;t*=l-(this.closed?0:1);
var intPoint=Math.floor(t);t-=intPoint;this.closed?intPoint+=0<intPoint?0:(Math.floor(Math.abs(intPoint)/l)+1)*l:0===t&&intPoint===l-1&&(intPoint=l-2,t=1);if(this.closed||0<intPoint)var p0=points[(intPoint-1)%l];else tmp$jscomp$0.subVectors(points[0],points[1]).add(points[0]),p0=tmp$jscomp$0;var p1=points[intPoint%l];var p2=points[(intPoint+1)%l];this.closed||intPoint+2<l?points=points[(intPoint+2)%l]:(tmp$jscomp$0.subVectors(points[l-1],points[l-2]).add(points[l-1]),points=tmp$jscomp$0);if("centripetal"===
this.curveType||"chordal"===this.curveType){var pow="chordal"===this.curveType?.5:.25;l=Math.pow(p0.distanceToSquared(p1),pow);intPoint=Math.pow(p1.distanceToSquared(p2),pow);pow=Math.pow(p2.distanceToSquared(points),pow);1E-4>intPoint&&(intPoint=1);1E-4>l&&(l=intPoint);1E-4>pow&&(pow=intPoint);px$jscomp$0.initNonuniformCatmullRom(p0.x,p1.x,p2.x,points.x,l,intPoint,pow);py$jscomp$0.initNonuniformCatmullRom(p0.y,p1.y,p2.y,points.y,l,intPoint,pow);pz.initNonuniformCatmullRom(p0.z,p1.z,p2.z,points.z,
l,intPoint,pow)}else"catmullrom"===this.curveType&&(px$jscomp$0.initCatmullRom(p0.x,p1.x,p2.x,points.x,this.tension),py$jscomp$0.initCatmullRom(p0.y,p1.y,p2.y,points.y,this.tension),pz.initCatmullRom(p0.z,p1.z,p2.z,points.z,this.tension));optionalTarget.set(px$jscomp$0.calc(t),py$jscomp$0.calc(t),pz.calc(t));return optionalTarget};CatmullRomCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.points=[];for(var _i273=0,l=source.points.length;_i273<l;_i273++)this.points.push(source.points[_i273].clone());
this.closed=source.closed;this.curveType=source.curveType;this.tension=source.tension;return this};CatmullRomCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.points=[];for(var _i274=0,l=this.points.length;_i274<l;_i274++)data.points.push(this.points[_i274].toArray());data.closed=this.closed;data.curveType=this.curveType;data.tension=this.tension;return data};CatmullRomCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];
for(var _i275=0,l=json.points.length;_i275<l;_i275++){var point=json.points[_i275];this.points.push((new Vector3).fromArray(point))}this.closed=json.closed;this.curveType=json.curveType;this.tension=json.tension;return this};CubicBezierCurve.prototype=Object.create(Curve.prototype);CubicBezierCurve.prototype.constructor=CubicBezierCurve;CubicBezierCurve.prototype.isCubicBezierCurve=!0;CubicBezierCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=optionalTarget||new Vector2;var v0=
this.v0,v1=this.v1,v2=this.v2,v3=this.v3;optionalTarget.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y));return optionalTarget};CubicBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this};CubicBezierCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();
data.v3=this.v3.toArray();return data};CubicBezierCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this};CubicBezierCurve3.prototype=Object.create(Curve.prototype);CubicBezierCurve3.prototype.constructor=CubicBezierCurve3;CubicBezierCurve3.prototype.isCubicBezierCurve3=!0;CubicBezierCurve3.prototype.getPoint=function(t,optionalTarget){optionalTarget=optionalTarget||
new Vector3;var v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;optionalTarget.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y),CubicBezier(t,v0.z,v1.z,v2.z,v3.z));return optionalTarget};CubicBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this};CubicBezierCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=
this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data};CubicBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this};LineCurve.prototype=Object.create(Curve.prototype);LineCurve.prototype.constructor=LineCurve;LineCurve.prototype.isLineCurve=!0;LineCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=
optionalTarget||new Vector2;1===t?optionalTarget.copy(this.v2):(optionalTarget.copy(this.v2).sub(this.v1),optionalTarget.multiplyScalar(t).add(this.v1));return optionalTarget};LineCurve.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget)};LineCurve.prototype.getTangent=function(t,optionalTarget){t=optionalTarget||new Vector2;t.copy(this.v2).sub(this.v1).normalize();return t};LineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);
this.v2.copy(source.v2);return this};LineCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data};LineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this};LineCurve3.prototype=Object.create(Curve.prototype);LineCurve3.prototype.constructor=LineCurve3;LineCurve3.prototype.isLineCurve3=!0;LineCurve3.prototype.getPoint=function(t,
optionalTarget){optionalTarget=optionalTarget||new Vector3;1===t?optionalTarget.copy(this.v2):(optionalTarget.copy(this.v2).sub(this.v1),optionalTarget.multiplyScalar(t).add(this.v1));return optionalTarget};LineCurve3.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget)};LineCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this};LineCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);
data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data};LineCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this};QuadraticBezierCurve.prototype=Object.create(Curve.prototype);QuadraticBezierCurve.prototype.constructor=QuadraticBezierCurve;QuadraticBezierCurve.prototype.isQuadraticBezierCurve=!0;QuadraticBezierCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=optionalTarget||new Vector2;
var v0=this.v0,v1=this.v1,v2=this.v2;optionalTarget.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y));return optionalTarget};QuadraticBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this};QuadraticBezierCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data};
QuadraticBezierCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this};QuadraticBezierCurve3.prototype=Object.create(Curve.prototype);QuadraticBezierCurve3.prototype.constructor=QuadraticBezierCurve3;QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=!0;QuadraticBezierCurve3.prototype.getPoint=function(t,optionalTarget){optionalTarget=optionalTarget||new Vector3;var v0=this.v0,
v1=this.v1,v2=this.v2;optionalTarget.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y),QuadraticBezier(t,v0.z,v1.z,v2.z));return optionalTarget};QuadraticBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this};QuadraticBezierCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();
return data};QuadraticBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this};SplineCurve.prototype=Object.create(Curve.prototype);SplineCurve.prototype.constructor=SplineCurve;SplineCurve.prototype.isSplineCurve=!0;SplineCurve.prototype.getPoint=function(t,optionalTarget){optionalTarget=optionalTarget||new Vector2;var points=this.points,p=(points.length-1)*t;t=Math.floor(p);
p-=t;var p0=points[0===t?t:t-1],p1=points[t],p2=points[t>points.length-2?points.length-1:t+1];points=points[t>points.length-3?points.length-1:t+2];optionalTarget.set(CatmullRom(p,p0.x,p1.x,p2.x,points.x),CatmullRom(p,p0.y,p1.y,p2.y,points.y));return optionalTarget};SplineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.points=[];for(var _i276=0,l=source.points.length;_i276<l;_i276++)this.points.push(source.points[_i276].clone());return this};SplineCurve.prototype.toJSON=
function(){var data=Curve.prototype.toJSON.call(this);data.points=[];for(var _i277=0,l=this.points.length;_i277<l;_i277++)data.points.push(this.points[_i277].toArray());return data};SplineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];for(var _i278=0,l=json.points.length;_i278<l;_i278++){var point=json.points[_i278];this.points.push((new Vector2).fromArray(point))}return this};var Curves=Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,
CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});CurvePath.prototype=Object.assign(Object.create(Curve.prototype),{constructor:CurvePath,add:function(curve){this.curves.push(curve)},closePath:function(){var startPoint=this.curves[0].getPoint(0),endPoint=this.curves[this.curves.length-1].getPoint(1);
startPoint.equals(endPoint)||this.curves.push(new LineCurve(endPoint,startPoint))},getPoint:function(t){var d=t*this.getLength(),curveLengths=this.getCurveLengths();for(t=0;t<curveLengths.length;){if(curveLengths[t]>=d)return d=curveLengths[t]-d,t=this.curves[t],curveLengths=t.getLength(),t.getPointAt(0===curveLengths?0:1-d/curveLengths);t++}return null},getLength:function(){var lens=this.getCurveLengths();return lens[lens.length-1]},updateArcLengths:function(){this.needsUpdate=!0;this.cacheLengths=
null;this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var lengths=[],sums=0,_i279=0,l=this.curves.length;_i279<l;_i279++)sums+=this.curves[_i279].getLength(),lengths.push(sums);return this.cacheLengths=lengths},getSpacedPoints:function(divisions){void 0===divisions&&(divisions=40);for(var points=[],_i280=0;_i280<=divisions;_i280++)points.push(this.getPoint(_i280/divisions));this.autoClose&&points.push(points[0]);
return points},getPoints:function(divisions){divisions=divisions||12;for(var points=[],last,_i281=0,curves=this.curves;_i281<curves.length;_i281++){var curve=curves[_i281];curve=curve.getPoints(curve&&curve.isEllipseCurve?2*divisions:curve&&(curve.isLineCurve||curve.isLineCurve3)?1:curve&&curve.isSplineCurve?divisions*curve.points.length:divisions);for(var j=0;j<curve.length;j++){var point=curve[j];last&&last.equals(point)||(points.push(point),last=point)}}this.autoClose&&1<points.length&&!points[points.length-
1].equals(points[0])&&points.push(points[0]);return points},copy:function(source){Curve.prototype.copy.call(this,source);this.curves=[];for(var _i282=0,l=source.curves.length;_i282<l;_i282++)this.curves.push(source.curves[_i282].clone());this.autoClose=source.autoClose;return this},toJSON:function(){var data=Curve.prototype.toJSON.call(this);data.autoClose=this.autoClose;data.curves=[];for(var _i283=0,l=this.curves.length;_i283<l;_i283++)data.curves.push(this.curves[_i283].toJSON());return data},
fromJSON:function(json){Curve.prototype.fromJSON.call(this,json);this.autoClose=json.autoClose;this.curves=[];for(var _i284=0,l=json.curves.length;_i284<l;_i284++){var curve=json.curves[_i284];this.curves.push((new Curves[curve.type]).fromJSON(curve))}return this}});Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function(points){this.moveTo(points[0].x,points[0].y);for(var _i285=1,l=points.length;_i285<l;_i285++)this.lineTo(points[_i285].x,points[_i285].y);
return this},moveTo:function(x,y){this.currentPoint.set(x,y);return this},lineTo:function(x,y){var curve=new LineCurve(this.currentPoint.clone(),new Vector2(x,y));this.curves.push(curve);this.currentPoint.set(x,y);return this},quadraticCurveTo:function(aCPx,aCPy,aX,aY){aCPx=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(aCPx,aCPy),new Vector2(aX,aY));this.curves.push(aCPx);this.currentPoint.set(aX,aY);return this},bezierCurveTo:function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){aCP1x=new CubicBezierCurve(this.currentPoint.clone(),
new Vector2(aCP1x,aCP1y),new Vector2(aCP2x,aCP2y),new Vector2(aX,aY));this.curves.push(aCP1x);this.currentPoint.set(aX,aY);return this},splineThru:function(pts){var npts=[this.currentPoint.clone()].concat(pts);npts=new SplineCurve(npts);this.curves.push(npts);this.currentPoint.copy(pts[pts.length-1]);return this},arc:function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absarc(aX+this.currentPoint.x,aY+this.currentPoint.y,aRadius,aStartAngle,aEndAngle,aClockwise);return this},absarc:function(aX,
aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);return this},ellipse:function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){this.absellipse(aX+this.currentPoint.x,aY+this.currentPoint.y,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);return this},absellipse:function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){aX=new EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,
aRotation);0<this.curves.length&&(aY=aX.getPoint(0),aY.equals(this.currentPoint)||this.lineTo(aY.x,aY.y));this.curves.push(aX);aX=aX.getPoint(1);this.currentPoint.copy(aX);return this},copy:function(source){CurvePath.prototype.copy.call(this,source);this.currentPoint.copy(source.currentPoint);return this},toJSON:function(){var data=CurvePath.prototype.toJSON.call(this);data.currentPoint=this.currentPoint.toArray();return data},fromJSON:function(json){CurvePath.prototype.fromJSON.call(this,json);this.currentPoint.fromArray(json.currentPoint);
return this}});Shape.prototype=Object.assign(Object.create(Path.prototype),{constructor:Shape,getPointsHoles:function(divisions){for(var holesPts=[],_i286=0,l=this.holes.length;_i286<l;_i286++)holesPts[_i286]=this.holes[_i286].getPoints(divisions);return holesPts},extractPoints:function(divisions){return{shape:this.getPoints(divisions),holes:this.getPointsHoles(divisions)}},copy:function(source){Path.prototype.copy.call(this,source);this.holes=[];for(var _i287=0,l=source.holes.length;_i287<l;_i287++)this.holes.push(source.holes[_i287].clone());
return this},toJSON:function(){var data=Path.prototype.toJSON.call(this);data.uuid=this.uuid;data.holes=[];for(var _i288=0,l=this.holes.length;_i288<l;_i288++)data.holes.push(this.holes[_i288].toJSON());return data},fromJSON:function(json){Path.prototype.fromJSON.call(this,json);this.uuid=json.uuid;this.holes=[];for(var _i289=0,l=json.holes.length;_i289<l;_i289++){var hole=json.holes[_i289];this.holes.push((new Path).fromJSON(hole))}return this}});Light.prototype=Object.assign(Object.create(Object3D.prototype),
{constructor:Light,isLight:!0,copy:function(source){Object3D.prototype.copy.call(this,source);this.color.copy(source.color);this.intensity=source.intensity;return this},toJSON:function(meta){meta=Object3D.prototype.toJSON.call(this,meta);meta.object.color=this.color.getHex();meta.object.intensity=this.intensity;void 0!==this.groundColor&&(meta.object.groundColor=this.groundColor.getHex());void 0!==this.distance&&(meta.object.distance=this.distance);void 0!==this.angle&&(meta.object.angle=this.angle);
void 0!==this.decay&&(meta.object.decay=this.decay);void 0!==this.penumbra&&(meta.object.penumbra=this.penumbra);void 0!==this.shadow&&(meta.object.shadow=this.shadow.toJSON());return meta}});HemisphereLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:HemisphereLight,isHemisphereLight:!0,copy:function(source){Light.prototype.copy.call(this,source);this.groundColor.copy(source.groundColor);return this}});Object.assign(LightShadow.prototype,{_projScreenMatrix:new Matrix4,_lightPositionWorld:new Vector3,
_lookTarget:new Vector3,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(light){var shadowCamera=this.camera,shadowMatrix=this.matrix,projScreenMatrix=this._projScreenMatrix,lookTarget=this._lookTarget,lightPositionWorld=this._lightPositionWorld;lightPositionWorld.setFromMatrixPosition(light.matrixWorld);shadowCamera.position.copy(lightPositionWorld);lookTarget.setFromMatrixPosition(light.target.matrixWorld);shadowCamera.lookAt(lookTarget);
shadowCamera.updateMatrixWorld();projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(projScreenMatrix);shadowMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);shadowMatrix.multiply(shadowCamera.projectionMatrix);shadowMatrix.multiply(shadowCamera.matrixWorldInverse)},getViewport:function(viewportIndex){return this._viewports[viewportIndex]},getFrameExtents:function(){return this._frameExtents},copy:function(source){this.camera=
source.camera.clone();this.bias=source.bias;this.radius=source.radius;this.mapSize.copy(source.mapSize);return this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var object={};0!==this.bias&&(object.bias=this.bias);0!==this.normalBias&&(object.normalBias=this.normalBias);1!==this.radius&&(object.radius=this.radius);if(512!==this.mapSize.x||512!==this.mapSize.y)object.mapSize=this.mapSize.toArray();object.camera=this.camera.toJSON(!1).object;delete object.camera.matrix;
return object}});SpotLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:SpotLightShadow,isSpotLightShadow:!0,updateMatrices:function(light){var camera=this.camera,fov=2*MathUtils.RAD2DEG*light.angle,aspect=this.mapSize.width/this.mapSize.height,far=light.distance||camera.far;if(fov!==camera.fov||aspect!==camera.aspect||far!==camera.far)camera.fov=fov,camera.aspect=aspect,camera.far=far,camera.updateProjectionMatrix();LightShadow.prototype.updateMatrices.call(this,
light)}});SpotLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:SpotLight,isSpotLight:!0,copy:function(source){Light.prototype.copy.call(this,source);this.distance=source.distance;this.angle=source.angle;this.penumbra=source.penumbra;this.decay=source.decay;this.target=source.target.clone();this.shadow=source.shadow.clone();return this}});PointLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:PointLightShadow,isPointLightShadow:!0,updateMatrices:function(light,
viewportIndex){void 0===viewportIndex&&(viewportIndex=0);var camera=this.camera,shadowMatrix=this.matrix,lightPositionWorld=this._lightPositionWorld,lookTarget=this._lookTarget,projScreenMatrix=this._projScreenMatrix;lightPositionWorld.setFromMatrixPosition(light.matrixWorld);camera.position.copy(lightPositionWorld);lookTarget.copy(camera.position);lookTarget.add(this._cubeDirections[viewportIndex]);camera.up.copy(this._cubeUps[viewportIndex]);camera.lookAt(lookTarget);camera.updateMatrixWorld();
shadowMatrix.makeTranslation(-lightPositionWorld.x,-lightPositionWorld.y,-lightPositionWorld.z);projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(projScreenMatrix)}});PointLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:PointLight,isPointLight:!0,copy:function(source){Light.prototype.copy.call(this,source);this.distance=source.distance;this.decay=source.decay;this.shadow=source.shadow.clone();return this}});
OrthographicCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:OrthographicCamera,isOrthographicCamera:!0,copy:function(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.left=source.left;this.right=source.right;this.top=source.top;this.bottom=source.bottom;this.near=source.near;this.far=source.far;this.zoom=source.zoom;this.view=null===source.view?null:Object.assign({},source.view);return this},setViewOffset:function(fullWidth,fullHeight,x,y,width,height){null===
this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},updateProjectionMatrix:function(){var dx=(this.right-this.left)/(2*this.zoom),dy=(this.top-this.bottom)/
(2*this.zoom),cx=(this.right+this.left)/2,cy=(this.top+this.bottom)/2,left=cx-dx;cx+=dx;dx=cy+dy;dy=cy-dy;null!==this.view&&this.view.enabled&&(cy=(this.right-this.left)/this.view.fullWidth/this.zoom,dy=(this.top-this.bottom)/this.view.fullHeight/this.zoom,left+=cy*this.view.offsetX,cx=left+cy*this.view.width,dx-=dy*this.view.offsetY,dy=dx-dy*this.view.height);this.projectionMatrix.makeOrthographic(left,cx,dx,dy,this.near,this.far);this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(meta){meta=
Object3D.prototype.toJSON.call(this,meta);meta.object.zoom=this.zoom;meta.object.left=this.left;meta.object.right=this.right;meta.object.top=this.top;meta.object.bottom=this.bottom;meta.object.near=this.near;meta.object.far=this.far;null!==this.view&&(meta.object.view=Object.assign({},this.view));return meta}});DirectionalLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:DirectionalLightShadow,isDirectionalLightShadow:!0,updateMatrices:function(light){LightShadow.prototype.updateMatrices.call(this,
light)}});DirectionalLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:DirectionalLight,isDirectionalLight:!0,copy:function(source){Light.prototype.copy.call(this,source);this.target=source.target.clone();this.shadow=source.shadow.clone();return this}});AmbientLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:AmbientLight,isAmbientLight:!0});RectAreaLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:RectAreaLight,isRectAreaLight:!0,
copy:function(source){Light.prototype.copy.call(this,source);this.width=source.width;this.height=source.height;return this},toJSON:function(meta){meta=Light.prototype.toJSON.call(this,meta);meta.object.width=this.width;meta.object.height=this.height;return meta}});Object.assign(SphericalHarmonics3.prototype,{isSphericalHarmonics3:!0,set:function(coefficients){for(var _i291=0;9>_i291;_i291++)this.coefficients[_i291].copy(coefficients[_i291]);return this},zero:function(){for(var _i292=0;9>_i292;_i292++)this.coefficients[_i292].set(0,
0,0);return this},getAt:function(normal,target){var x=normal.x,y=normal.y;normal=normal.z;var coeff=this.coefficients;target.copy(coeff[0]).multiplyScalar(.282095);target.addScaledVector(coeff[1],.488603*y);target.addScaledVector(coeff[2],.488603*normal);target.addScaledVector(coeff[3],.488603*x);target.addScaledVector(coeff[4],1.092548*x*y);target.addScaledVector(coeff[5],1.092548*y*normal);target.addScaledVector(coeff[6],.315392*(3*normal*normal-1));target.addScaledVector(coeff[7],1.092548*x*normal);
target.addScaledVector(coeff[8],.546274*(x*x-y*y));return target},getIrradianceAt:function(normal,target){var x=normal.x,y=normal.y;normal=normal.z;var coeff=this.coefficients;target.copy(coeff[0]).multiplyScalar(.886227);target.addScaledVector(coeff[1],1.023328*y);target.addScaledVector(coeff[2],1.023328*normal);target.addScaledVector(coeff[3],1.023328*x);target.addScaledVector(coeff[4],.858086*x*y);target.addScaledVector(coeff[5],.858086*y*normal);target.addScaledVector(coeff[6],.743125*normal*
normal-.247708);target.addScaledVector(coeff[7],.858086*x*normal);target.addScaledVector(coeff[8],.429043*(x*x-y*y));return target},add:function(sh){for(var _i293=0;9>_i293;_i293++)this.coefficients[_i293].add(sh.coefficients[_i293]);return this},addScaledSH:function(sh,s){for(var _i294=0;9>_i294;_i294++)this.coefficients[_i294].addScaledVector(sh.coefficients[_i294],s);return this},scale:function(s){for(var _i295=0;9>_i295;_i295++)this.coefficients[_i295].multiplyScalar(s);return this},lerp:function(sh,
alpha){for(var _i296=0;9>_i296;_i296++)this.coefficients[_i296].lerp(sh.coefficients[_i296],alpha);return this},equals:function(sh){for(var _i297=0;9>_i297;_i297++)if(!this.coefficients[_i297].equals(sh.coefficients[_i297]))return!1;return!0},copy:function(sh){return this.set(sh.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(array,offset){void 0===offset&&(offset=0);for(var coefficients=this.coefficients,_i298=0;9>_i298;_i298++)coefficients[_i298].fromArray(array,
offset+3*_i298);return this},toArray:function(array,offset){void 0===array&&(array=[]);void 0===offset&&(offset=0);for(var coefficients=this.coefficients,_i299=0;9>_i299;_i299++)coefficients[_i299].toArray(array,offset+3*_i299);return array}});Object.assign(SphericalHarmonics3,{getBasisAt:function(normal,shBasis){var x=normal.x,y=normal.y;normal=normal.z;shBasis[0]=.282095;shBasis[1]=.488603*y;shBasis[2]=.488603*normal;shBasis[3]=.488603*x;shBasis[4]=1.092548*x*y;shBasis[5]=1.092548*y*normal;shBasis[6]=
.315392*(3*normal*normal-1);shBasis[7]=1.092548*x*normal;shBasis[8]=.546274*(x*x-y*y)}});LightProbe.prototype=Object.assign(Object.create(Light.prototype),{constructor:LightProbe,isLightProbe:!0,copy:function(source){Light.prototype.copy.call(this,source);this.sh.copy(source.sh);return this},fromJSON:function(json){this.intensity=json.intensity;this.sh.fromArray(json.sh);return this},toJSON:function(meta){meta=Light.prototype.toJSON.call(this,meta);meta.object.sh=this.sh.toArray();return meta}});
MaterialLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:MaterialLoader,load:function(url,onLoad,onProgress,onError){var scope=this,loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)))}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}},onProgress,onError)},parse:function(json){function getTexture(name){void 0===textures[name]&&console.warn("THREE.MaterialLoader: Undefined texture",
name);return textures[name]}var textures=this.textures,material=new Materials[json.type];void 0!==json.uuid&&(material.uuid=json.uuid);void 0!==json.name&&(material.name=json.name);void 0!==json.color&&material.color.setHex(json.color);void 0!==json.roughness&&(material.roughness=json.roughness);void 0!==json.metalness&&(material.metalness=json.metalness);void 0!==json.sheen&&(material.sheen=(new Color).setHex(json.sheen));void 0!==json.emissive&&material.emissive.setHex(json.emissive);void 0!==json.specular&&
material.specular.setHex(json.specular);void 0!==json.shininess&&(material.shininess=json.shininess);void 0!==json.clearcoat&&(material.clearcoat=json.clearcoat);void 0!==json.clearcoatRoughness&&(material.clearcoatRoughness=json.clearcoatRoughness);void 0!==json.fog&&(material.fog=json.fog);void 0!==json.flatShading&&(material.flatShading=json.flatShading);void 0!==json.blending&&(material.blending=json.blending);void 0!==json.combine&&(material.combine=json.combine);void 0!==json.side&&(material.side=
json.side);void 0!==json.opacity&&(material.opacity=json.opacity);void 0!==json.transparent&&(material.transparent=json.transparent);void 0!==json.alphaTest&&(material.alphaTest=json.alphaTest);void 0!==json.depthTest&&(material.depthTest=json.depthTest);void 0!==json.depthWrite&&(material.depthWrite=json.depthWrite);void 0!==json.colorWrite&&(material.colorWrite=json.colorWrite);void 0!==json.stencilWrite&&(material.stencilWrite=json.stencilWrite);void 0!==json.stencilWriteMask&&(material.stencilWriteMask=
json.stencilWriteMask);void 0!==json.stencilFunc&&(material.stencilFunc=json.stencilFunc);void 0!==json.stencilRef&&(material.stencilRef=json.stencilRef);void 0!==json.stencilFuncMask&&(material.stencilFuncMask=json.stencilFuncMask);void 0!==json.stencilFail&&(material.stencilFail=json.stencilFail);void 0!==json.stencilZFail&&(material.stencilZFail=json.stencilZFail);void 0!==json.stencilZPass&&(material.stencilZPass=json.stencilZPass);void 0!==json.wireframe&&(material.wireframe=json.wireframe);
void 0!==json.wireframeLinewidth&&(material.wireframeLinewidth=json.wireframeLinewidth);void 0!==json.wireframeLinecap&&(material.wireframeLinecap=json.wireframeLinecap);void 0!==json.wireframeLinejoin&&(material.wireframeLinejoin=json.wireframeLinejoin);void 0!==json.rotation&&(material.rotation=json.rotation);1!==json.linewidth&&(material.linewidth=json.linewidth);void 0!==json.dashSize&&(material.dashSize=json.dashSize);void 0!==json.gapSize&&(material.gapSize=json.gapSize);void 0!==json.scale&&
(material.scale=json.scale);void 0!==json.polygonOffset&&(material.polygonOffset=json.polygonOffset);void 0!==json.polygonOffsetFactor&&(material.polygonOffsetFactor=json.polygonOffsetFactor);void 0!==json.polygonOffsetUnits&&(material.polygonOffsetUnits=json.polygonOffsetUnits);void 0!==json.skinning&&(material.skinning=json.skinning);void 0!==json.morphTargets&&(material.morphTargets=json.morphTargets);void 0!==json.morphNormals&&(material.morphNormals=json.morphNormals);void 0!==json.dithering&&
(material.dithering=json.dithering);void 0!==json.vertexTangents&&(material.vertexTangents=json.vertexTangents);void 0!==json.visible&&(material.visible=json.visible);void 0!==json.toneMapped&&(material.toneMapped=json.toneMapped);void 0!==json.userData&&(material.userData=json.userData);void 0!==json.vertexColors&&(material.vertexColors="number"===typeof json.vertexColors?0<json.vertexColors?!0:!1:json.vertexColors);if(void 0!==json.uniforms)for(var name$jscomp$0 in json.uniforms){var uniform=json.uniforms[name$jscomp$0];
material.uniforms[name$jscomp$0]={};switch(uniform.type){case "t":material.uniforms[name$jscomp$0].value=getTexture(uniform.value);break;case "c":material.uniforms[name$jscomp$0].value=(new Color).setHex(uniform.value);break;case "v2":material.uniforms[name$jscomp$0].value=(new Vector2).fromArray(uniform.value);break;case "v3":material.uniforms[name$jscomp$0].value=(new Vector3).fromArray(uniform.value);break;case "v4":material.uniforms[name$jscomp$0].value=(new Vector4).fromArray(uniform.value);
break;case "m3":material.uniforms[name$jscomp$0].value=(new Matrix3).fromArray(uniform.value);case "m4":material.uniforms[name$jscomp$0].value=(new Matrix4).fromArray(uniform.value);break;default:material.uniforms[name$jscomp$0].value=uniform.value}}void 0!==json.defines&&(material.defines=json.defines);void 0!==json.vertexShader&&(material.vertexShader=json.vertexShader);void 0!==json.fragmentShader&&(material.fragmentShader=json.fragmentShader);if(void 0!==json.extensions)for(var key in json.extensions)material.extensions[key]=
json.extensions[key];void 0!==json.shading&&(material.flatShading=1===json.shading);void 0!==json.size&&(material.size=json.size);void 0!==json.sizeAttenuation&&(material.sizeAttenuation=json.sizeAttenuation);void 0!==json.map&&(material.map=getTexture(json.map));void 0!==json.matcap&&(material.matcap=getTexture(json.matcap));void 0!==json.alphaMap&&(material.alphaMap=getTexture(json.alphaMap));void 0!==json.bumpMap&&(material.bumpMap=getTexture(json.bumpMap));void 0!==json.bumpScale&&(material.bumpScale=
json.bumpScale);void 0!==json.normalMap&&(material.normalMap=getTexture(json.normalMap));void 0!==json.normalMapType&&(material.normalMapType=json.normalMapType);void 0!==json.normalScale&&(name$jscomp$0=json.normalScale,!1===Array.isArray(name$jscomp$0)&&(name$jscomp$0=[name$jscomp$0,name$jscomp$0]),material.normalScale=(new Vector2).fromArray(name$jscomp$0));void 0!==json.displacementMap&&(material.displacementMap=getTexture(json.displacementMap));void 0!==json.displacementScale&&(material.displacementScale=
json.displacementScale);void 0!==json.displacementBias&&(material.displacementBias=json.displacementBias);void 0!==json.roughnessMap&&(material.roughnessMap=getTexture(json.roughnessMap));void 0!==json.metalnessMap&&(material.metalnessMap=getTexture(json.metalnessMap));void 0!==json.emissiveMap&&(material.emissiveMap=getTexture(json.emissiveMap));void 0!==json.emissiveIntensity&&(material.emissiveIntensity=json.emissiveIntensity);void 0!==json.specularMap&&(material.specularMap=getTexture(json.specularMap));
void 0!==json.envMap&&(material.envMap=getTexture(json.envMap));void 0!==json.envMapIntensity&&(material.envMapIntensity=json.envMapIntensity);void 0!==json.reflectivity&&(material.reflectivity=json.reflectivity);void 0!==json.refractionRatio&&(material.refractionRatio=json.refractionRatio);void 0!==json.lightMap&&(material.lightMap=getTexture(json.lightMap));void 0!==json.lightMapIntensity&&(material.lightMapIntensity=json.lightMapIntensity);void 0!==json.aoMap&&(material.aoMap=getTexture(json.aoMap));
void 0!==json.aoMapIntensity&&(material.aoMapIntensity=json.aoMapIntensity);void 0!==json.gradientMap&&(material.gradientMap=getTexture(json.gradientMap));void 0!==json.clearcoatMap&&(material.clearcoatMap=getTexture(json.clearcoatMap));void 0!==json.clearcoatRoughnessMap&&(material.clearcoatRoughnessMap=getTexture(json.clearcoatRoughnessMap));void 0!==json.clearcoatNormalMap&&(material.clearcoatNormalMap=getTexture(json.clearcoatNormalMap));void 0!==json.clearcoatNormalScale&&(material.clearcoatNormalScale=
(new Vector2).fromArray(json.clearcoatNormalScale));return material},setTextures:function(value){this.textures=value;return this}});var LoaderUtils={decodeText:function(array){if("undefined"!==typeof TextDecoder)return(new TextDecoder).decode(array);for(var s="",_i300=0,il=array.length;_i300<il;_i300++)s+=String.fromCharCode(array[_i300]);try{return decodeURIComponent(escape(s))}catch(e){return s}},extractUrlBase:function(url){var index=url.lastIndexOf("/");return-1===index?"./":url.substr(0,index+
1)}};exports.LoaderUtils=LoaderUtils;InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:!0,copy:function(source){BufferGeometry.prototype.copy.call(this,source);this.instanceCount=source.instanceCount;return this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var data=BufferGeometry.prototype.toJSON.call(this);data.instanceCount=this.instanceCount;data.isInstancedBufferGeometry=
!0;return data}});InstancedBufferAttribute.prototype=Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:!0,copy:function(source){BufferAttribute.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this},toJSON:function(){var data=BufferAttribute.prototype.toJSON.call(this);data.meshPerAttribute=this.meshPerAttribute;data.isInstancedBufferAttribute=!0;return data}});BufferGeometryLoader.prototype=
Object.assign(Object.create(Loader.prototype),{constructor:BufferGeometryLoader,load:function(url,onLoad,onProgress,onError){var scope=this,loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)))}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}},onProgress,onError)},parse:function(json$jscomp$0){function getInterleavedBuffer(json,uuid){if(void 0!==interleavedBufferMap[uuid])return interleavedBufferMap[uuid];
var interleavedBuffer=json.interleavedBuffers[uuid];var buffer=interleavedBuffer.buffer;void 0!==arrayBufferMap[buffer]?buffer=arrayBufferMap[buffer]:(json=(new Uint32Array(json.arrayBuffers[buffer])).buffer,buffer=arrayBufferMap[buffer]=json);buffer=new TYPED_ARRAYS[interleavedBuffer.type](buffer);buffer=new InterleavedBuffer(buffer,interleavedBuffer.stride);buffer.uuid=interleavedBuffer.uuid;return interleavedBufferMap[uuid]=buffer}var interleavedBufferMap={},arrayBufferMap={},geometry=json$jscomp$0.isInstancedBufferGeometry?
new InstancedBufferGeometry:new BufferGeometry,index=json$jscomp$0.data.index;void 0!==index&&(index=new TYPED_ARRAYS[index.type](index.array),geometry.setIndex(new BufferAttribute(index,1)));index=json$jscomp$0.data.attributes;for(var key in index){var attribute=index[key],bufferAttribute=void 0;attribute.isInterleavedBufferAttribute?(bufferAttribute=getInterleavedBuffer(json$jscomp$0.data,attribute.data),bufferAttribute=new InterleavedBufferAttribute(bufferAttribute,attribute.itemSize,attribute.offset,
attribute.normalized)):(bufferAttribute=new TYPED_ARRAYS[attribute.type](attribute.array),bufferAttribute=new (attribute.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute)(bufferAttribute,attribute.itemSize,attribute.normalized));void 0!==attribute.name&&(bufferAttribute.name=attribute.name);geometry.setAttribute(key,bufferAttribute)}if(key=json$jscomp$0.data.morphAttributes)for(var _key6 in key){index=key[_key6];attribute=[];bufferAttribute=0;for(var il=index.length;bufferAttribute<
il;bufferAttribute++){var _attribute8=index[bufferAttribute],_bufferAttribute=void 0;_attribute8.isInterleavedBufferAttribute?(_bufferAttribute=getInterleavedBuffer(json$jscomp$0.data,_attribute8.data),_bufferAttribute=new InterleavedBufferAttribute(_bufferAttribute,_attribute8.itemSize,_attribute8.offset,_attribute8.normalized)):(_bufferAttribute=new TYPED_ARRAYS[_attribute8.type](_attribute8.array),_bufferAttribute=new BufferAttribute(_bufferAttribute,_attribute8.itemSize,_attribute8.normalized));
void 0!==_attribute8.name&&(_bufferAttribute.name=_attribute8.name);attribute.push(_bufferAttribute)}geometry.morphAttributes[_key6]=attribute}json$jscomp$0.data.morphTargetsRelative&&(geometry.morphTargetsRelative=!0);_key6=json$jscomp$0.data.groups||json$jscomp$0.data.drawcalls||json$jscomp$0.data.offsets;if(void 0!==_key6)for(key=0,index=_key6.length;key!==index;++key)attribute=_key6[key],geometry.addGroup(attribute.start,attribute.count,attribute.materialIndex);_key6=json$jscomp$0.data.boundingSphere;
void 0!==_key6&&(key=new Vector3,void 0!==_key6.center&&key.fromArray(_key6.center),geometry.boundingSphere=new Sphere(key,_key6.radius));json$jscomp$0.name&&(geometry.name=json$jscomp$0.name);json$jscomp$0.userData&&(geometry.userData=json$jscomp$0.userData);return geometry}});var TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!==typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,
Float32Array:Float32Array,Float64Array:Float64Array};ObjectLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ObjectLoader,load:function(url,onLoad,onProgress,onError){var scope=this,path=""===this.path?LoaderUtils.extractUrlBase(url):this.path;this.resourcePath=this.resourcePath||path;path=new FileLoader(scope.manager);path.setPath(this.path);path.load(url,function(text){var json=null;try{json=JSON.parse(text)}catch(error){void 0!==onError&&onError(error);console.error("THREE:ObjectLoader: Can't parse "+
url+".",error.message);return}text=json.metadata;void 0===text||void 0===text.type||"geometry"===text.type.toLowerCase()?console.error("THREE.ObjectLoader: Can't load "+url):scope.parse(json,onLoad)},onProgress,onError)},parse:function(json,onLoad){var shapes=this.parseShape(json.shapes);shapes=this.parseGeometries(json.geometries,shapes);var images=this.parseImages(json.images,function(){void 0!==onLoad&&onLoad(object)});images=this.parseTextures(json.textures,images);images=this.parseMaterials(json.materials,
images);var object=this.parseObject(json.object,shapes,images);json.animations&&(object.animations=this.parseAnimations(json.animations));void 0!==json.images&&0!==json.images.length||void 0===onLoad||onLoad(object);return object},parseShape:function(json){var shapes={};if(void 0!==json)for(var _i303=0,l=json.length;_i303<l;_i303++){var shape=(new Shape).fromJSON(json[_i303]);shapes[shape.uuid]=shape}return shapes},parseGeometries:function(json,shapes){var geometries={};if(void 0!==json)for(var bufferGeometryLoader=
new BufferGeometryLoader,_i304=0,l=json.length;_i304<l;_i304++){var geometryShapes=void 0;var data=json[_i304];switch(data.type){case "PlaneGeometry":case "PlaneBufferGeometry":geometryShapes=new Geometries[data.type](data.width,data.height,data.widthSegments,data.heightSegments);break;case "BoxGeometry":case "BoxBufferGeometry":case "CubeGeometry":geometryShapes=new Geometries[data.type](data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);break;case "CircleGeometry":case "CircleBufferGeometry":geometryShapes=
new Geometries[data.type](data.radius,data.segments,data.thetaStart,data.thetaLength);break;case "CylinderGeometry":case "CylinderBufferGeometry":geometryShapes=new Geometries[data.type](data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case "ConeGeometry":case "ConeBufferGeometry":geometryShapes=new Geometries[data.type](data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,
data.thetaLength);break;case "SphereGeometry":case "SphereBufferGeometry":geometryShapes=new Geometries[data.type](data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case "DodecahedronGeometry":case "DodecahedronBufferGeometry":case "IcosahedronGeometry":case "IcosahedronBufferGeometry":case "OctahedronGeometry":case "OctahedronBufferGeometry":case "TetrahedronGeometry":case "TetrahedronBufferGeometry":geometryShapes=new Geometries[data.type](data.radius,
data.detail);break;case "RingGeometry":case "RingBufferGeometry":geometryShapes=new Geometries[data.type](data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength);break;case "TorusGeometry":case "TorusBufferGeometry":geometryShapes=new Geometries[data.type](data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case "TorusKnotGeometry":case "TorusKnotBufferGeometry":geometryShapes=new Geometries[data.type](data.radius,data.tube,
data.tubularSegments,data.radialSegments,data.p,data.q);break;case "TubeGeometry":case "TubeBufferGeometry":geometryShapes=new Geometries[data.type]((new Curves[data.path.type]).fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed);break;case "LatheGeometry":case "LatheBufferGeometry":geometryShapes=new Geometries[data.type](data.points,data.segments,data.phiStart,data.phiLength);break;case "PolyhedronGeometry":case "PolyhedronBufferGeometry":geometryShapes=new Geometries[data.type](data.vertices,
data.indices,data.radius,data.details);break;case "ShapeGeometry":case "ShapeBufferGeometry":geometryShapes=[];for(var j=0,jl=data.shapes.length;j<jl;j++)geometryShapes.push(shapes[data.shapes[j]]);geometryShapes=new Geometries[data.type](geometryShapes,data.curveSegments);break;case "ExtrudeGeometry":case "ExtrudeBufferGeometry":geometryShapes=[];j=0;for(jl=data.shapes.length;j<jl;j++)geometryShapes.push(shapes[data.shapes[j]]);j=data.options.extrudePath;void 0!==j&&(data.options.extrudePath=(new Curves[j.type]).fromJSON(j));
geometryShapes=new Geometries[data.type](geometryShapes,data.options);break;case "BufferGeometry":case "InstancedBufferGeometry":geometryShapes=bufferGeometryLoader.parse(data);break;case "Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+data.type+'"');continue}geometryShapes.uuid=data.uuid;void 0!==data.name&&(geometryShapes.name=data.name);!0===geometryShapes.isBufferGeometry&&
void 0!==data.userData&&(geometryShapes.userData=data.userData);geometries[data.uuid]=geometryShapes}return geometries},parseMaterials:function(json,textures){var cache={},materials={};if(void 0!==json){var loader=new MaterialLoader;loader.setTextures(textures);textures=0;for(var l=json.length;textures<l;textures++){var data=json[textures];if("MultiMaterial"===data.type){for(var array=[],j=0;j<data.materials.length;j++){var material=data.materials[j];void 0===cache[material.uuid]&&(cache[material.uuid]=
loader.parse(material));array.push(cache[material.uuid])}materials[data.uuid]=array}else void 0===cache[data.uuid]&&(cache[data.uuid]=loader.parse(data)),materials[data.uuid]=cache[data.uuid]}}return materials},parseAnimations:function(json){for(var animations=[],_i306=0;_i306<json.length;_i306++){var data=json[_i306],clip=AnimationClip.parse(data);void 0!==data.uuid&&(clip.uuid=data.uuid);animations.push(clip)}return animations},parseImages:function(json,onLoad){function loadImage(url){scope.manager.itemStart(url);
return loader.load(url,function(){scope.manager.itemEnd(url)},void 0,function(){scope.manager.itemError(url);scope.manager.itemEnd(url)})}var scope=this,images={};if(void 0!==json&&0<json.length){onLoad=new LoadingManager(onLoad);var loader=new ImageLoader(onLoad);loader.setCrossOrigin(this.crossOrigin);onLoad=0;for(var il=json.length;onLoad<il;onLoad++){var image=json[onLoad],url$jscomp$0=image.url;if(Array.isArray(url$jscomp$0)){images[image.uuid]=[];for(var j=0,jl=url$jscomp$0.length;j<jl;j++){var currentUrl=
url$jscomp$0[j];currentUrl=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(currentUrl)?currentUrl:scope.resourcePath+currentUrl;images[image.uuid].push(loadImage(currentUrl))}}else url$jscomp$0=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(image.url)?image.url:scope.resourcePath+image.url,images[image.uuid]=loadImage(url$jscomp$0)}}return images},parseTextures:function(json,images){function parseConstant(value,type){if("number"===typeof value)return value;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",
value);return type[value]}var textures={};if(void 0!==json)for(var _i308=0,l=json.length;_i308<l;_i308++){var data=json[_i308];void 0===data.image&&console.warn('THREE.ObjectLoader: No "image" specified for',data.uuid);void 0===images[data.image]&&console.warn("THREE.ObjectLoader: Undefined image",data.image);var texture=void 0;texture=Array.isArray(images[data.image])?new CubeTexture(images[data.image]):new Texture(images[data.image]);texture.needsUpdate=!0;texture.uuid=data.uuid;void 0!==data.name&&
(texture.name=data.name);void 0!==data.mapping&&(texture.mapping=parseConstant(data.mapping,TEXTURE_MAPPING));void 0!==data.offset&&texture.offset.fromArray(data.offset);void 0!==data.repeat&&texture.repeat.fromArray(data.repeat);void 0!==data.center&&texture.center.fromArray(data.center);void 0!==data.rotation&&(texture.rotation=data.rotation);void 0!==data.wrap&&(texture.wrapS=parseConstant(data.wrap[0],TEXTURE_WRAPPING),texture.wrapT=parseConstant(data.wrap[1],TEXTURE_WRAPPING));void 0!==data.format&&
(texture.format=data.format);void 0!==data.type&&(texture.type=data.type);void 0!==data.encoding&&(texture.encoding=data.encoding);void 0!==data.minFilter&&(texture.minFilter=parseConstant(data.minFilter,TEXTURE_FILTER));void 0!==data.magFilter&&(texture.magFilter=parseConstant(data.magFilter,TEXTURE_FILTER));void 0!==data.anisotropy&&(texture.anisotropy=data.anisotropy);void 0!==data.flipY&&(texture.flipY=data.flipY);void 0!==data.premultiplyAlpha&&(texture.premultiplyAlpha=data.premultiplyAlpha);
void 0!==data.unpackAlignment&&(texture.unpackAlignment=data.unpackAlignment);textures[data.uuid]=texture}return textures},parseObject:function(data,geometries,materials){function getGeometry(name){void 0===geometries[name]&&console.warn("THREE.ObjectLoader: Undefined geometry",name);return geometries[name]}function getMaterial(name){if(void 0!==name){if(Array.isArray(name)){for(var array=[],_i309=0,l=name.length;_i309<l;_i309++){var uuid=name[_i309];void 0===materials[uuid]&&console.warn("THREE.ObjectLoader: Undefined material",
uuid);array.push(materials[uuid])}return array}void 0===materials[name]&&console.warn("THREE.ObjectLoader: Undefined material",name);return materials[name]}}switch(data.type){case "Scene":var object=new Scene;void 0!==data.background&&Number.isInteger(data.background)&&(object.background=new Color(data.background));void 0!==data.fog&&("Fog"===data.fog.type?object.fog=new Fog(data.fog.color,data.fog.near,data.fog.far):"FogExp2"===data.fog.type&&(object.fog=new FogExp2(data.fog.color,data.fog.density)));
break;case "PerspectiveCamera":object=new PerspectiveCamera(data.fov,data.aspect,data.near,data.far);void 0!==data.focus&&(object.focus=data.focus);void 0!==data.zoom&&(object.zoom=data.zoom);void 0!==data.filmGauge&&(object.filmGauge=data.filmGauge);void 0!==data.filmOffset&&(object.filmOffset=data.filmOffset);void 0!==data.view&&(object.view=Object.assign({},data.view));break;case "OrthographicCamera":object=new OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);void 0!==
data.zoom&&(object.zoom=data.zoom);void 0!==data.view&&(object.view=Object.assign({},data.view));break;case "AmbientLight":object=new AmbientLight(data.color,data.intensity);break;case "DirectionalLight":object=new DirectionalLight(data.color,data.intensity);break;case "PointLight":object=new PointLight(data.color,data.intensity,data.distance,data.decay);break;case "RectAreaLight":object=new RectAreaLight(data.color,data.intensity,data.width,data.height);break;case "SpotLight":object=new SpotLight(data.color,
data.intensity,data.distance,data.angle,data.penumbra,data.decay);break;case "HemisphereLight":object=new HemisphereLight(data.color,data.groundColor,data.intensity);break;case "LightProbe":object=(new LightProbe).fromJSON(data);break;case "SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case "Mesh":object=getGeometry(data.geometry);var material=getMaterial(data.material);object=new Mesh(object,material);break;case "InstancedMesh":object=getGeometry(data.geometry);
material=getMaterial(data.material);var instanceMatrix=data.instanceMatrix;object=new InstancedMesh(object,material,data.count);object.instanceMatrix=new BufferAttribute(new Float32Array(instanceMatrix.array),16);break;case "LOD":object=new LOD;break;case "Line":object=new Line(getGeometry(data.geometry),getMaterial(data.material),data.mode);break;case "LineLoop":object=new LineLoop(getGeometry(data.geometry),getMaterial(data.material));break;case "LineSegments":object=new LineSegments(getGeometry(data.geometry),
getMaterial(data.material));break;case "PointCloud":case "Points":object=new Points(getGeometry(data.geometry),getMaterial(data.material));break;case "Sprite":object=new Sprite(getMaterial(data.material));break;case "Group":object=new Group;break;default:object=new Object3D}object.uuid=data.uuid;void 0!==data.name&&(object.name=data.name);void 0!==data.matrix?(object.matrix.fromArray(data.matrix),void 0!==data.matrixAutoUpdate&&(object.matrixAutoUpdate=data.matrixAutoUpdate),object.matrixAutoUpdate&&
object.matrix.decompose(object.position,object.quaternion,object.scale)):(void 0!==data.position&&object.position.fromArray(data.position),void 0!==data.rotation&&object.rotation.fromArray(data.rotation),void 0!==data.quaternion&&object.quaternion.fromArray(data.quaternion),void 0!==data.scale&&object.scale.fromArray(data.scale));void 0!==data.castShadow&&(object.castShadow=data.castShadow);void 0!==data.receiveShadow&&(object.receiveShadow=data.receiveShadow);data.shadow&&(void 0!==data.shadow.bias&&
(object.shadow.bias=data.shadow.bias),void 0!==data.shadow.normalBias&&(object.shadow.normalBias=data.shadow.normalBias),void 0!==data.shadow.radius&&(object.shadow.radius=data.shadow.radius),void 0!==data.shadow.mapSize&&object.shadow.mapSize.fromArray(data.shadow.mapSize),void 0!==data.shadow.camera&&(object.shadow.camera=this.parseObject(data.shadow.camera)));void 0!==data.visible&&(object.visible=data.visible);void 0!==data.frustumCulled&&(object.frustumCulled=data.frustumCulled);void 0!==data.renderOrder&&
(object.renderOrder=data.renderOrder);void 0!==data.userData&&(object.userData=data.userData);void 0!==data.layers&&(object.layers.mask=data.layers);if(void 0!==data.children)for(instanceMatrix=data.children,material=0;material<instanceMatrix.length;material++)object.add(this.parseObject(instanceMatrix[material],geometries,materials));if("LOD"===data.type)for(void 0!==data.autoUpdate&&(object.autoUpdate=data.autoUpdate),data=data.levels,instanceMatrix=0;instanceMatrix<data.length;instanceMatrix++){material=
data[instanceMatrix];var child=object.getObjectByProperty("uuid",material.object);void 0!==child&&object.addLevel(child,material.distance)}return object}});var TEXTURE_MAPPING={UVMapping:300,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping},
TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};ImageBitmapLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageBitmapLoader,
isImageBitmapLoader:!0,setOptions:function(options){this.options=options;return this},load:function(url,onLoad,onProgress,onError){void 0===url&&(url="");void 0!==this.path&&(url=this.path+url);url=this.manager.resolveURL(url);var scope=this,cached=Cache.get(url);if(void 0!==cached)return scope.manager.itemStart(url),setTimeout(function(){onLoad&&onLoad(cached);scope.manager.itemEnd(url)},0),cached;fetch(url).then(function(res){return res.blob()}).then(function(blob){return createImageBitmap(blob,
scope.options)}).then(function(imageBitmap){Cache.add(url,imageBitmap);onLoad&&onLoad(imageBitmap);scope.manager.itemEnd(url)})["catch"](function(e){onError&&onError(e);scope.manager.itemError(url);scope.manager.itemEnd(url)});scope.manager.itemStart(url)}});Object.assign(ShapePath.prototype,{moveTo:function(x,y){this.currentPath=new Path;this.subPaths.push(this.currentPath);this.currentPath.moveTo(x,y);return this},lineTo:function(x,y){this.currentPath.lineTo(x,y);return this},quadraticCurveTo:function(aCPx,
aCPy,aX,aY){this.currentPath.quadraticCurveTo(aCPx,aCPy,aX,aY);return this},bezierCurveTo:function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){this.currentPath.bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY);return this},splineThru:function(pts){this.currentPath.splineThru(pts);return this},toShapes:function(isCCW,noHoles){function toShapesNoHoles(inSubpaths){for(var shapes=[],_i311=0,l=inSubpaths.length;_i311<l;_i311++){var _tmpPath=inSubpaths[_i311],_tmpShape=new Shape;_tmpShape.curves=_tmpPath.curves;shapes.push(_tmpShape)}return shapes}
function isPointInsidePolygon(inPt,inPolygon){for(var polyLen=inPolygon.length,inside=!1,p=polyLen-1,q=0;q<polyLen;p=q++){var edgeLowPt=inPolygon[p],edgeHighPt=inPolygon[q],edgeDx=edgeHighPt.x-edgeLowPt.x,edgeDy=edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>Number.EPSILON){if(0>edgeDy&&(edgeLowPt=inPolygon[q],edgeDx=-edgeDx,edgeHighPt=inPolygon[p],edgeDy=-edgeDy),!(inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y))if(inPt.y===edgeLowPt.y){if(inPt.x===edgeLowPt.x)return!0}else{p=edgeDy*(inPt.x-edgeLowPt.x)-
edgeDx*(inPt.y-edgeLowPt.y);if(0===p)return!0;0>p||(inside=!inside)}}else if(inPt.y===edgeLowPt.y&&(edgeHighPt.x<=inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x))return!0}return inside}var isClockWise=ShapeUtils.isClockWise,subPaths=this.subPaths;if(0===subPaths.length)return[];if(!0===noHoles)return toShapesNoHoles(subPaths);noHoles=[];if(1===subPaths.length){var tmpPath=subPaths[0];var tmpShape=new Shape;tmpShape.curves=tmpPath.curves;noHoles.push(tmpShape);return noHoles}var holesFirst=
!isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;tmpShape=[];var newShapes=[],newShapeHoles=[],mainIdx=0;newShapes[mainIdx]=void 0;newShapeHoles[mainIdx]=[];for(var _i312=0,l$jscomp$0=subPaths.length;_i312<l$jscomp$0;_i312++){tmpPath=subPaths[_i312];var tmpPoints=tmpPath.getPoints();var solid=isClockWise(tmpPoints);(solid=isCCW?!solid:solid)?(!holesFirst&&newShapes[mainIdx]&&mainIdx++,newShapes[mainIdx]={s:new Shape,p:tmpPoints},newShapes[mainIdx].s.curves=tmpPath.curves,
holesFirst&&mainIdx++,newShapeHoles[mainIdx]=[]):newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]})}if(!newShapes[0])return toShapesNoHoles(subPaths);if(1<newShapes.length){isCCW=!1;isClockWise=[];subPaths=0;for(tmpPath=newShapes.length;subPaths<tmpPath;subPaths++)tmpShape[subPaths]=[];subPaths=0;for(tmpPath=newShapes.length;subPaths<tmpPath;subPaths++)for(solid=newShapeHoles[subPaths],holesFirst=0;holesFirst<solid.length;holesFirst++){mainIdx=solid[holesFirst];tmpPoints=!0;for(_i312=0;_i312<
newShapes.length;_i312++)isPointInsidePolygon(mainIdx.p,newShapes[_i312].p)&&(subPaths!==_i312&&isClockWise.push({froms:subPaths,tos:_i312,hole:holesFirst}),tmpPoints?(tmpPoints=!1,tmpShape[_i312].push(mainIdx)):isCCW=!0);tmpPoints&&tmpShape[subPaths].push(mainIdx)}0<isClockWise.length&&(isCCW||(newShapeHoles=tmpShape))}isClockWise=0;for(subPaths=newShapes.length;isClockWise<subPaths;isClockWise++)for(tmpShape=newShapes[isClockWise].s,noHoles.push(tmpShape),isCCW=newShapeHoles[isClockWise],tmpPath=
0,solid=isCCW.length;tmpPath<solid;tmpPath++)tmpShape.holes.push(isCCW[tmpPath].h);return noHoles}});Object.assign(Font.prototype,{isFont:!0,generateShapes:function(text,size$jscomp$0){void 0===size$jscomp$0&&(size$jscomp$0=100);var shapes=[],size=size$jscomp$0;size$jscomp$0=this.data;var chars=Array.from?Array.from(text):String(text).split("");size/=size$jscomp$0.resolution;var line_height=(size$jscomp$0.boundingBox.yMax-size$jscomp$0.boundingBox.yMin+size$jscomp$0.underlineThickness)*size;text=
[];for(var offsetX=0,offsetY=0,_i314=0;_i314<chars.length;_i314++){var _char=chars[_i314];if("\n"===_char)offsetX=0,offsetY-=line_height;else{var _char2=_char;_char=size;var offsetX$jscomp$0=offsetX,offsetY$jscomp$0=offsetY,data=size$jscomp$0,glyph=data.glyphs[_char2]||data.glyphs["?"];if(glyph){_char2=new ShapePath;if(glyph.o){data=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(" "));for(var _i315=0,l=data.length;_i315<l;)switch(data[_i315++]){case "m":var cpx2=data[_i315++]*_char+offsetX$jscomp$0;
var cpy2=data[_i315++]*_char+offsetY$jscomp$0;_char2.moveTo(cpx2,cpy2);break;case "l":cpx2=data[_i315++]*_char+offsetX$jscomp$0;cpy2=data[_i315++]*_char+offsetY$jscomp$0;_char2.lineTo(cpx2,cpy2);break;case "q":var cpx=data[_i315++]*_char+offsetX$jscomp$0;var cpy=data[_i315++]*_char+offsetY$jscomp$0;var cpx1=data[_i315++]*_char+offsetX$jscomp$0;var cpy1=data[_i315++]*_char+offsetY$jscomp$0;_char2.quadraticCurveTo(cpx1,cpy1,cpx,cpy);break;case "b":cpx=data[_i315++]*_char+offsetX$jscomp$0,cpy=data[_i315++]*
_char+offsetY$jscomp$0,cpx1=data[_i315++]*_char+offsetX$jscomp$0,cpy1=data[_i315++]*_char+offsetY$jscomp$0,cpx2=data[_i315++]*_char+offsetX$jscomp$0,cpy2=data[_i315++]*_char+offsetY$jscomp$0,_char2.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,cpx,cpy)}}_char={offsetX:glyph.ha*_char,path:_char2}}else console.error('THREE.Font: character "'+_char2+'" does not exists in font family '+data.familyName+"."),_char=void 0;offsetX+=_char.offsetX;text.push(_char.path)}}size$jscomp$0=0;for(chars=text.length;size$jscomp$0<
chars;size$jscomp$0++)Array.prototype.push.apply(shapes,text[size$jscomp$0].toShapes());return shapes}});FontLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FontLoader,load:function(url,onLoad,onProgress,onError){var scope=this,loader=new FileLoader(this.manager);loader.setPath(this.path);loader.load(url,function(text){try{var json=JSON.parse(text)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),json=JSON.parse(text.substring(65,
text.length-2))}text=scope.parse(json);onLoad&&onLoad(text)},onProgress,onError)},parse:function(json){return new Font(json)}});var _context$jscomp$0,AudioContext={getContext:function(){void 0===_context$jscomp$0&&(_context$jscomp$0=new (window.AudioContext||window.webkitAudioContext));return _context$jscomp$0},setContext:function(value){_context$jscomp$0=value}};exports.AudioContext=AudioContext;AudioLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AudioLoader,load:function(url,
onLoad,onProgress,onError){var scope=this,loader=new FileLoader(scope.manager);loader.setResponseType("arraybuffer");loader.setPath(scope.path);loader.load(url,function(buffer){try{var bufferCopy=buffer.slice(0);AudioContext.getContext().decodeAudioData(bufferCopy,function(audioBuffer){onLoad(audioBuffer)})}catch(e){onError?onError(e):console.error(e),scope.manager.itemError(url)}},onProgress,onError)}});HemisphereLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:HemisphereLightProbe,
isHemisphereLightProbe:!0,copy:function(source){LightProbe.prototype.copy.call(this,source);return this},toJSON:function(meta){return LightProbe.prototype.toJSON.call(this,meta)}});AmbientLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:AmbientLightProbe,isAmbientLightProbe:!0,copy:function(source){LightProbe.prototype.copy.call(this,source);return this},toJSON:function(meta){return LightProbe.prototype.toJSON.call(this,meta)}});var _eyeRight=new Matrix4,_eyeLeft=
new Matrix4;Object.assign(StereoCamera.prototype,{update:function(camera){var cache=this._cache;if(cache.focus!==camera.focus||cache.fov!==camera.fov||cache.aspect!==camera.aspect*this.aspect||cache.near!==camera.near||cache.far!==camera.far||cache.zoom!==camera.zoom||cache.eyeSep!==this.eyeSep){cache.focus=camera.focus;cache.fov=camera.fov;cache.aspect=camera.aspect*this.aspect;cache.near=camera.near;cache.far=camera.far;cache.zoom=camera.zoom;cache.eyeSep=this.eyeSep;var projectionMatrix=camera.projectionMatrix.clone(),
eyeSepHalf=cache.eyeSep/2,eyeSepOnProjection=eyeSepHalf*cache.near/cache.focus,ymax=cache.near*Math.tan(MathUtils.DEG2RAD*cache.fov*.5)/cache.zoom;_eyeLeft.elements[12]=-eyeSepHalf;_eyeRight.elements[12]=eyeSepHalf;eyeSepHalf=-ymax*cache.aspect+eyeSepOnProjection;var xmax=ymax*cache.aspect+eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-eyeSepHalf);projectionMatrix.elements[8]=(xmax+eyeSepHalf)/(xmax-eyeSepHalf);this.cameraL.projectionMatrix.copy(projectionMatrix);eyeSepHalf=-ymax*
cache.aspect-eyeSepOnProjection;xmax=ymax*cache.aspect-eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-eyeSepHalf);projectionMatrix.elements[8]=(xmax+eyeSepHalf)/(xmax-eyeSepHalf);this.cameraR.projectionMatrix.copy(projectionMatrix)}this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight)}});Object.assign(Clock.prototype,{start:function(){this.oldTime=this.startTime=("undefined"===typeof performance?
Date:performance).now();this.elapsedTime=0;this.running=!0},stop:function(){this.getElapsedTime();this.autoStart=this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var diff=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var newTime=("undefined"===typeof performance?Date:performance).now();diff=(newTime-this.oldTime)/1E3;this.oldTime=newTime;this.elapsedTime+=diff}return diff}});var _position$2=new Vector3,_quaternion$3=
new Quaternion,_scale$1=new Vector3,_orientation=new Vector3;AudioListener.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:AudioListener,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null);return this},getFilter:function(){return this.filter},setFilter:function(value){null!==this.filter?(this.gain.disconnect(this.filter),
this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination);this.filter=value;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,.01);return this},updateMatrixWorld:function(force){Object3D.prototype.updateMatrixWorld.call(this,force);force=this.context.listener;var up=this.up;
this.timeDelta=this._clock.getDelta();this.matrixWorld.decompose(_position$2,_quaternion$3,_scale$1);_orientation.set(0,0,-1).applyQuaternion(_quaternion$3);if(force.positionX){var endTime=this.context.currentTime+this.timeDelta;force.positionX.linearRampToValueAtTime(_position$2.x,endTime);force.positionY.linearRampToValueAtTime(_position$2.y,endTime);force.positionZ.linearRampToValueAtTime(_position$2.z,endTime);force.forwardX.linearRampToValueAtTime(_orientation.x,endTime);force.forwardY.linearRampToValueAtTime(_orientation.y,
endTime);force.forwardZ.linearRampToValueAtTime(_orientation.z,endTime);force.upX.linearRampToValueAtTime(up.x,endTime);force.upY.linearRampToValueAtTime(up.y,endTime);force.upZ.linearRampToValueAtTime(up.z,endTime)}else force.setPosition(_position$2.x,_position$2.y,_position$2.z),force.setOrientation(_orientation.x,_orientation.y,_orientation.z,up.x,up.y,up.z)}});Audio.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Audio,getOutput:function(){return this.gain},setNodeSource:function(audioNode){this.hasPlaybackControl=
!1;this.sourceType="audioNode";this.source=audioNode;this.connect();return this},setMediaElementSource:function(mediaElement){this.hasPlaybackControl=!1;this.sourceType="mediaNode";this.source=this.context.createMediaElementSource(mediaElement);this.connect();return this},setMediaStreamSource:function(mediaStream){this.hasPlaybackControl=!1;this.sourceType="mediaStreamNode";this.source=this.context.createMediaStreamSource(mediaStream);this.connect();return this},setBuffer:function(audioBuffer){this.buffer=
audioBuffer;this.sourceType="buffer";this.autoplay&&this.play();return this},play:function(delay){void 0===delay&&(delay=0);if(!0===this.isPlaying)console.warn("THREE.Audio: Audio is already playing.");else if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this._startedAt=this.context.currentTime+delay,delay=this.context.createBufferSource(),delay.buffer=this.buffer,delay.loop=this.loop,delay.loopStart=this.loopStart,delay.loopEnd=this.loopEnd,
delay.onended=this.onEnded.bind(this),delay.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=delay,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress%=this.duration||
this.buffer.duration),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this},stop:function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this},connect:function(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(var _i316=1,l=this.filters.length;_i316<l;_i316++)this.filters[_i316-1].connect(this.filters[_i316]);this.filters[this.filters.length-
1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(var _i317=1,l=this.filters.length;_i317<l;_i317++)this.filters[_i317-1].disconnect(this.filters[_i317]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(value){value||(value=[]);!0===this.isPlaying?
(this.disconnect(),this.filters=value,this.connect()):this.filters=value;return this},setDetune:function(value){this.detune=value;if(void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(filter){return this.setFilters(filter?[filter]:[])},setPlaybackRate:function(value){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");
else return this.playbackRate=value,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(value){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.loop=
value,!0===this.isPlaying&&(this.source.loop=this.loop),this},setLoopStart:function(value){this.loopStart=value;return this},setLoopEnd:function(value){this.loopEnd=value;return this},getVolume:function(){return this.gain.gain.value},setVolume:function(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,.01);return this}});var _position$3=new Vector3,_quaternion$4=new Quaternion,_scale$2=new Vector3,_orientation$1=new Vector3;PositionalAudio.prototype=Object.assign(Object.create(Audio.prototype),
{constructor:PositionalAudio,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(value){this.panner.refDistance=value;return this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(value){this.panner.rolloffFactor=value;return this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(value){this.panner.distanceModel=value;return this},getMaxDistance:function(){return this.panner.maxDistance},
setMaxDistance:function(value){this.panner.maxDistance=value;return this},setDirectionalCone:function(coneInnerAngle,coneOuterAngle,coneOuterGain){this.panner.coneInnerAngle=coneInnerAngle;this.panner.coneOuterAngle=coneOuterAngle;this.panner.coneOuterGain=coneOuterGain;return this},updateMatrixWorld:function(force){Object3D.prototype.updateMatrixWorld.call(this,force);if(!0!==this.hasPlaybackControl||!1!==this.isPlaying)if(this.matrixWorld.decompose(_position$3,_quaternion$4,_scale$2),_orientation$1.set(0,
0,1).applyQuaternion(_quaternion$4),force=this.panner,force.positionX){var endTime=this.context.currentTime+this.listener.timeDelta;force.positionX.linearRampToValueAtTime(_position$3.x,endTime);force.positionY.linearRampToValueAtTime(_position$3.y,endTime);force.positionZ.linearRampToValueAtTime(_position$3.z,endTime);force.orientationX.linearRampToValueAtTime(_orientation$1.x,endTime);force.orientationY.linearRampToValueAtTime(_orientation$1.y,endTime);force.orientationZ.linearRampToValueAtTime(_orientation$1.z,
endTime)}else force.setPosition(_position$3.x,_position$3.y,_position$3.z),force.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z)}});Object.assign(AudioAnalyser.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data},getAverageFrequency:function(){for(var value=0,data=this.getFrequencyData(),_i318=0;_i318<data.length;_i318++)value+=data[_i318];return value/data.length}});Object.assign(PropertyMixer.prototype,{accumulate:function(accuIndex,
weight){var buffer=this.buffer,stride=this.valueSize;accuIndex=accuIndex*stride+stride;var currentWeight=this.cumulativeWeight;if(0===currentWeight){for(currentWeight=0;currentWeight!==stride;++currentWeight)buffer[accuIndex+currentWeight]=buffer[currentWeight];currentWeight=weight}else currentWeight+=weight,this._mixBufferRegion(buffer,accuIndex,0,weight/currentWeight,stride);this.cumulativeWeight=currentWeight},accumulateAdditive:function(weight){var buffer=this.buffer,stride=this.valueSize,offset=
stride*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity();this._mixBufferRegionAdditive(buffer,offset,0,weight,stride);this.cumulativeWeightAdditive+=weight},apply:function(accuIndex){var stride=this.valueSize,buffer=this.buffer;accuIndex=accuIndex*stride+stride;var weight=this.cumulativeWeight,weightAdditive=this.cumulativeWeightAdditive,binding=this.binding;this.cumulativeWeightAdditive=this.cumulativeWeight=0;1>weight&&this._mixBufferRegion(buffer,accuIndex,stride*this._origIndex,
1-weight,stride);0<weightAdditive&&this._mixBufferRegionAdditive(buffer,accuIndex,this._addIndex*stride,1,stride);weight=stride;for(weightAdditive=stride+stride;weight!==weightAdditive;++weight)if(buffer[weight]!==buffer[weight+stride]){binding.setValue(buffer,accuIndex);break}},saveOriginalState:function(){var buffer=this.buffer,stride=this.valueSize,originalValueOffset=stride*this._origIndex;this.binding.getValue(buffer,originalValueOffset);for(var _i321=stride;_i321!==originalValueOffset;++_i321)buffer[_i321]=
buffer[originalValueOffset+_i321%stride];this._setIdentity();this.cumulativeWeightAdditive=this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_setAdditiveIdentityNumeric:function(){for(var startIndex=this._addIndex*this.valueSize,endIndex=startIndex+this.valueSize;startIndex<endIndex;startIndex++)this.buffer[startIndex]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric();this.buffer[4*this._addIndex+3]=1},_setAdditiveIdentityOther:function(){for(var startIndex=
this._origIndex*this.valueSize,targetIndex=this._addIndex*this.valueSize,_i323=0;_i323<this.valueSize;_i323++)this.buffer[targetIndex+_i323]=this.buffer[startIndex+_i323]},_select:function(buffer,dstOffset,srcOffset,t,stride){if(.5<=t)for(t=0;t!==stride;++t)buffer[dstOffset+t]=buffer[srcOffset+t]},_slerp:function(buffer,dstOffset,srcOffset,t){Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,srcOffset,t)},_slerpAdditive:function(buffer,dstOffset,srcOffset,t,stride){stride*=this._workIndex;
Quaternion.multiplyQuaternionsFlat(buffer,stride,buffer,dstOffset,buffer,srcOffset);Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,stride,t)},_lerp:function(buffer,dstOffset,srcOffset,t,stride){for(var s=1-t,_i325=0;_i325!==stride;++_i325){var j=dstOffset+_i325;buffer[j]=buffer[j]*s+buffer[srcOffset+_i325]*t}},_lerpAdditive:function(buffer,dstOffset,srcOffset,t,stride){for(var _i326=0;_i326!==stride;++_i326){var j=dstOffset+_i326;buffer[j]+=buffer[srcOffset+_i326]*t}}});var _reservedRe=
/[\[\]\.:\/]/g,_wordCharOrDot="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",_directoryRe=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),_nodeRe=/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot),_objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),_propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),_trackRe=new RegExp("^"+_directoryRe+_nodeRe+_objectRe+_propertyRe+"$"),_supportedObjectNames=["material","materials","bones"];Object.assign(Composite.prototype,
{getValue:function(array,offset){this.bind();var binding=this._bindings[this._targetGroup.nCachedObjects_];void 0!==binding&&binding.getValue(array,offset)},setValue:function(array,offset){for(var bindings=this._bindings,_i327=this._targetGroup.nCachedObjects_,n=bindings.length;_i327!==n;++_i327)bindings[_i327].setValue(array,offset)},bind:function(){for(var bindings=this._bindings,_i328=this._targetGroup.nCachedObjects_,n=bindings.length;_i328!==n;++_i328)bindings[_i328].bind()},unbind:function(){for(var bindings=
this._bindings,_i329=this._targetGroup.nCachedObjects_,n=bindings.length;_i329!==n;++_i329)bindings[_i329].unbind()}});Object.assign(PropertyBinding,{Composite:Composite,create:function(root,path,parsedPath){return root&&root.isAnimationObjectGroup?new PropertyBinding.Composite(root,path,parsedPath):new PropertyBinding(root,path,parsedPath)},sanitizeNodeName:function(name){return name.replace(/\s/g,"_").replace(_reservedRe,"")},parseTrackName:function(trackName){var matches=_trackRe.exec(trackName);
if(!matches)throw Error("PropertyBinding: Cannot parse trackName: "+trackName);matches={nodeName:matches[2],objectName:matches[3],objectIndex:matches[4],propertyName:matches[5],propertyIndex:matches[6]};var lastDot=matches.nodeName&&matches.nodeName.lastIndexOf(".");if(void 0!==lastDot&&-1!==lastDot){var objectName=matches.nodeName.substring(lastDot+1);-1!==_supportedObjectNames.indexOf(objectName)&&(matches.nodeName=matches.nodeName.substring(0,lastDot),matches.objectName=objectName)}if(null===matches.propertyName||
0===matches.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+trackName);return matches},findNode:function(root,nodeName){if(!nodeName||""===nodeName||"."===nodeName||-1===nodeName||nodeName===root.name||nodeName===root.uuid)return root;if(root.skeleton){var bone=root.skeleton.getBoneByName(nodeName);if(void 0!==bone)return bone}return root.children&&(root=function searchNodeSubtree(children){for(var _i330=0;_i330<children.length;_i330++){var childNode=
children[_i330];if(childNode.name===nodeName||childNode.uuid===nodeName||(childNode=searchNodeSubtree(childNode.children)))return childNode}return null}(root.children))?root:null}});Object.assign(PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(buffer,offset){buffer[offset]=this.node[this.propertyName]},
function(buffer,offset){for(var source=this.resolvedProperty,_i331=0,n=source.length;_i331!==n;++_i331)buffer[offset++]=source[_i331]},function(buffer,offset){buffer[offset]=this.resolvedProperty[this.propertyIndex]},function(buffer,offset){this.resolvedProperty.toArray(buffer,offset)}],SetterByBindingTypeAndVersioning:[[function(buffer,offset){this.targetObject[this.propertyName]=buffer[offset]},function(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.needsUpdate=
!0},function(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(buffer,offset){for(var dest=this.resolvedProperty,_i332=0,n=dest.length;_i332!==n;++_i332)dest[_i332]=buffer[offset++]},function(buffer,offset){for(var dest=this.resolvedProperty,_i333=0,n=dest.length;_i333!==n;++_i333)dest[_i333]=buffer[offset++];this.targetObject.needsUpdate=!0},function(buffer,offset){for(var dest=this.resolvedProperty,_i334=0,n=dest.length;_i334!==
n;++_i334)dest[_i334]=buffer[offset++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset]},function(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.needsUpdate=!0},function(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(buffer,offset){this.resolvedProperty.fromArray(buffer,offset)},function(buffer,offset){this.resolvedProperty.fromArray(buffer,
offset);this.targetObject.needsUpdate=!0},function(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(targetArray,offset){this.bind();this.getValue(targetArray,offset)},setValue:function(sourceArray,offset){this.bind();this.setValue(sourceArray,offset)},bind:function(){var targetObject=this.node,parsedPath=this.parsedPath,objectName=parsedPath.objectName,propertyName=parsedPath.propertyName,propertyIndex=parsedPath.propertyIndex;
targetObject||(this.node=targetObject=PropertyBinding.findNode(this.rootNode,parsedPath.nodeName)||this.rootNode);this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(targetObject){if(objectName){var objectIndex=parsedPath.objectIndex;switch(objectName){case "materials":if(!targetObject.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!targetObject.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",
this);return}targetObject=targetObject.material.materials;break;case "bones":if(!targetObject.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}targetObject=targetObject.skeleton.bones;for(objectName=0;objectName<targetObject.length;objectName++)if(targetObject[objectName].name===objectIndex){objectIndex=objectName;break}break;default:if(void 0===targetObject[objectName]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",
this);return}targetObject=targetObject[objectName]}if(void 0!==objectIndex){if(void 0===targetObject[objectIndex]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,targetObject);return}targetObject=targetObject[objectIndex]}}objectIndex=targetObject[propertyName];if(void 0===objectIndex)console.error("THREE.PropertyBinding: Trying to update property for track: "+parsedPath.nodeName+"."+propertyName+" but it wasn't found.",targetObject);else{parsedPath=
this.Versioning.None;this.targetObject=targetObject;void 0!==targetObject.needsUpdate?parsedPath=this.Versioning.NeedsUpdate:void 0!==targetObject.matrixWorldNeedsUpdate&&(parsedPath=this.Versioning.MatrixWorldNeedsUpdate);objectName=this.BindingType.Direct;if(void 0!==propertyIndex){if("morphTargetInfluences"===propertyName){if(!targetObject.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(targetObject.geometry.isBufferGeometry){if(!targetObject.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",
this);return}void 0!==targetObject.morphTargetDictionary[propertyIndex]&&(propertyIndex=targetObject.morphTargetDictionary[propertyIndex])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}objectName=this.BindingType.ArrayElement;this.resolvedProperty=objectIndex;this.propertyIndex=propertyIndex}else void 0!==objectIndex.fromArray&&void 0!==objectIndex.toArray?(objectName=this.BindingType.HasFromToArray,
this.resolvedProperty=objectIndex):Array.isArray(objectIndex)?(objectName=this.BindingType.EntireArray,this.resolvedProperty=objectIndex):this.propertyName=propertyName;this.getValue=this.GetterByBindingType[objectName];this.setValue=this.SetterByBindingTypeAndVersioning[objectName][parsedPath]}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}});
Object.assign(PropertyBinding.prototype,{_getValue_unbound:PropertyBinding.prototype.getValue,_setValue_unbound:PropertyBinding.prototype.setValue});Object.assign(AnimationObjectGroup.prototype,{isAnimationObjectGroup:!0,add:function(){for(var objects=this._objects,indicesByUUID=this._indicesByUUID,paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,nBindings=bindings.length,knownObject=void 0,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,_i337=0,n=arguments.length;_i337!==
n;++_i337){var object=arguments[_i337],uuid=object.uuid,index=indicesByUUID[uuid];if(void 0===index){index=nObjects++;indicesByUUID[uuid]=index;objects.push(object);index=0;for(var m=nBindings;index!==m;++index)bindings[index].push(new PropertyBinding(object,paths[index],parsedPaths[index]))}else if(index<nCachedObjects){knownObject=objects[index];m=--nCachedObjects;var lastCachedObject=objects[m];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[uuid]=m;objects[m]=
object;uuid=0;for(lastCachedObject=nBindings;uuid!==lastCachedObject;++uuid){var bindingsForPath=bindings[uuid],binding=bindingsForPath[index];bindingsForPath[index]=bindingsForPath[m];void 0===binding&&(binding=new PropertyBinding(object,paths[uuid],parsedPaths[uuid]));bindingsForPath[m]=binding}}else objects[index]!==knownObject&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=
nCachedObjects},remove:function(){for(var objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length,nCachedObjects=this.nCachedObjects_,_i338=0,n=arguments.length;_i338!==n;++_i338){var object=arguments[_i338],uuid=object.uuid,index=indicesByUUID[uuid];if(void 0!==index&&index>=nCachedObjects){var lastCachedIndex=nCachedObjects++,firstActiveObject=objects[lastCachedIndex];indicesByUUID[firstActiveObject.uuid]=index;objects[index]=firstActiveObject;indicesByUUID[uuid]=
lastCachedIndex;objects[lastCachedIndex]=object;object=0;for(uuid=nBindings;object!==uuid;++object){firstActiveObject=bindings[object];var binding=firstActiveObject[index];firstActiveObject[index]=firstActiveObject[lastCachedIndex];firstActiveObject[lastCachedIndex]=binding}}}this.nCachedObjects_=nCachedObjects},uncache:function(){for(var objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length,nCachedObjects=this.nCachedObjects_,nObjects=objects.length,
_i339=0,n=arguments.length;_i339!==n;++_i339){var uuid=arguments[_i339].uuid,index=indicesByUUID[uuid];if(void 0!==index)if(delete indicesByUUID[uuid],index<nCachedObjects){uuid=--nCachedObjects;var lastCachedObject=objects[uuid],lastIndex=--nObjects,lastObject=objects[lastIndex];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[lastObject.uuid]=uuid;objects[uuid]=lastObject;objects.pop();lastCachedObject=0;for(lastObject=nBindings;lastCachedObject!==lastObject;++lastCachedObject){var bindingsForPath=
bindings[lastCachedObject],last=bindingsForPath[lastIndex];bindingsForPath[index]=bindingsForPath[uuid];bindingsForPath[uuid]=last;bindingsForPath.pop()}}else for(uuid=--nObjects,lastIndex=objects[uuid],indicesByUUID[lastIndex.uuid]=index,objects[index]=lastIndex,objects.pop(),lastIndex=0,lastCachedObject=nBindings;lastIndex!==lastCachedObject;++lastIndex)lastObject=bindings[lastIndex],lastObject[index]=lastObject[uuid],lastObject.pop()}this.nCachedObjects_=nCachedObjects},subscribe_:function(path,
parsedPath){var indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path],bindings=this._bindings;if(void 0!==index)return bindings[index];var paths=this._paths,parsedPaths=this._parsedPaths,objects=this._objects,nCachedObjects=this.nCachedObjects_,bindingsForPath=Array(objects.length);index=bindings.length;indicesByPath[path]=index;paths.push(path);parsedPaths.push(parsedPath);bindings.push(bindingsForPath);indicesByPath=nCachedObjects;for(index=objects.length;indicesByPath!==index;++indicesByPath)bindingsForPath[indicesByPath]=
new PropertyBinding(objects[indicesByPath],path,parsedPath);return bindingsForPath},unsubscribe_:function(path){var indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path];if(void 0!==index){var paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,lastBindingsIndex=bindings.length-1,lastBindings=bindings[lastBindingsIndex];indicesByPath[path[lastBindingsIndex]]=index;bindings[index]=lastBindings;bindings.pop();parsedPaths[index]=parsedPaths[lastBindingsIndex];parsedPaths.pop();
paths[index]=paths[lastBindingsIndex];paths.pop()}}});Object.assign(AnimationAction.prototype,{play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},
isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(time){this._startTime=time;return this},setLoop:function(mode,repetitions){this.loop=mode;this.repetitions=repetitions;return this},setEffectiveWeight:function(weight){this.weight=weight;this._effectiveWeight=this.enabled?weight:0;return this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(duration){return this._scheduleFading(duration,0,1)},fadeOut:function(duration){return this._scheduleFading(duration,
1,0)},crossFadeFrom:function(fadeOutAction,duration,warp){fadeOutAction.fadeOut(duration);this.fadeIn(duration);if(warp){warp=this._clip.duration;var fadeOutDuration=fadeOutAction._clip.duration,endStartRatio=warp/fadeOutDuration;fadeOutAction.warp(1,fadeOutDuration/warp,duration);this.warp(endStartRatio,1,duration)}return this},crossFadeTo:function(fadeInAction,duration,warp){return fadeInAction.crossFadeFrom(this,duration,warp)},stopFading:function(){var weightInterpolant=this._weightInterpolant;
null!==weightInterpolant&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(weightInterpolant));return this},setEffectiveTimeScale:function(timeScale){this.timeScale=timeScale;this._effectiveTimeScale=this.paused?0:timeScale;return this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(duration){this.timeScale=this._clip.duration/duration;return this.stopWarping()},syncWith:function(action){this.time=action.time;this.timeScale=
action.timeScale;return this.stopWarping()},halt:function(duration){return this.warp(this._effectiveTimeScale,0,duration)},warp:function(startTimeScale,endTimeScale,duration){var mixer=this._mixer,now=mixer.time,timeScale=this.timeScale,interpolant=this._timeScaleInterpolant;null===interpolant&&(this._timeScaleInterpolant=interpolant=mixer._lendControlInterpolant());mixer=interpolant.parameterPositions;interpolant=interpolant.sampleValues;mixer[0]=now;mixer[1]=now+duration;interpolant[0]=startTimeScale/
timeScale;interpolant[1]=endTimeScale/timeScale;return this},stopWarping:function(){var timeScaleInterpolant=this._timeScaleInterpolant;null!==timeScaleInterpolant&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(timeScaleInterpolant));return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(time,deltaTime,timeDirection,accuIndex){if(this.enabled){var startTime=
this._startTime;if(null!==startTime){deltaTime=(time-startTime)*timeDirection;if(0>deltaTime||0===timeDirection)return;this._startTime=null;deltaTime*=timeDirection}deltaTime*=this._updateTimeScale(time);timeDirection=this._updateTime(deltaTime);time=this._updateWeight(time);if(0<time)switch(deltaTime=this._interpolants,startTime=this._propertyBindings,this.blendMode){case 2501:accuIndex=0;for(var m=deltaTime.length;accuIndex!==m;++accuIndex)deltaTime[accuIndex].evaluate(timeDirection),startTime[accuIndex].accumulateAdditive(time);
break;default:m=0;for(var _m4=deltaTime.length;m!==_m4;++m)deltaTime[m].evaluate(timeDirection),startTime[m].accumulate(accuIndex,time)}}else this._updateWeight(time)},_updateWeight:function(time){var weight=0;if(this.enabled){weight=this.weight;var interpolant=this._weightInterpolant;if(null!==interpolant){var interpolantValue=interpolant.evaluate(time)[0];weight*=interpolantValue;time>interpolant.parameterPositions[1]&&(this.stopFading(),0===interpolantValue&&(this.enabled=!1))}}return this._effectiveWeight=
weight},_updateTimeScale:function(time){var timeScale=0;if(!this.paused){timeScale=this.timeScale;var interpolant=this._timeScaleInterpolant;if(null!==interpolant){var interpolantValue=interpolant.evaluate(time)[0];timeScale*=interpolantValue;time>interpolant.parameterPositions[1]&&(this.stopWarping(),0===timeScale?this.paused=!0:this.timeScale=timeScale)}}return this._effectiveTimeScale=timeScale},_updateTime:function(deltaTime){var duration=this._clip.duration,loop=this.loop,time=this.time+deltaTime,
loopCount=this._loopCount,pingPong=2202===loop;if(0===deltaTime)return-1===loopCount?time:pingPong&&1===(loopCount&1)?duration-time:time;if(2200===loop)a:{if(-1===loopCount&&(this._loopCount=0,this._setEndings(!0,!0,!1)),time>=duration)time=duration;else if(0>time)time=0;else{this.time=time;break a}this.clampWhenFinished?this.paused=!0:this.enabled=!1;this.time=time;this._mixer.dispatchEvent({type:"finished",action:this,direction:0>deltaTime?-1:1})}else{-1===loopCount&&(0<=deltaTime?(loopCount=0,
this._setEndings(!0,0===this.repetitions,pingPong)):this._setEndings(0===this.repetitions,!0,pingPong));if(time>=duration||0>time){loop=Math.floor(time/duration);time-=duration*loop;loopCount+=Math.abs(loop);var pending=this.repetitions-loopCount;0>=pending?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=time=0<deltaTime?duration:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<deltaTime?1:-1})):(1===pending?(deltaTime=0>deltaTime,this._setEndings(deltaTime,!deltaTime,
pingPong)):this._setEndings(!1,!1,pingPong),this._loopCount=loopCount,this.time=time,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:loop}))}else this.time=time;if(pingPong&&1===(loopCount&1))return duration-time}return time},_setEndings:function(atStart,atEnd,pingPong){var settings=this._interpolantSettings;pingPong?(settings.endingStart=2401,settings.endingEnd=2401):(settings.endingStart=atStart?this.zeroSlopeAtStart?2401:2400:2402,settings.endingEnd=atEnd?this.zeroSlopeAtEnd?2401:
2400:2402)},_scheduleFading:function(duration,weightNow,weightThen){var mixer=this._mixer,now=mixer.time,interpolant=this._weightInterpolant;null===interpolant&&(this._weightInterpolant=interpolant=mixer._lendControlInterpolant());mixer=interpolant.parameterPositions;interpolant=interpolant.sampleValues;mixer[0]=now;interpolant[0]=weightNow;mixer[1]=now+duration;interpolant[1]=weightThen;return this}});AnimationMixer.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:AnimationMixer,
_bindAction:function(action,prototypeAction){var root=action._localRoot||this._root,tracks=action._clip.tracks,nTracks=tracks.length,bindings=action._propertyBindings;action=action._interpolants;var rootUuid=root.uuid,bindingsByRoot=this._bindingsByRootAndName,bindingsByName=bindingsByRoot[rootUuid];void 0===bindingsByName&&(bindingsByName={},bindingsByRoot[rootUuid]=bindingsByName);for(bindingsByRoot=0;bindingsByRoot!==nTracks;++bindingsByRoot){var track=tracks[bindingsByRoot],trackName=track.name,
binding=bindingsByName[trackName];if(void 0===binding){binding=bindings[bindingsByRoot];if(void 0!==binding){null===binding._cacheIndex&&(++binding.referenceCount,this._addInactiveBinding(binding,rootUuid,trackName));continue}binding=new PropertyMixer(PropertyBinding.create(root,trackName,prototypeAction&&prototypeAction._propertyBindings[bindingsByRoot].binding.parsedPath),track.ValueTypeName,track.getValueSize());++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName)}bindings[bindingsByRoot]=
binding;action[bindingsByRoot].resultBuffer=binding.buffer}},_activateAction:function(action){if(!this._isActiveAction(action)){if(null===action._cacheIndex){var rootUuid=(action._localRoot||this._root).uuid,clipUuid=action._clip.uuid,actionsForClip=this._actionsByClip[clipUuid];this._bindAction(action,actionsForClip&&actionsForClip.knownActions[0]);this._addInactiveAction(action,clipUuid,rootUuid)}rootUuid=action._propertyBindings;clipUuid=0;for(actionsForClip=rootUuid.length;clipUuid!==actionsForClip;++clipUuid){var binding=
rootUuid[clipUuid];0===binding.useCount++&&(this._lendBinding(binding),binding.saveOriginalState())}this._lendAction(action)}},_deactivateAction:function(action){if(this._isActiveAction(action)){for(var bindings=action._propertyBindings,_i344=0,n=bindings.length;_i344!==n;++_i344){var binding=bindings[_i344];0===--binding.useCount&&(binding.restoreOriginalState(),this._takeBackBinding(binding))}this._takeBackAction(action)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip=
{};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var scope=this;this.stats={actions:{get total(){return scope._actions.length},get inUse(){return scope._nActiveActions}},bindings:{get total(){return scope._bindings.length},get inUse(){return scope._nActiveBindings}},controlInterpolants:{get total(){return scope._controlInterpolants.length},get inUse(){return scope._nActiveControlInterpolants}}}},_isActiveAction:function(action){action=
action._cacheIndex;return null!==action&&action<this._nActiveActions},_addInactiveAction:function(action,clipUuid,rootUuid){var actions=this._actions,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];void 0===actionsForClip?(actionsForClip={knownActions:[action],actionByRoot:{}},action._byClipCacheIndex=0,actionsByClip[clipUuid]=actionsForClip):(clipUuid=actionsForClip.knownActions,action._byClipCacheIndex=clipUuid.length,clipUuid.push(action));action._cacheIndex=actions.length;
actions.push(action);actionsForClip.actionByRoot[rootUuid]=action},_removeInactiveAction:function(action){var actions=this._actions,lastInactiveAction=actions[actions.length-1],cacheIndex=action._cacheIndex;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();action._cacheIndex=null;actions=action._clip.uuid;lastInactiveAction=this._actionsByClip;cacheIndex=lastInactiveAction[actions];var knownActionsForClip=cacheIndex.knownActions,lastKnownAction=knownActionsForClip[knownActionsForClip.length-
1],byClipCacheIndex=action._byClipCacheIndex;lastKnownAction._byClipCacheIndex=byClipCacheIndex;knownActionsForClip[byClipCacheIndex]=lastKnownAction;knownActionsForClip.pop();action._byClipCacheIndex=null;delete cacheIndex.actionByRoot[(action._localRoot||this._root).uuid];0===knownActionsForClip.length&&delete lastInactiveAction[actions];this._removeInactiveBindingsForAction(action)},_removeInactiveBindingsForAction:function(action){action=action._propertyBindings;for(var _i345=0,n=action.length;_i345!==
n;++_i345){var binding=action[_i345];0===--binding.referenceCount&&this._removeInactiveBinding(binding)}},_lendAction:function(action){var actions=this._actions,prevIndex=action._cacheIndex,lastActiveIndex=this._nActiveActions++,firstInactiveAction=actions[lastActiveIndex];action._cacheIndex=lastActiveIndex;actions[lastActiveIndex]=action;firstInactiveAction._cacheIndex=prevIndex;actions[prevIndex]=firstInactiveAction},_takeBackAction:function(action){var actions=this._actions,prevIndex=action._cacheIndex,
firstInactiveIndex=--this._nActiveActions,lastActiveAction=actions[firstInactiveIndex];action._cacheIndex=firstInactiveIndex;actions[firstInactiveIndex]=action;lastActiveAction._cacheIndex=prevIndex;actions[prevIndex]=lastActiveAction},_addInactiveBinding:function(binding,rootUuid,trackName){var bindingsByRoot=this._bindingsByRootAndName,bindings=this._bindings,bindingByName=bindingsByRoot[rootUuid];void 0===bindingByName&&(bindingByName={},bindingsByRoot[rootUuid]=bindingByName);bindingByName[trackName]=
binding;binding._cacheIndex=bindings.length;bindings.push(binding)},_removeInactiveBinding:function(binding){var bindings=this._bindings,propBinding=binding.binding,rootUuid=propBinding.rootNode.uuid;propBinding=propBinding.path;var bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],lastInactiveBinding=bindings[bindings.length-1];binding=binding._cacheIndex;lastInactiveBinding._cacheIndex=binding;bindings[binding]=lastInactiveBinding;bindings.pop();delete bindingByName[propBinding];
0===Object.keys(bindingByName).length&&delete bindingsByRoot[rootUuid]},_lendBinding:function(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,lastActiveIndex=this._nActiveBindings++,firstInactiveBinding=bindings[lastActiveIndex];binding._cacheIndex=lastActiveIndex;bindings[lastActiveIndex]=binding;firstInactiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=firstInactiveBinding},_takeBackBinding:function(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,firstInactiveIndex=
--this._nActiveBindings,lastActiveBinding=bindings[firstInactiveIndex];binding._cacheIndex=firstInactiveIndex;bindings[firstInactiveIndex]=binding;lastActiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=lastActiveBinding},_lendControlInterpolant:function(){var interpolants=this._controlInterpolants,lastActiveIndex=this._nActiveControlInterpolants++,interpolant=interpolants[lastActiveIndex];void 0===interpolant&&(interpolant=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),
interpolant.__cacheIndex=lastActiveIndex,interpolants[lastActiveIndex]=interpolant);return interpolant},_takeBackControlInterpolant:function(interpolant){var interpolants=this._controlInterpolants,prevIndex=interpolant.__cacheIndex,firstInactiveIndex=--this._nActiveControlInterpolants,lastActiveInterpolant=interpolants[firstInactiveIndex];interpolant.__cacheIndex=firstInactiveIndex;interpolants[firstInactiveIndex]=interpolant;lastActiveInterpolant.__cacheIndex=prevIndex;interpolants[prevIndex]=lastActiveInterpolant},
_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(clip,optionalRoot,blendMode){var root=optionalRoot||this._root,rootUuid=root.uuid;root="string"===typeof clip?AnimationClip.findByName(root,clip):clip;clip=null!==root?root.uuid:clip;var actionsForClip=this._actionsByClip[clip],prototypeAction=null;void 0===blendMode&&(blendMode=null!==root?root.blendMode:NormalAnimationBlendMode);if(void 0!==actionsForClip){prototypeAction=actionsForClip.actionByRoot[rootUuid];if(void 0!==prototypeAction&&
prototypeAction.blendMode===blendMode)return prototypeAction;prototypeAction=actionsForClip.knownActions[0];null===root&&(root=prototypeAction._clip)}if(null===root)return null;optionalRoot=new AnimationAction(this,root,optionalRoot,blendMode);this._bindAction(optionalRoot,prototypeAction);this._addInactiveAction(optionalRoot,clip,rootUuid);return optionalRoot},existingAction:function(clip,optionalRoot){var root=optionalRoot||this._root;optionalRoot=root.uuid;root="string"===typeof clip?AnimationClip.findByName(root,
clip):clip;clip=this._actionsByClip[root?root.uuid:clip];return void 0!==clip?clip.actionByRoot[optionalRoot]||null:null},stopAllAction:function(){for(var actions=this._actions,_i346=this._nActiveActions-1;0<=_i346;--_i346)actions[_i346].stop();return this},update:function(deltaTime){deltaTime*=this.timeScale;for(var actions=this._actions,nActions=this._nActiveActions,time=this.time+=deltaTime,timeDirection=Math.sign(deltaTime),accuIndex=this._accuIndex^=1,_i347=0;_i347!==nActions;++_i347)actions[_i347]._update(time,
deltaTime,timeDirection,accuIndex);deltaTime=this._bindings;actions=this._nActiveBindings;for(nActions=0;nActions!==actions;++nActions)deltaTime[nActions].apply(accuIndex);return this},setTime:function(timeInSeconds){for(var _i349=this.time=0;_i349<this._actions.length;_i349++)this._actions[_i349].time=0;return this.update(timeInSeconds)},getRoot:function(){return this._root},uncacheClip:function(clip){var actions=this._actions;clip=clip.uuid;var actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clip];
if(void 0!==actionsForClip){actionsForClip=actionsForClip.knownActions;for(var _i350=0,n=actionsForClip.length;_i350!==n;++_i350){var action=actionsForClip[_i350];this._deactivateAction(action);var cacheIndex=action._cacheIndex,lastInactiveAction=actions[actions.length-1];action._cacheIndex=null;action._byClipCacheIndex=null;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();this._removeInactiveBindingsForAction(action)}delete actionsByClip[clip]}},uncacheRoot:function(root){root=
root.uuid;var actionsByClip=this._actionsByClip;for(clipUuid in actionsByClip){var action=actionsByClip[clipUuid].actionByRoot[root];void 0!==action&&(this._deactivateAction(action),this._removeInactiveAction(action))}var clipUuid=this._bindingsByRootAndName[root];if(void 0!==clipUuid)for(var trackName in clipUuid)root=clipUuid[trackName],root.restoreOriginalState(),this._removeInactiveBinding(root)},uncacheAction:function(clip,optionalRoot){clip=this.existingAction(clip,optionalRoot);null!==clip&&
(this._deactivateAction(clip),this._removeInactiveAction(clip))}});Uniform.prototype.clone=function(){return new Uniform(void 0===this.value.clone?this.value:this.value.clone())};InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:!0,copy:function(source){InterleavedBuffer.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this},clone:function(data){data=
InterleavedBuffer.prototype.clone.call(this,data);data.meshPerAttribute=this.meshPerAttribute;return data},toJSON:function(data){data=InterleavedBuffer.prototype.toJSON.call(this,data);data.isInstancedInterleavedBuffer=!0;data.meshPerAttribute=this.meshPerAttribute;return data}});Object.assign(Raycaster.prototype,{set:function(origin,direction){this.ray.set(origin,direction)},setFromCamera:function(coords,camera){camera&&camera.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(camera.matrixWorld),
this.ray.direction.set(coords.x,coords.y,.5).unproject(camera).sub(this.ray.origin).normalize(),this.camera=camera):camera&&camera.isOrthographicCamera?(this.ray.origin.set(coords.x,coords.y,(camera.near+camera.far)/(camera.near-camera.far)).unproject(camera),this.ray.direction.set(0,0,-1).transformDirection(camera.matrixWorld),this.camera=camera):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(object,recursive,optionalTarget){optionalTarget=optionalTarget||[];
_intersectObject(object,this,optionalTarget,recursive);optionalTarget.sort(ascSort);return optionalTarget},intersectObjects:function(objects,recursive,optionalTarget){optionalTarget=optionalTarget||[];if(!1===Array.isArray(objects))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),optionalTarget;for(var _i352=0,l=objects.length;_i352<l;_i352++)_intersectObject(objects[_i352],this,optionalTarget,recursive);optionalTarget.sort(ascSort);return optionalTarget}});Object.assign(Spherical.prototype,
{set:function(radius,phi,theta){this.radius=radius;this.phi=phi;this.theta=theta;return this},clone:function(){return(new this.constructor).copy(this)},copy:function(other){this.radius=other.radius;this.phi=other.phi;this.theta=other.theta;return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi));return this},setFromVector3:function(v){return this.setFromCartesianCoords(v.x,v.y,v.z)},setFromCartesianCoords:function(x,y,z){this.radius=Math.sqrt(x*x+y*y+z*z);0===this.radius?
this.phi=this.theta=0:(this.theta=Math.atan2(x,z),this.phi=Math.acos(MathUtils.clamp(y/this.radius,-1,1)));return this}});Object.assign(Cylindrical.prototype,{set:function(radius,theta,y){this.radius=radius;this.theta=theta;this.y=y;return this},clone:function(){return(new this.constructor).copy(this)},copy:function(other){this.radius=other.radius;this.theta=other.theta;this.y=other.y;return this},setFromVector3:function(v){return this.setFromCartesianCoords(v.x,v.y,v.z)},setFromCartesianCoords:function(x,
y,z){this.radius=Math.sqrt(x*x+z*z);this.theta=Math.atan2(x,z);this.y=y;return this}});var _vector$7=new Vector2;Object.assign(Box2.prototype,{set:function(min,max){this.min.copy(min);this.max.copy(max);return this},setFromPoints:function(points){this.makeEmpty();for(var _i353=0,il=points.length;_i353<il;_i353++)this.expandByPoint(points[_i353]);return this},setFromCenterAndSize:function(center,size){size=_vector$7.copy(size).multiplyScalar(.5);this.min.copy(center).sub(size);this.max.copy(center).add(size);
return this},clone:function(){return(new this.constructor).copy(this)},copy:function(box){this.min.copy(box.min);this.max.copy(box.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(target){void 0===target&&(console.warn("THREE.Box2: .getCenter() target is now required"),target=new Vector2);return this.isEmpty()?target.set(0,0):target.addVectors(this.min,
this.max).multiplyScalar(.5)},getSize:function(target){void 0===target&&(console.warn("THREE.Box2: .getSize() target is now required"),target=new Vector2);return this.isEmpty()?target.set(0,0):target.subVectors(this.max,this.min)},expandByPoint:function(point){this.min.min(point);this.max.max(point);return this},expandByVector:function(vector){this.min.sub(vector);this.max.add(vector);return this},expandByScalar:function(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this},
containsPoint:function(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y?!1:!0},containsBox:function(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y},getParameter:function(point,target){void 0===target&&(console.warn("THREE.Box2: .getParameter() target is now required"),target=new Vector2);return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(box){return box.max.x<
this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y?!1:!0},clampPoint:function(point,target){void 0===target&&(console.warn("THREE.Box2: .clampPoint() target is now required"),target=new Vector2);return target.copy(point).clamp(this.min,this.max)},distanceToPoint:function(point){return _vector$7.copy(point).clamp(this.min,this.max).sub(point).length()},intersect:function(box){this.min.max(box.min);this.max.min(box.max);return this},union:function(box){this.min.min(box.min);
this.max.max(box.max);return this},translate:function(offset){this.min.add(offset);this.max.add(offset);return this},equals:function(box){return box.min.equals(this.min)&&box.max.equals(this.max)}});var _startP=new Vector3,_startEnd=new Vector3;Object.assign(Line3.prototype,{set:function(start,end){this.start.copy(start);this.end.copy(end);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(line){this.start.copy(line.start);this.end.copy(line.end);return this},getCenter:function(target){void 0===
target&&(console.warn("THREE.Line3: .getCenter() target is now required"),target=new Vector3);return target.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(target){void 0===target&&(console.warn("THREE.Line3: .delta() target is now required"),target=new Vector3);return target.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,target){void 0===target&&(console.warn("THREE.Line3: .at() target is now required"),
target=new Vector3);return this.delta(target).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(point,clampToLine){_startP.subVectors(point,this.start);_startEnd.subVectors(this.end,this.start);point=_startEnd.dot(_startEnd);point=_startEnd.dot(_startP)/point;clampToLine&&(point=MathUtils.clamp(point,0,1));return point},closestPointToPoint:function(point,clampToLine,target){point=this.closestPointToPointParameter(point,clampToLine);void 0===target&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),
target=new Vector3);return this.delta(target).multiplyScalar(point).add(this.start)},applyMatrix4:function(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this},equals:function(line){return line.start.equals(this.start)&&line.end.equals(this.end)}});ImmediateRenderObject.prototype=Object.create(Object3D.prototype);ImmediateRenderObject.prototype.constructor=ImmediateRenderObject;ImmediateRenderObject.prototype.isImmediateRenderObject=!0;var _vector$8=new Vector3;SpotLightHelper.prototype=
Object.create(Object3D.prototype);SpotLightHelper.prototype.constructor=SpotLightHelper;SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};SpotLightHelper.prototype.update=function(){this.light.updateMatrixWorld();var coneLength=this.light.distance?this.light.distance:1E3,coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);_vector$8.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(_vector$8);
void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};var _vector$9=new Vector3,_boneMatrix=new Matrix4,_matrixWorldInv=new Matrix4;SkeletonHelper.prototype=Object.create(LineSegments.prototype);SkeletonHelper.prototype.constructor=SkeletonHelper;SkeletonHelper.prototype.isSkeletonHelper=!0;SkeletonHelper.prototype.updateMatrixWorld=function(force){var bones=this.bones,geometry=this.geometry,position=geometry.getAttribute("position");_matrixWorldInv.getInverse(this.root.matrixWorld);
for(var _i357=0,j=0;_i357<bones.length;_i357++){var bone=bones[_i357];bone.parent&&bone.parent.isBone&&(_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.matrixWorld),_vector$9.setFromMatrixPosition(_boneMatrix),position.setXYZ(j,_vector$9.x,_vector$9.y,_vector$9.z),_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.parent.matrixWorld),_vector$9.setFromMatrixPosition(_boneMatrix),position.setXYZ(j+1,_vector$9.x,_vector$9.y,_vector$9.z),j+=2)}geometry.getAttribute("position").needsUpdate=!0;Object3D.prototype.updateMatrixWorld.call(this,
force)};PointLightHelper.prototype=Object.create(Mesh.prototype);PointLightHelper.prototype.constructor=PointLightHelper;PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};PointLightHelper.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)};var _vector$a=new Vector3,_color1=new Color,_color2=new Color;HemisphereLightHelper.prototype=Object.create(Object3D.prototype);HemisphereLightHelper.prototype.constructor=
HemisphereLightHelper;HemisphereLightHelper.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose()};HemisphereLightHelper.prototype.update=function(){var mesh=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var colors=mesh.geometry.getAttribute("color");_color1.copy(this.light.color);_color2.copy(this.light.groundColor);for(var _i358=0,l=colors.count;_i358<l;_i358++){var color=_i358<l/2?_color1:_color2;colors.setXYZ(_i358,
color.r,color.g,color.b)}colors.needsUpdate=!0}mesh.lookAt(_vector$a.setFromMatrixPosition(this.light.matrixWorld).negate())};GridHelper.prototype=Object.assign(Object.create(LineSegments.prototype),{constructor:GridHelper,copy:function(source){LineSegments.prototype.copy.call(this,source);this.geometry.copy(source.geometry);this.material.copy(source.material);return this},clone:function(){return(new this.constructor).copy(this)}});PolarGridHelper.prototype=Object.create(LineSegments.prototype);PolarGridHelper.prototype.constructor=
PolarGridHelper;var _v1$5=new Vector3,_v2$3=new Vector3,_v3$1=new Vector3;DirectionalLightHelper.prototype=Object.create(Object3D.prototype);DirectionalLightHelper.prototype.constructor=DirectionalLightHelper;DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};DirectionalLightHelper.prototype.update=function(){_v1$5.setFromMatrixPosition(this.light.matrixWorld);
_v2$3.setFromMatrixPosition(this.light.target.matrixWorld);_v3$1.subVectors(_v2$3,_v1$5);this.lightPlane.lookAt(_v2$3);void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color));this.targetLine.lookAt(_v2$3);this.targetLine.scale.z=_v3$1.length()};var _vector$b=new Vector3,_camera=new Camera;CameraHelper.prototype=Object.create(LineSegments.prototype);
CameraHelper.prototype.constructor=CameraHelper;CameraHelper.prototype.update=function(){var geometry=this.geometry,pointMap=this.pointMap;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);setPoint("c",pointMap,geometry,_camera,0,0,-1);setPoint("t",pointMap,geometry,_camera,0,0,1);setPoint("n1",pointMap,geometry,_camera,-1,-1,-1);setPoint("n2",pointMap,geometry,_camera,1,-1,-1);setPoint("n3",pointMap,geometry,_camera,-1,1,-1);setPoint("n4",pointMap,geometry,_camera,1,1,-1);
setPoint("f1",pointMap,geometry,_camera,-1,-1,1);setPoint("f2",pointMap,geometry,_camera,1,-1,1);setPoint("f3",pointMap,geometry,_camera,-1,1,1);setPoint("f4",pointMap,geometry,_camera,1,1,1);setPoint("u1",pointMap,geometry,_camera,.7,1.1,-1);setPoint("u2",pointMap,geometry,_camera,-.7,1.1,-1);setPoint("u3",pointMap,geometry,_camera,0,2,-1);setPoint("cf1",pointMap,geometry,_camera,-1,0,1);setPoint("cf2",pointMap,geometry,_camera,1,0,1);setPoint("cf3",pointMap,geometry,_camera,0,-1,1);setPoint("cf4",
pointMap,geometry,_camera,0,1,1);setPoint("cn1",pointMap,geometry,_camera,-1,0,-1);setPoint("cn2",pointMap,geometry,_camera,1,0,-1);setPoint("cn3",pointMap,geometry,_camera,0,-1,-1);setPoint("cn4",pointMap,geometry,_camera,0,1,-1);geometry.getAttribute("position").needsUpdate=!0};var _box$3=new Box3;BoxHelper.prototype=Object.create(LineSegments.prototype);BoxHelper.prototype.constructor=BoxHelper;BoxHelper.prototype.update=function(object){void 0!==object&&console.warn("THREE.BoxHelper: .update() has no longer arguments.");
void 0!==this.object&&_box$3.setFromObject(this.object);if(!_box$3.isEmpty()){object=_box$3.min;var max=_box$3.max,position=this.geometry.attributes.position,array=position.array;array[0]=max.x;array[1]=max.y;array[2]=max.z;array[3]=object.x;array[4]=max.y;array[5]=max.z;array[6]=object.x;array[7]=object.y;array[8]=max.z;array[9]=max.x;array[10]=object.y;array[11]=max.z;array[12]=max.x;array[13]=max.y;array[14]=object.z;array[15]=object.x;array[16]=max.y;array[17]=object.z;array[18]=object.x;array[19]=
object.y;array[20]=object.z;array[21]=max.x;array[22]=object.y;array[23]=object.z;position.needsUpdate=!0;this.geometry.computeBoundingSphere()}};BoxHelper.prototype.setFromObject=function(object){this.object=object;this.update();return this};BoxHelper.prototype.copy=function(source){LineSegments.prototype.copy.call(this,source);this.object=source.object;return this};BoxHelper.prototype.clone=function(){return(new this.constructor).copy(this)};Box3Helper.prototype=Object.create(LineSegments.prototype);
Box3Helper.prototype.constructor=Box3Helper;Box3Helper.prototype.updateMatrixWorld=function(force){var box=this.box;box.isEmpty()||(box.getCenter(this.position),box.getSize(this.scale),this.scale.multiplyScalar(.5),Object3D.prototype.updateMatrixWorld.call(this,force))};PlaneHelper.prototype=Object.create(Line.prototype);PlaneHelper.prototype.constructor=PlaneHelper;PlaneHelper.prototype.updateMatrixWorld=function(force){var scale=-this.plane.constant;1E-8>Math.abs(scale)&&(scale=1E-8);this.scale.set(.5*
this.size,.5*this.size,scale);this.children[0].material.side=0>scale?BackSide:FrontSide;this.lookAt(this.plane.normal);Object3D.prototype.updateMatrixWorld.call(this,force)};var _axis=new Vector3,_lineGeometry,_coneGeometry;ArrowHelper.prototype=Object.create(Object3D.prototype);ArrowHelper.prototype.constructor=ArrowHelper;ArrowHelper.prototype.setDirection=function(dir){.99999<dir.y?this.quaternion.set(0,0,0,1):-.99999>dir.y?this.quaternion.set(1,0,0,0):(_axis.set(dir.z,0,-dir.x).normalize(),this.quaternion.setFromAxisAngle(_axis,
Math.acos(dir.y)))};ArrowHelper.prototype.setLength=function(length,headLength,headWidth){void 0===headLength&&(headLength=.2*length);void 0===headWidth&&(headWidth=.2*headLength);this.line.scale.set(1,Math.max(1E-4,length-headLength),1);this.line.updateMatrix();this.cone.scale.set(headWidth,headLength,headWidth);this.cone.position.y=length;this.cone.updateMatrix()};ArrowHelper.prototype.setColor=function(color){this.line.material.color.set(color);this.cone.material.color.set(color)};ArrowHelper.prototype.copy=
function(source){Object3D.prototype.copy.call(this,source,!1);this.line.copy(source.line);this.cone.copy(source.cone);return this};ArrowHelper.prototype.clone=function(){return(new this.constructor).copy(this)};AxesHelper.prototype=Object.create(LineSegments.prototype);AxesHelper.prototype.constructor=AxesHelper;var SIZE_MAX=Math.pow(2,8),EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],TOTAL_LODS=5+EXTRA_LOD_SIGMA.length,MAX_SAMPLES=20,ENCODINGS=(_ENCODINGS={},_defineProperty(_ENCODINGS,LinearEncoding,
0),_defineProperty(_ENCODINGS,sRGBEncoding,1),_defineProperty(_ENCODINGS,RGBEEncoding,2),_defineProperty(_ENCODINGS,RGBM7Encoding,3),_defineProperty(_ENCODINGS,RGBM16Encoding,4),_defineProperty(_ENCODINGS,RGBDEncoding,5),_defineProperty(_ENCODINGS,GammaEncoding,6),_ENCODINGS),_flatCamera=new OrthographicCamera,_createPlanes2=function(){for(var _lodPlanes=[],_sizeLods=[],_sigmas=[],lod=8,_i368=0;_i368<TOTAL_LODS;_i368++){var sizeLod=Math.pow(2,lod);_sizeLods.push(sizeLod);var sigma=1/sizeLod;4<_i368?
sigma=EXTRA_LOD_SIGMA[_i368-8+4-1]:0==_i368&&(sigma=0);_sigmas.push(sigma);sigma=1/(sizeLod-1);sizeLod=-sigma/2;sigma=1+sigma/2;var uv1=[sizeLod,sizeLod,sigma,sizeLod,sigma,sigma,sizeLod,sizeLod,sigma,sigma,sizeLod,sigma];sizeLod=new Float32Array(108);sigma=new Float32Array(72);for(var faceIndex=new Float32Array(36),face=0;6>face;face++){var x=face%3*2/3-1,y=2<face?0:-1;sizeLod.set([x,y,0,x+2/3,y,0,x+2/3,y+1,0,x,y,0,x+2/3,y+1,0,x,y+1,0],18*face);sigma.set(uv1,12*face);faceIndex.set([face,face,face,
face,face,face],6*face)}uv1=new BufferGeometry;uv1.setAttribute("position",new BufferAttribute(sizeLod,3));uv1.setAttribute("uv",new BufferAttribute(sigma,2));uv1.setAttribute("faceIndex",new BufferAttribute(faceIndex,1));_lodPlanes.push(uv1);4<lod&&lod--}return{_lodPlanes:_lodPlanes,_sizeLods:_sizeLods,_sigmas:_sigmas}}(),_lodPlanes$jscomp$0=_createPlanes2._lodPlanes,_sizeLods$jscomp$0=_createPlanes2._sizeLods,_sigmas$jscomp$0=_createPlanes2._sigmas,_oldTarget=null,PHI=(1+Math.sqrt(5))/2,INV_PHI=
1/PHI,_axisDirections=[new Vector3(1,1,1),new Vector3(-1,1,1),new Vector3(1,1,-1),new Vector3(-1,1,-1),new Vector3(0,PHI,INV_PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(INV_PHI,0,PHI),new Vector3(-INV_PHI,0,PHI),new Vector3(PHI,INV_PHI,0),new Vector3(-PHI,INV_PHI,0)];PMREMGenerator.prototype={constructor:PMREMGenerator,fromScene:function(scene){var sigma=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,near=2<arguments.length&&void 0!==arguments[2]?arguments[2]:.1,far=3<arguments.length&&
void 0!==arguments[3]?arguments[3]:100;_oldTarget=this._renderer.getRenderTarget();var cubeUVRenderTarget=this._allocateTargets();this._sceneToCubeUV(scene,near,far,cubeUVRenderTarget);0<sigma&&this._blur(cubeUVRenderTarget,0,0,sigma);this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget},fromEquirectangular:function(equirectangular){return this._fromTexture(equirectangular)},fromCubemap:function(cubemap){return this._fromTexture(cubemap)},compileCubemapShader:function(){null===
this._cubemapShader&&(this._cubemapShader=_getCubemapShader(),this._compileMaterial(this._cubemapShader))},compileEquirectangularShader:function(){null===this._equirectShader&&(this._equirectShader=_getEquirectShader(),this._compileMaterial(this._equirectShader))},dispose:function(){this._blurMaterial.dispose();null!==this._cubemapShader&&this._cubemapShader.dispose();null!==this._equirectShader&&this._equirectShader.dispose();for(var _i363=0;_i363<_lodPlanes$jscomp$0.length;_i363++)_lodPlanes$jscomp$0[_i363].dispose()},
_cleanup:function(outputTarget){this._pingPongRenderTarget.dispose();this._renderer.setRenderTarget(_oldTarget);outputTarget.scissorTest=!1;_setViewport(outputTarget,0,0,outputTarget.width,outputTarget.height)},_fromTexture:function(texture){_oldTarget=this._renderer.getRenderTarget();var cubeUVRenderTarget=this._allocateTargets(texture);this._textureToCubeUV(texture,cubeUVRenderTarget);this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget},_allocateTargets:function(texture){var JSCompiler_temp_const=
NearestFilter,JSCompiler_temp_const$jscomp$0=NearestFilter,JSCompiler_temp_const$jscomp$1=UnsignedByteType;var JSCompiler_inline_result=void 0===texture||texture.type!==UnsignedByteType?!1:texture.encoding===LinearEncoding||texture.encoding===sRGBEncoding||texture.encoding===GammaEncoding;JSCompiler_temp_const={magFilter:JSCompiler_temp_const,minFilter:JSCompiler_temp_const$jscomp$0,generateMipmaps:!1,type:JSCompiler_temp_const$jscomp$1,format:RGBEFormat,encoding:JSCompiler_inline_result?texture.encoding:
RGBEEncoding,depthBuffer:!1,stencilBuffer:!1};JSCompiler_temp_const$jscomp$0=_createRenderTarget(JSCompiler_temp_const);JSCompiler_temp_const$jscomp$0.depthBuffer=texture?!1:!0;this._pingPongRenderTarget=_createRenderTarget(JSCompiler_temp_const);return JSCompiler_temp_const$jscomp$0},_compileMaterial:function(material){material=new Mesh(_lodPlanes$jscomp$0[0],material);this._renderer.compile(material,_flatCamera)},_sceneToCubeUV:function(scene,near,far,cubeUVRenderTarget){near=new PerspectiveCamera(90,
1,near,far);far=[1,-1,1,1,1,1];var forwardSign=[1,1,1,-1,-1,-1],renderer=this._renderer,outputEncoding=renderer.outputEncoding,toneMapping=renderer.toneMapping,clearColor=renderer.getClearColor(),clearAlpha=renderer.getClearAlpha();renderer.toneMapping=NoToneMapping;renderer.outputEncoding=LinearEncoding;var background=scene.background;if(background&&background.isColor){background.convertSRGBToLinear();var fExp=Math.min(Math.max(Math.ceil(Math.log2(Math.max(background.r,background.g,background.b))),
-128),127);background=background.multiplyScalar(Math.pow(2,-fExp));renderer.setClearColor(background,(fExp+128)/255);scene.background=null}for(background=0;6>background;background++)fExp=background%3,0==fExp?(near.up.set(0,far[background],0),near.lookAt(forwardSign[background],0,0)):1==fExp?(near.up.set(0,0,far[background]),near.lookAt(0,forwardSign[background],0)):(near.up.set(0,far[background],0),near.lookAt(0,0,forwardSign[background])),_setViewport(cubeUVRenderTarget,fExp*SIZE_MAX,2<background?
SIZE_MAX:0,SIZE_MAX,SIZE_MAX),renderer.setRenderTarget(cubeUVRenderTarget),renderer.render(scene,near);renderer.toneMapping=toneMapping;renderer.outputEncoding=outputEncoding;renderer.setClearColor(clearColor,clearAlpha)},_textureToCubeUV:function(texture,cubeUVRenderTarget){var renderer=this._renderer;texture.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=_getCubemapShader()):null==this._equirectShader&&(this._equirectShader=_getEquirectShader());var material=texture.isCubeTexture?
this._cubemapShader:this._equirectShader,mesh=new Mesh(_lodPlanes$jscomp$0[0],material);material=material.uniforms;material.envMap.value=texture;texture.isCubeTexture||material.texelSize.value.set(1/texture.image.width,1/texture.image.height);material.inputEncoding.value=ENCODINGS[texture.encoding];material.outputEncoding.value=ENCODINGS[cubeUVRenderTarget.texture.encoding];_setViewport(cubeUVRenderTarget,0,0,3*SIZE_MAX,2*SIZE_MAX);renderer.setRenderTarget(cubeUVRenderTarget);renderer.render(mesh,
_flatCamera)},_applyPMREM:function(cubeUVRenderTarget){var renderer=this._renderer,autoClear=renderer.autoClear;renderer.autoClear=!1;for(var _i365=1;_i365<TOTAL_LODS;_i365++)this._blur(cubeUVRenderTarget,_i365-1,_i365,Math.sqrt(_sigmas$jscomp$0[_i365]*_sigmas$jscomp$0[_i365]-_sigmas$jscomp$0[_i365-1]*_sigmas$jscomp$0[_i365-1]),_axisDirections[(_i365-1)%_axisDirections.length]);renderer.autoClear=autoClear},_blur:function(cubeUVRenderTarget,lodIn,lodOut,sigma,poleAxis){var pingPongRenderTarget=this._pingPongRenderTarget;
this._halfBlur(cubeUVRenderTarget,pingPongRenderTarget,lodIn,lodOut,sigma,"latitudinal",poleAxis);this._halfBlur(pingPongRenderTarget,cubeUVRenderTarget,lodOut,lodOut,sigma,"longitudinal",poleAxis)},_halfBlur:function(targetIn,targetOut,lodIn,lodOut,sigmaRadians,direction,poleAxis){var renderer=this._renderer,blurMaterial=this._blurMaterial;"latitudinal"!==direction&&"longitudinal"!==direction&&console.error("blur direction must be either latitudinal or longitudinal!");var blurMesh=new Mesh(_lodPlanes$jscomp$0[lodOut],
blurMaterial);blurMaterial=blurMaterial.uniforms;var pixels=_sizeLods$jscomp$0[lodIn]-1;pixels=isFinite(sigmaRadians)?Math.PI/(2*pixels):2*Math.PI/(2*MAX_SAMPLES-1);var sigmaPixels=sigmaRadians/pixels,samples=isFinite(sigmaRadians)?1+Math.floor(3*sigmaPixels):MAX_SAMPLES;samples>MAX_SAMPLES&&console.warn("sigmaRadians, ".concat(sigmaRadians,", is too large and will clip, as it requested ").concat(samples," samples when the maximum is set to ").concat(MAX_SAMPLES));sigmaRadians=[];for(var sum=0,_i366=
0;_i366<MAX_SAMPLES;++_i366){var _x6=_i366/sigmaPixels;_x6=Math.exp(-_x6*_x6/2);sigmaRadians.push(_x6);0==_i366?sum+=_x6:_i366<samples&&(sum+=2*_x6)}for(sigmaPixels=0;sigmaPixels<sigmaRadians.length;sigmaPixels++)sigmaRadians[sigmaPixels]/=sum;blurMaterial.envMap.value=targetIn.texture;blurMaterial.samples.value=samples;blurMaterial.weights.value=sigmaRadians;blurMaterial.latitudinal.value="latitudinal"===direction;poleAxis&&(blurMaterial.poleAxis.value=poleAxis);blurMaterial.dTheta.value=pixels;
blurMaterial.mipInt.value=8-lodIn;blurMaterial.inputEncoding.value=ENCODINGS[targetIn.texture.encoding];blurMaterial.outputEncoding.value=ENCODINGS[targetIn.texture.encoding];targetIn=_sizeLods$jscomp$0[lodOut];_setViewport(targetOut,3*Math.max(0,SIZE_MAX-2*targetIn),(0===lodOut?0:2*SIZE_MAX)+2*targetIn*(4<lodOut?lodOut-8+4:0),3*targetIn,2*targetIn);renderer.setRenderTarget(targetOut);renderer.render(blurMesh,_flatCamera)}};exports.LineStrip=0;exports.LinePieces=1;exports.NoColors=0;exports.FaceColors=
1;exports.VertexColors=2;Curve.create=function(construct,getPoint){console.log("THREE.Curve.create() has been deprecated");construct.prototype=Object.create(Curve.prototype);construct.prototype.constructor=construct;construct.prototype.getPoint=getPoint;return construct};Object.assign(CurvePath.prototype,{createPointsGeometry:function(divisions){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");divisions=this.getPoints(divisions);
return this.createGeometry(divisions)},createSpacedPointsGeometry:function(divisions){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");divisions=this.getSpacedPoints(divisions);return this.createGeometry(divisions)},createGeometry:function(points){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var geometry=new Geometry,_i369=
0,l=points.length;_i369<l;_i369++){var point=points[_i369];geometry.vertices.push(new Vector3(point.x,point.y,point.z||0))}return geometry}});Object.assign(Path.prototype,{fromPoints:function(points){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints().");return this.setFromPoints(points)}});ClosedSplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);SplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);Spline.prototype=Object.create(CatmullRomCurve3.prototype);
Object.assign(Spline.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});GridHelper.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};SkeletonHelper.prototype.update=
function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Object.assign(Loader.prototype,{extractUrlBase:function(url){console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.");return LoaderUtils.extractUrlBase(url)}});Loader.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};
Object.assign(ObjectLoader.prototype,{setTexturePath:function(value){console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().");return this.setResourcePath(value)}});Object.assign(Box2.prototype,{center:function(optionalTarget){console.warn("THREE.Box2: .center() has been renamed to .getCenter().");return this.getCenter(optionalTarget)},empty:function(){console.warn("THREE.Box2: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(box){console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().");
return this.intersectsBox(box)},size:function(optionalTarget){console.warn("THREE.Box2: .size() has been renamed to .getSize().");return this.getSize(optionalTarget)}});Object.assign(Box3.prototype,{center:function(optionalTarget){console.warn("THREE.Box3: .center() has been renamed to .getCenter().");return this.getCenter(optionalTarget)},empty:function(){console.warn("THREE.Box3: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(box){console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().");
return this.intersectsBox(box)},isIntersectionSphere:function(sphere){console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(sphere)},size:function(optionalTarget){console.warn("THREE.Box3: .size() has been renamed to .getSize().");return this.getSize(optionalTarget)}});Object.assign(Sphere.prototype,{empty:function(){console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty().");return this.isEmpty()}});Frustum.prototype.setFromMatrix=
function(m){console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().");return this.setFromProjectionMatrix(m)};Line3.prototype.center=function(optionalTarget){console.warn("THREE.Line3: .center() has been renamed to .getCenter().");return this.getCenter(optionalTarget)};Object.assign(MathUtils,{random16:function(){console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead.");return Math.random()},nearestPowerOfTwo:function(value){console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().");
return MathUtils.floorPowerOfTwo(value)},nextPowerOfTwo:function(value){console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().");return MathUtils.ceilPowerOfTwo(value)}});Object.assign(Matrix3.prototype,{flattenToArrayOffset:function(array,offset){console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(array,offset)},multiplyVector3:function(vector){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");
return vector.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(attribute){console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.");return attribute.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});Object.assign(Matrix4.prototype,{extractPosition:function(m){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");
return this.copyPosition(m)},flattenToArrayOffset:function(array,offset){console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(array,offset)},getPosition:function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");return(new Vector3).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(q){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");
return this.makeRotationFromQuaternion(q)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(vector){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.");return vector.applyMatrix4(this)},multiplyVector4:function(vector){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return vector.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},
rotateAxis:function(v){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");v.transformDirection(this)},crossVector:function(vector){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return vector.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},
rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(attribute){console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.");return attribute.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(left,
right,bottom,top,near,far){console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.");return this.makePerspective(left,right,top,bottom,near,far)}});Plane.prototype.isIntersectionLine=function(line){console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().");return this.intersectsLine(line)};Quaternion.prototype.multiplyVector3=function(vector){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");
return vector.applyQuaternion(this)};Object.assign(Ray.prototype,{isIntersectionBox:function(box){console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(box)},isIntersectionPlane:function(plane){console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().");return this.intersectsPlane(plane)},isIntersectionSphere:function(sphere){console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().");
return this.intersectsSphere(sphere)}});Object.assign(Triangle.prototype,{area:function(){console.warn("THREE.Triangle: .area() has been renamed to .getArea().");return this.getArea()},barycoordFromPoint:function(point,target){console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().");return this.getBarycoord(point,target)},midpoint:function(target){console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint().");return this.getMidpoint(target)},normal:function(target){console.warn("THREE.Triangle: .normal() has been renamed to .getNormal().");
return this.getNormal(target)},plane:function(target){console.warn("THREE.Triangle: .plane() has been renamed to .getPlane().");return this.getPlane(target)}});Object.assign(Triangle,{barycoordFromPoint:function(point,a,b,c,target){console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().");return Triangle.getBarycoord(point,a,b,c,target)},normal:function(a,b,c,target){console.warn("THREE.Triangle: .normal() has been renamed to .getNormal().");return Triangle.getNormal(a,
b,c,target)}});Object.assign(Shape.prototype,{extractAllPoints:function(divisions){console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.");return this.extractPoints(divisions)},extrude:function(options){console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.");return new ExtrudeGeometry(this,options)},makeGeometry:function(options){console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.");return new ShapeGeometry(this,
options)}});Object.assign(Vector2.prototype,{fromAttribute:function(attribute,index,offset){console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(attribute,index,offset)},distanceToManhattan:function(v){console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(v)},lengthManhattan:function(){console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().");
return this.manhattanLength()}});Object.assign(Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(m){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");
return this.setFromMatrixPosition(m)},getScaleFromMatrix:function(m){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(m)},getColumnFromMatrix:function(index,matrix){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(matrix,index)},applyProjection:function(m){console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.");
return this.applyMatrix4(m)},fromAttribute:function(attribute,index,offset){console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(attribute,index,offset)},distanceToManhattan:function(v){console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(v)},lengthManhattan:function(){console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().");
return this.manhattanLength()}});Object.assign(Vector4.prototype,{fromAttribute:function(attribute,index,offset){console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(attribute,index,offset)},lengthManhattan:function(){console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});Object.assign(Geometry.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},
computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(matrix){console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().");return this.applyMatrix4(matrix)}});Object.assign(Object3D.prototype,{getChildByName:function(name){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(name)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},
translate:function(distance,axis){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(axis,distance)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(matrix){console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().");return this.applyMatrix4(matrix)}});Object.defineProperties(Object3D.prototype,
{eulerOrder:{get:function(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set:function(value){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=value}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});
Object.assign(Mesh.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(Mesh.prototype,{drawMode:{get:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.");return 0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});
Object.defineProperties(LOD.prototype,{objects:{get:function(){console.warn("THREE.LOD: .objects has been renamed to .levels.");return this.levels}}});Object.defineProperty(Skeleton.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});SkinnedMesh.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(Curve.prototype,
"__arcLengthDivisions",{get:function(){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");return this.arcLengthDivisions},set:function(value){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");this.arcLengthDivisions=value}});PerspectiveCamera.prototype.setLens=function(focalLength,filmGauge){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.");void 0!==filmGauge&&(this.filmGauge=
filmGauge);this.setFocalLength(focalLength)};Object.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(value){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");this.shadow.camera.fov=value}},shadowCameraLeft:{set:function(value){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left.");this.shadow.camera.left=value}},shadowCameraRight:{set:function(value){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right.");
this.shadow.camera.right=value}},shadowCameraTop:{set:function(value){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top.");this.shadow.camera.top=value}},shadowCameraBottom:{set:function(value){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.");this.shadow.camera.bottom=value}},shadowCameraNear:{set:function(value){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near.");this.shadow.camera.near=value}},shadowCameraFar:{set:function(value){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far.");
this.shadow.camera.far=value}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(value){console.warn("THREE.Light: .shadowBias is now .shadow.bias.");this.shadow.bias=value}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(value){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.");
this.shadow.mapSize.width=value}},shadowMapHeight:{set:function(value){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.");this.shadow.mapSize.height=value}}});Object.defineProperties(BufferAttribute.prototype,{length:{get:function(){console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead.");return this.array.length}},dynamic:{get:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.");return this.usage===
DynamicDrawUsage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.");this.setUsage(DynamicDrawUsage)}}});Object.assign(BufferAttribute.prototype,{setDynamic:function(value){console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.");this.setUsage(!0===value?DynamicDrawUsage:StaticDrawUsage);return this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},
setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(BufferGeometry.prototype,{addIndex:function(index){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");this.setIndex(index)},addAttribute:function(name,attribute,JSCompiler_OptimizeArgumentsArray_p7){console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().");return attribute&&
attribute.isBufferAttribute||attribute&&attribute.isInterleavedBufferAttribute?"index"===name?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(attribute),this):this.setAttribute(name,attribute):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(name,new BufferAttribute(attribute,JSCompiler_OptimizeArgumentsArray_p7)))},addDrawCall:function(start,count,indexOffset){void 0!==indexOffset&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.");
console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");this.addGroup(start,count)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(name){console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().");
return this.deleteAttribute(name)},applyMatrix:function(matrix){console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().");return this.applyMatrix4(matrix)}});Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");return this.groups}},offsets:{get:function(){console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");return this.groups}}});Object.defineProperties(InstancedBufferGeometry.prototype,
{maxInstancedCount:{get:function(){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.");return this.instanceCount},set:function(value){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.");this.instanceCount=value}}});Object.defineProperties(Raycaster.prototype,{linePrecision:{get:function(){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.");return this.params.Line.threshold},
set:function(value){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.");this.params.Line.threshold=value}}});Object.defineProperties(InterleavedBuffer.prototype,{dynamic:{get:function(){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.");return this.usage===DynamicDrawUsage},set:function(value){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.");this.setUsage(value)}}});
Object.assign(InterleavedBuffer.prototype,{setDynamic:function(value){console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.");this.setUsage(!0===value?DynamicDrawUsage:StaticDrawUsage);return this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(ExtrudeBufferGeometry.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},
addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.defineProperties(Uniform.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.");return this}}});
Object.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){console.warn("THREE.Material: .wrapRGB has been removed.");return new Color}},shading:{get:function(){console.error("THREE."+
this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(value){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=1===value}},stencilMask:{get:function(){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead.");return this.stencilFuncMask},set:function(value){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead.");
this.stencilFuncMask=value}}});Object.defineProperties(MeshPhongMaterial.prototype,{metal:{get:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.");return!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");
return this.extensions.derivatives},set:function(value){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");this.extensions.derivatives=value}}});Object.assign(WebGLRenderer.prototype,{clearTarget:function(renderTarget,color,depth,stencil){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.");this.setRenderTarget(renderTarget);this.clear(color,depth,stencil)},animate:function(callback){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop().");
this.setAnimationLoop(callback)},getCurrentRenderTarget:function(){console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().");return this.getRenderTarget()},getMaxAnisotropy:function(){console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().");return this.capabilities.getMaxAnisotropy()},getPrecision:function(){console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.");return this.capabilities.precision},
resetGLState:function(){console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset().");return this.state.reset()},supportsFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).");return this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).");return this.extensions.get("OES_texture_half_float")},
supportsStandardDerivatives:function(){console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).");return this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).");return this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).");
return this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).");return this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.");return this.capabilities.vertexTextures},supportsInstancedArrays:function(){console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).");
return this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(_boolean2){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().");this.setScissorTest(_boolean2)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},
setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().");
return this.getActiveMipmapLevel()}});Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(value){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");this.shadowMap.enabled=value}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(value){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");this.shadowMap.type=value}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},
set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.");return this.getContext()}},vr:{get:function(){console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr");return this.xr}},gammaInput:{get:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.");
return!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.");return!1},set:function(value){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.");this.outputEncoding=!0===value?sRGBEncoding:LinearEncoding}},toneMappingWhitePoint:{get:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.");
return 1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},
set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");
return this.texture.wrapS},set:function(value){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");this.texture.wrapS=value}},wrapT:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");return this.texture.wrapT},set:function(value){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");this.texture.wrapT=value}},magFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},
set:function(value){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=value}},minFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");return this.texture.minFilter},set:function(value){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");this.texture.minFilter=value}},anisotropy:{get:function(){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");
return this.texture.anisotropy},set:function(value){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");this.texture.anisotropy=value}},offset:{get:function(){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");return this.texture.offset},set:function(value){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");this.texture.offset=value}},repeat:{get:function(){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");
return this.texture.repeat},set:function(value){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");this.texture.repeat=value}},format:{get:function(){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");return this.texture.format},set:function(value){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=value}},type:{get:function(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");return this.texture.type},
set:function(value){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=value}},generateMipmaps:{get:function(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");return this.texture.generateMipmaps},set:function(value){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=value}}});Object.defineProperties(Audio.prototype,{load:{value:function(file){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
var scope=this;(new AudioLoader).load(file,function(buffer){scope.setBuffer(buffer)});return this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});AudioAnalyser.prototype.getData=function(){console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData().");return this.getFrequencyData()};CubeCamera.prototype.updateCubeMap=function(renderer,scene){console.warn("THREE.CubeCamera: .updateCubeMap() is now .update().");return this.update(renderer,
scene)};exports.GeometryUtils={merge:function(geometry1,geometry2,materialIndexOffset){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");if(geometry2.isMesh){geometry2.matrixAutoUpdate&&geometry2.updateMatrix();var matrix=geometry2.matrix;geometry2=geometry2.geometry}geometry1.merge(geometry2,matrix,materialIndexOffset)},center:function(geometry){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");
return geometry.center()}};ImageUtils.crossOrigin=void 0;ImageUtils.loadTexture=function(url,mapping,onLoad,onError){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var loader=new TextureLoader;loader.setCrossOrigin(this.crossOrigin);url=loader.load(url,onLoad,void 0,onError);mapping&&(url.mapping=mapping);return url};ImageUtils.loadTextureCube=function(urls,mapping,onLoad,onError){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
var loader=new CubeTextureLoader;loader.setCrossOrigin(this.crossOrigin);urls=loader.load(urls,onLoad,void 0,onError);mapping&&(urls.mapping=mapping);return urls};ImageUtils.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};ImageUtils.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};exports.SceneUtils={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},
detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"118"}}))}
goog.provide("module$node_modules$three$build$three_module");
goog.global. module$node_modules$three$build$three_module=shadow.js.require("module$node_modules$three$build$three_module", {});

//# sourceMappingURL=module$node_modules$three$build$three_module.js.map
