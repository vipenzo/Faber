["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_view/core$macros.cljc","~:line",1,"~:column",23,"~:end-line",1,"~:end-column",35,"~:figwheel-always",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$defn"]],"~:name","~$re-view.core$macros","~:imports",null,"~:requires",["^ ","~$clojure.string","^H","~$string","^H","~$re-view.util","^J","~$util","^J","^=","^=","~$goog","^L"],"~:seen",["^B",["~:require"]],"~:shadow/js-access-global",["^B",["Error"]],"~:uses",["^ ","~$camelCase","^J"],"~:defs",["^ ","~$defview",["^ ","~:protocol-inline",null,"^2",["^ ","^3","re_view/core$macros.cljc","^7",18,"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",0,"~:max-fixed-arity",0,"~:method-params",["~#list",[["^Z",["~$args"]]]],"~:arglists",["^Z",[["~$&","^["]]],"~:arglists-meta",["^Z",[null]]],"^5",11,"^4",60,"~:macro",true,"^6",60,"^10",["^Z",["~$quote",["^Z",[["~$&","^["]]]]],"~:doc","Define a view function.\n\n   Expects optional docstring and methods map, followed by\n    the argslist and body for the render function, which should\n    return a Hiccup vector or React element."],"^D","~$re-view.core$macros/defview","^3","re_view/core$macros.cljc","^7",18,"^U",["^ ","^V",true,"^W",0,"^X",0,"^Y",["^Z",[["^Z",["^["]]]],"^10",["^Z",[["~$&","^["]]],"^11",["^Z",[null]]],"^Y",["^Z",[["^Z",["^["]]]],"~:protocol-impl",null,"^W",0,"^11",["^Z",[null]],"^5",1,"^V",true,"~:methods",[["^ ","^W",0,"^V",true,"~:tag",["^B",["~$seq","~$cljs.core/IList"]]]],"^4",60,"^12",true,"~:ret-tag","~$any","^6",60,"^X",0,"~:fn-var",false,"^10",["^Z",[["~$&","^["]]],"^14","Define a view function.\n\n   Expects optional docstring and methods map, followed by\n    the argslist and body for the render function, which should\n    return a Hiccup vector or React element."],"~$view",["^ ","^T",null,"^2",["^ ","^3","re_view/core$macros.cljc","^7",15,"^U",["^ ","^V",true,"^W",0,"^X",0,"^Y",["^Z",[["^Z",["^["]]]],"^10",["^Z",[["~$&","^["]]],"^11",["^Z",[null]]],"^5",11,"^4",78,"^12",true,"^6",78,"^10",["^Z",["^13",["^Z",[["~$&","^["]]]]],"^14","Returns anonymous view, given the same args as `defview`."],"^D","~$re-view.core$macros/view","^3","re_view/core$macros.cljc","^7",15,"^U",["^ ","^V",true,"^W",0,"^X",0,"^Y",["^Z",[["^Z",["^["]]]],"^10",["^Z",[["~$&","^["]]],"^11",["^Z",[null]]],"^Y",["^Z",[["^Z",["^["]]]],"^16",null,"^W",0,"^11",["^Z",[null]],"^5",1,"^V",true,"^17",[["^ ","^W",0,"^V",true,"^18",["^B",["^19","^1:"]]]],"^4",78,"^12",true,"^1;","^1<","^6",78,"^X",0,"^1=",false,"^10",["^Z",[["~$&","^["]]],"^14","Returns anonymous view, given the same args as `defview`."],"~$js-obj-with-set!",["^ ","^T",null,"^2",["^ ","^3","re_view/core$macros.cljc","^4",6,"^5",21,"^6",6,"^7",37,"~:private",true,"^10",["^Z",["^13",["^Z",[["~$m"]]]]],"^14","Convert a Clojure map to javascript object using `set!`, to play well with Closure Compiler.\n  Keys are converted to camelCase. Shallow."],"^1A",true,"^D","~$re-view.core$macros/js-obj-with-set!","^3","re_view/core$macros.cljc","^7",37,"^Y",["^Z",[["~$m"]]],"^16",null,"^11",["^Z",[null,null]],"^5",1,"^V",false,"^4",6,"^1;",["^B",["^19","^1:","~$clj-nil"]],"^6",6,"^X",1,"^1=",true,"^10",["^Z",["^13",["^Z",[["~$m"]]]]],"^14","Convert a Clojure map to javascript object using `set!`, to play well with Closure Compiler.\n  Keys are converted to camelCase. Shallow."],"^C",["^ ","^T",null,"^2",["^ ","^3","re_view/core$macros.cljc","^7",15,"^U",["^ ","^V",true,"^W",0,"^X",0,"^Y",["^Z",[["^Z",["^["]]]],"^10",["^Z",[["~$&","^["]]],"^11",["^Z",[null]]],"^5",11,"^4",89,"^12",true,"^6",89,"^10",["^Z",["^13",["^Z",[["~$&","^["]]]]],"^14","Defines a stateless view function"],"^D","~$re-view.core$macros/defn","^3","re_view/core$macros.cljc","^7",15,"^U",["^ ","^V",true,"^W",0,"^X",0,"^Y",["^Z",[["^Z",["^["]]]],"^10",["^Z",[["~$&","^["]]],"^11",["^Z",[null]]],"^Y",["^Z",[["^Z",["^["]]]],"^16",null,"^W",0,"^11",["^Z",[null]],"^5",1,"^V",true,"^17",[["^ ","^W",0,"^V",true,"^18",["^B",["^19","^1:"]]]],"^4",89,"^12",true,"^1;","^1<","^6",89,"^X",0,"^1=",false,"^10",["^Z",[["~$&","^["]]],"^14","Defines a stateless view function"],"~$wrap-body",["^ ","^T",null,"^2",["^ ","^3","re_view/core$macros.cljc","^4",52,"^5",20,"^6",52,"^7",29,"^10",["^Z",["^13",["^Z",[["~$name",["^[","~$&","~$body"]]]]]],"^14","Wrap body in anonymous function form."],"^D","~$re-view.core$macros/wrap-body","^3","re_view/core$macros.cljc","^7",29,"^Y",["^Z",[["^1F","~$p__27221"]]],"^16",null,"^11",["^Z",[null,null]],"^5",1,"^V",false,"^4",52,"^1;",["^B",["^19","^1:"]],"^6",52,"^X",2,"^1=",true,"^10",["^Z",["^13",["^Z",[["^1F",["^[","~$&","^1G"]]]]]],"^14","Wrap body in anonymous function form."],"~$group-methods",["^ ","^T",null,"^2",["^ ","^3","re_view/core$macros.cljc","^4",24,"^5",20,"^6",24,"^7",33,"^10",["^Z",["^13",["^Z",[["~$methods"]]]]],"^14","Groups methods by role in a React component."],"^D","~$re-view.core$macros/group-methods","^3","re_view/core$macros.cljc","^7",33,"^Y",["^Z",[["^1K"]]],"^16",null,"^11",["^Z",[null,null]],"^5",1,"^V",false,"^4",24,"^1;",["^B",["~$clj","^1<"]],"^6",24,"^X",1,"^1=",true,"^10",["^Z",["^13",["^Z",[["^1K"]]]]],"^14","Groups methods by role in a React component."],"~$parse-view-args",["^ ","^T",null,"^2",["^ ","^3","re_view/core$macros.cljc","^4",42,"^5",20,"^6",42,"^7",35,"^10",["^Z",["^13",["^Z",[["^["]]]]]],"^D","~$re-view.core$macros/parse-view-args","^3","re_view/core$macros.cljc","^7",35,"^Y",["^Z",[["^["]]],"^16",null,"^11",["^Z",[null,null]],"^5",1,"^V",false,"^4",42,"^1;",["^B",["^1M","^1<"]],"^6",42,"^X",1,"^1=",true,"^10",["^Z",["^13",["^Z",[["^["]]]]]],"~$extend-view",["^ ","^T",null,"^2",["^ ","^3","re_view/core$macros.cljc","^4",97,"^5",11,"^6",97,"^7",22,"^12",true,"^10",["^Z",["^13",["^Z",[["^1>","~$&","^["]]]]],"^U",["^ ","^V",true,"^W",1,"^X",1,"^Y",["^Z",[["^Z",["^1>","^["]]]],"^10",["^Z",[["^1>","~$&","^["]]],"^11",["^Z",[null]]]],"^D","~$re-view.core$macros/extend-view","^3","re_view/core$macros.cljc","^7",22,"^U",["^ ","^V",true,"^W",1,"^X",1,"^Y",["^Z",[["^Z",["^1>","^["]]]],"^10",["^Z",[["^1>","~$&","^["]]],"^11",["^Z",[null]]],"^Y",["^Z",[["^Z",["^1>","^["]]]],"^16",null,"^W",1,"^11",["^Z",[null]],"^5",1,"^V",true,"^17",[["^ ","^W",1,"^V",true,"^18",["^B",["^19","^1:"]]]],"^4",97,"^12",true,"^1;","^1<","^6",97,"^X",1,"^1=",false,"^10",["^Z",[["^1>","~$&","^["]]]],"~$display-name",["^ ","^T",null,"^2",["^ ","^3","re_view/core$macros.cljc","^4",47,"^5",20,"^6",47,"^7",32,"^10",["^Z",["^13",["^Z",[["~$ns","~$given-name"]]]]],"^14","Generate a meaningful name to identify React components while debugging"],"^D","~$re-view.core$macros/display-name","^3","re_view/core$macros.cljc","^7",32,"^Y",["^Z",[["^1S","^1T"]]],"^16",null,"^11",["^Z",[null,null]],"^5",1,"^V",false,"^4",47,"^1;","^I","^6",47,"^X",2,"^1=",true,"^10",["^Z",["^13",["^Z",[["^1S","^1T"]]]]],"^14","Generate a meaningful name to identify React components while debugging"]],"~:require-macros",["^ ","^=","^="],"~:cljs.analyzer/constants",["^ ","^M",["^B",["~$&","~:lifecycle-keys","~$cljs.core/specify!","~$re-view.core/wrap-props","~:class-keys","~$cljs.core/apply","~:view/render","~$re-view.core/factory","~$cljs.core/defn","~$fn","~:wrap-props","~$do","~$args__27270__auto__","~$cljs.core/map?","~$if","~$re-view.hiccup.core/element","~$re-view.core/view*","~:instance-keys","~$cljs.core/let","~$the-class__27235__auto__","~$js-obj","~:prototype","~$re-view.core/class*","~:react-keys","~:display-name","~$set!","~$cljs.core/cons","~$cljs.core/first","~:docstring","~$prototype__27281__auto__","~$def","~$goog.object/get"]],"~:order",["^2D","^2=","^2?","^2B","^1[","^1X","^2<","^24","^26","^2:","^25","^1Z","^2G","^2C","^21","^2>","^2A","^2I","^22","^2;","^23","~$&","^27","^20","^29","^28","^2F","^2E","^2H","^2@","^2J","^1Y"]],"~:flags",["^ ","^N",["^B",[]]],"~:js-deps",["^ "],"~:deps",["^L","^=","^H","^J"]]