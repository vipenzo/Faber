["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_db/patterns.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:shadow/protocol-prefixes",["~#set",["re-db$patterns$IPatternListen$"]],"~:use-macros",null,"~:excludes",["^<",[]],"~:name","~$re-db.patterns","~:imports",null,"~:requires",["^ ","~$cljs.core","^C","~$goog","^D"],"~:seen",["^<",[]],"~:shadow/js-access-global",["^<",["Error"]],"~:uses",null,"~:defs",["^ ","~$remove-value",["^ ","~:protocol-inline",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",34,"^5",7,"^6",34,"^7",19,"~:arglists",["~#list",["~$quote",["^L",[["~$value-map","~$pattern-key","~$pattern","~$value"]]]]],"~:doc","Removes value associated with pattern in value-map."],"^?","~$re-db.patterns/remove-value","^3","re_db/patterns.cljs","^7",19,"~:method-params",["^L",[["^N","^O","^P","^Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^5",1,"~:variadic?",false,"^4",34,"~:ret-tag",["^<",["~$clj","~$any"]],"^6",34,"~:max-fixed-arity",4,"~:fn-var",true,"^K",["^L",["^M",["^L",[["^N","^O","^P","^Q"]]]]],"^R","Removes value associated with pattern in value-map."],"~$datom-patterns",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",114,"^5",7,"^6",114,"^7",21,"^K",["^L",["^M",["^L",[["~$datoms","~$many?"],["^12","^13","~$pattern-keys"]]]]],"^R","Returns a map of patterns matched by a list of datoms.\n  Limits patterns to those listed in pattern-keys.\n  many? should return true for attributes which have schema value :db.cardinality/many?.","~:top-fn",["^ ","^W",false,"~:fixed-arity",3,"^[",3,"^T",[["^12","^13"],["^12","^13","^14"]],"^K",["^L",[["^12","^13"],["^12","^13","^14"]]],"^V",["^L",[null,null]]]],"^?","~$re-db.patterns/datom-patterns","^3","re_db/patterns.cljs","^7",21,"^15",["^ ","^W",false,"^16",3,"^[",3,"^T",[["^12","^13"],["^12","^13","^14"]],"^K",["^L",[["^12","^13"],["^12","^13","^14"]]],"^V",["^L",[null,null]]],"^T",[["^12","^13"],["^12","^13","^14"]],"^U",null,"^16",3,"^V",["^L",[null,null]],"^5",1,"^W",false,"~:methods",[["^ ","^16",2,"^W",false,"~:tag","^Z"],["^ ","^16",3,"^W",false,"^19",["^<",[null,"^Z"]]]],"^4",114,"^6",114,"^[",3,"^10",true,"^K",["^L",[["^12","^13"],["^12","^13","^14"]]],"^R","Returns a map of patterns matched by a list of datoms.\n  Limits patterns to those listed in pattern-keys.\n  many? should return true for attributes which have schema value :db.cardinality/many?."],"~$unlisten",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",97,"^5",7,"^6",97,"^7",15,"^K",["^L",["^M",["^L",[["~$db","~$patterns","^Q"]]]]],"^R","Removes pattern listener."],"^?","~$re-db.patterns/unlisten","^3","re_db/patterns.cljs","^7",15,"^T",["^L",[["^1;","^1<","^Q"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",97,"^X",["^<",[null,"^Z"]],"^6",97,"^[",3,"^10",true,"^K",["^L",["^M",["^L",[["^1;","^1<","^Q"]]]]],"^R","Removes pattern listener."],"~$reaction",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",158,"^5",4,"^6",158,"^7",12,"~:protocol","~$re-db.patterns/IPatternListen","^R","the action to take when a listened pattern matches","^K",["^L",["^M",["^L",[["~$this"]]]]]],"^1?","^1@","^?","~$re-db.patterns/reaction","^3","re_db/patterns.cljs","^7",12,"^T",["^L",[["^1A"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",157,"^X","^Z","^6",158,"^[",1,"^10",true,"^K",["^L",["^M",["^L",[["^1A"]]]]],"^R","the action to take when a listened pattern matches"],"~$listen-lookup-ref",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",47,"^5",7,"^6",47,"^7",24,"^K",["^L",["^M",["^L",[[["~$lookup-attr","~$lookup-val","~:as","~$lookup-ref"],"~$kind","^P","~$listeners","^1;","~$f"]]]]],"^R","Adds lookup ref listener, which uses an intermediate listener to update when\n  the target of a lookup ref changes."],"^?","~$re-db.patterns/listen-lookup-ref","^3","re_db/patterns.cljs","^7",24,"^T",["^L",[["~$p__49016","^1H","^P","^1I","^1;","~$f"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",47,"^X",["^<",["^Y","^Z"]],"^6",47,"^[",6,"^10",true,"^K",["^L",["^M",["^L",[[["^1D","^1E","^1F","^1G"],"^1H","^P","^1I","^1;","~$f"]]]]],"^R","Adds lookup ref listener, which uses an intermediate listener to update when\n  the target of a lookup ref changes."],"~$non-empty-keys",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",107,"^5",7,"^6",107,"^7",21,"^K",["^L",["^M",["^L",[["~$m"]]]]],"^R","Returns list of keys for which map contains a non-empty value."],"^?","~$re-db.patterns/non-empty-keys","^3","re_db/patterns.cljs","^7",21,"^T",["^L",[["~$m"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",107,"^X",["^<",[null,"^Z"]],"^6",107,"^[",1,"^10",true,"^K",["^L",["^M",["^L",[["~$m"]]]]],"^R","Returns list of keys for which map contains a non-empty value."],"~$IPatternListen",["^ ","^2",["^ ","~:protocol-symbol",true,"^3","re_db/patterns.cljs","^7",28,"^5",14,"^4",157,"~:protocol-info",["^ ","^18",["^ ","^1>",[["^1A"]],"^1<",[["^1A"]]]],"^6",157,"~:sigs",["^ ","~:reaction",["^ ","^?","^1>","^K",["^L",[["^1A"]]],"^R","the action to take when a listened pattern matches"],"~:patterns",["^ ","^?","^1<","^K",["^L",[["^1A"]]],"^R","Return the patterns currently listened to"]],"~:jsdoc",["^L",["@interface"]]],"^1O",true,"^?","^1@","^3","re_db/patterns.cljs","^7",28,"^5",1,"^4",157,"^1P",["^ ","^18",["^ ","^1>",[["^1A"]],"^1<",[["^1A"]]]],"~:info",null,"^6",157,"^19","^Z","^1Q",["^ ","^1R",["^ ","^?","^1>","^K",["^L",[["^1A"]]],"^R","the action to take when a listened pattern matches"],"^1S",["^ ","^?","^1<","^K",["^L",[["^1A"]]],"^R","Return the patterns currently listened to"]],"~:impls",["^<",[]],"^1T",["^L",["@interface"]]],"~$empty-pattern-map",["^ ","^2",["^ ","^3","re_db/patterns.cljs","^4",8,"^5",16,"^6",8,"^7",33,"~:private",true],"^1X",true,"^?","~$re-db.patterns/empty-pattern-map","^3","re_db/patterns.cljs","^7",33,"^5",1,"^4",8,"^6",8,"^19","~$cljs.core/IMap","^R","Map for building sets of patterns."],"~$*pattern-log*",["^ ","^2",["^ ","^3","re_db/patterns.cljs","^4",3,"^5",16,"^6",3,"^7",29,"~:dynamic",true],"^?","~$re-db.patterns/*pattern-log*","^3","re_db/patterns.cljs","^7",29,"^5",1,"^20",true,"^4",3,"^6",3,"^19","^Z","^R","Dynamic var used in conjunction with re-db.patterns/capture-patterns macro to\n  identify patterns read by a block of code."],"~$supported-pattern-keys",["^ ","^?","~$re-db.patterns/supported-pattern-keys","^3","re_db/patterns.cljs","^4",15,"^5",1,"^6",15,"^7",28,"^2",["^ ","^3","re_db/patterns.cljs","^4",15,"^5",6,"^6",15,"^7",28],"^19",["^<",["^Y","^Z","~$cljs.core/ISet","~$cljs.core/MetaFn","~$clj-nil"]]],"~$conj-set",["^ ","^?","~$re-db.patterns/conj-set","^3","re_db/patterns.cljs","^4",17,"^5",1,"^6",17,"^7",14,"^2",["^ ","^3","re_db/patterns.cljs","^4",17,"^5",6,"^6",17,"^7",14],"^19","~$function"],"^1<",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",159,"^5",4,"^6",159,"^7",12,"^1?","^1@","^R","Return the patterns currently listened to","^K",["^L",["^M",["^L",[["^1A"]]]]]],"^1?","^1@","^?","~$re-db.patterns/patterns","^3","re_db/patterns.cljs","^7",12,"^T",["^L",[["^1A"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",157,"^X","^Z","^6",159,"^[",1,"^10",true,"^K",["^L",["^M",["^L",[["^1A"]]]]],"^R","Return the patterns currently listened to"],"~$lookup-ref?",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",77,"^5",7,"^6",77,"^7",18,"^K",["^L",["^M",["^L",[["^1H","^P"]]]]],"^R","Returns true if pattern has lookup ref in id position."],"^?","~$re-db.patterns/lookup-ref?","^3","re_db/patterns.cljs","^7",18,"^T",["^L",[["^1H","^P"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",77,"^X",["^<",[null,"~$boolean","^Z","^26"]],"^6",77,"^[",2,"^10",true,"^K",["^L",["^M",["^L",[["^1H","^P"]]]]],"^R","Returns true if pattern has lookup ref in id position."],"~$into-set",["^ ","^?","~$re-db.patterns/into-set","^3","re_db/patterns.cljs","^4",18,"^5",1,"^6",18,"^7",14,"^2",["^ ","^3","re_db/patterns.cljs","^4",18,"^5",6,"^6",18,"^7",14],"^19","^29"],"~$pattern-values",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",134,"^5",7,"^6",134,"^7",21,"^K",["^L",["^M",["^L",[["~$pattern-map","^N"]]]]],"^R","Returns values associated with patterns.\n\n  value-map is of form {<pattern-key> {<pattern> #{...set of values...}}}.\n  pattern-map is of form {<pattern-key> #{...set of patterns...}}"],"^?","~$re-db.patterns/pattern-values","^3","re_db/patterns.cljs","^7",21,"^T",["^L",[["^2A","^N"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",134,"^X",["^<",[null,"^Z"]],"^6",134,"^[",2,"^10",true,"^K",["^L",["^M",["^L",[["^2A","^N"]]]]],"^R","Returns values associated with patterns.\n\n  value-map is of form {<pattern-key> {<pattern> #{...set of values...}}}.\n  pattern-map is of form {<pattern-key> #{...set of patterns...}}"],"~$unlisten-lookup-ref",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",68,"^5",7,"^6",68,"^7",26,"^K",["^L",["^M",["^L",[["^1G","^1H","^P","^1I","^1;","~$f"]]]]],"^R","Removes lookup ref listener."],"^?","~$re-db.patterns/unlisten-lookup-ref","^3","re_db/patterns.cljs","^7",26,"^T",["^L",[["^1G","^1H","^P","^1I","^1;","~$f"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",68,"^X",["^<",["^Y","^26"]],"^6",68,"^[",6,"^10",true,"^K",["^L",["^M",["^L",[["^1G","^1H","^P","^1I","^1;","~$f"]]]]],"^R","Removes lookup ref listener."],"~$add-value",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",29,"^5",7,"^6",29,"^7",16,"^K",["^L",["^M",["^L",[["^N","^O","^P","^Q"]]]]],"^R","Associates value with pattern in value-map."],"^?","~$re-db.patterns/add-value","^3","re_db/patterns.cljs","^7",16,"^T",["^L",[["^N","^O","^P","^Q"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",29,"^X",["^<",["^Y","^Z"]],"^6",29,"^[",4,"^10",true,"^K",["^L",["^M",["^L",[["^N","^O","^P","^Q"]]]]],"^R","Associates value with pattern in value-map."],"~$datom-values",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",144,"^5",7,"^6",144,"^7",19,"^K",["^L",["^M",["^L",[["^N","^12","^13"]]]]],"^R","Returns the set of values in value-map associated with patterns matched by datoms."],"^?","~$re-db.patterns/datom-values","^3","re_db/patterns.cljs","^7",19,"^T",["^L",[["^N","^12","^13"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",144,"^X",["^<",[null,"^Z"]],"^6",144,"^[",3,"^10",true,"^K",["^L",["^M",["^L",[["^N","^12","^13"]]]]],"^R","Returns the set of values in value-map associated with patterns matched by datoms."],"~$resolve-id",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",41,"^5",7,"^6",41,"^7",17,"^K",["^L",["^M",["^L",[["~$db-snap","~$attr","~$val"]]]]],"^R","Copied from re-db.core."],"^?","~$re-db.patterns/resolve-id","^3","re_db/patterns.cljs","^7",17,"^T",["^L",[["^2J","^2K","^2L"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",41,"^X",["^<",["^Z","^26"]],"^6",41,"^[",3,"^10",true,"^K",["^L",["^M",["^L",[["^2J","^2K","^2L"]]]]],"^R","Copied from re-db.core."],"~$invalidate!",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",151,"^5",7,"^6",151,"^7",18,"^K",["^L",["^M",["^L",[["^1;","^O","^P"]]]]],"^R","Invalidate a pattern, ie. invoke callbacks that match pattern"],"^?","~$re-db.patterns/invalidate!","^3","re_db/patterns.cljs","^7",18,"^T",["^L",[["^1;","^O","^P"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",151,"^X","^26","^6",151,"^[",3,"^10",true,"^K",["^L",["^M",["^L",[["^1;","^O","^P"]]]]],"^R","Invalidate a pattern, ie. invoke callbacks that match pattern"],"~$listen",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",87,"^5",7,"^6",87,"^7",13,"^K",["^L",["^M",["^L",[["^1;","^1<","^Q"]]]]],"^R","Adds pattern listener."],"^?","~$re-db.patterns/listen","^3","re_db/patterns.cljs","^7",13,"^T",["^L",[["^1;","^1<","^Q"]]],"^U",null,"^V",["^L",[null,null]],"^5",1,"^W",false,"^4",87,"^X",["^<",[null,"^Z"]],"^6",87,"^[",3,"^10",true,"^K",["^L",["^M",["^L",[["^1;","^1<","^Q"]]]]],"^R","Adds pattern listener."],"~$log-read",["^ ","^J",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",20,"^5",7,"^6",20,"^7",15,"^K",["^L",["^M",["^L",[["^1H","^P"],["^1H","^P","~$multiple?"]]]]],"^R","Record pattern to *pattern-log*.","^15",["^ ","^W",false,"^16",3,"^[",3,"^T",[["^1H","^P"],["^1H","^P","^2S"]],"^K",["^L",[["^1H","^P"],["^1H","^P","^2S"]]],"^V",["^L",[null,null]]]],"^?","~$re-db.patterns/log-read","^3","re_db/patterns.cljs","^7",15,"^15",["^ ","^W",false,"^16",3,"^[",3,"^T",[["^1H","^P"],["^1H","^P","^2S"]],"^K",["^L",[["^1H","^P"],["^1H","^P","^2S"]]],"^V",["^L",[null,null]]],"^T",[["^1H","^P"],["^1H","^P","^2S"]],"^U",null,"^16",3,"^V",["^L",[null,null]],"^5",1,"^W",false,"^18",[["^ ","^16",2,"^W",false,"^19",["^<",[null,"^26"]]],["^ ","^16",3,"^W",false,"^19",["^<",[null,"^26"]]]],"^4",20,"^6",20,"^[",3,"^10",true,"^K",["^L",[["^1H","^P"],["^1H","^P","^2S"]]],"^R","Record pattern to *pattern-log*."]],"~:require-macros",["^ ","^C","^C"],"~:cljs.analyzer/constants",["^ ","^E",["^<",["~:_a_","~:lookup-cb","~:e__","~:db-after","~:_av","~:ave","~:lookup-refs","~:ea_","~:lookup-target","~:listeners"]],"~:order",["^2Y","^2W","^2[","^32","^30","^2Z","^31","^2X","^33","^34"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^D","^C"]]