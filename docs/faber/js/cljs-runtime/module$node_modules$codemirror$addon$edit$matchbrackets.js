shadow$provide.module$node_modules$codemirror$addon$edit$matchbrackets=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){function findMatchingBracket(cm,where,config){var line=cm.getLineHandle(where.line),pos=where.ch-1,afterCursor=config&&config.afterCursor;null==afterCursor&&
(afterCursor=/(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className));line=!afterCursor&&0<=pos&&matching[line.text.charAt(pos)]||matching[line.text.charAt(++pos)];if(!line)return null;afterCursor="\x3e"==line.charAt(1)?1:-1;if(config&&config.strict&&0<afterCursor!=(pos==where.ch))return null;var style=cm.getTokenTypeAt(Pos(where.line,pos+1));cm=scanForBracket(cm,Pos(where.line,pos+(0<afterCursor?1:0)),afterCursor,style||null,config);return null==cm?null:{from:Pos(where.line,pos),to:cm&&
cm.pos,match:cm&&cm.ch==line.charAt(0),forward:0<afterCursor}}function scanForBracket(cm,where,dir,style,config){var maxScanLen=config&&config.maxScanLineLength||1E4,maxScanLines=config&&config.maxScanLines||1E3,stack=[];config=config&&config.bracketRegex?config.bracketRegex:/[(){}[\]]/;maxScanLines=0<dir?Math.min(where.line+maxScanLines,cm.lastLine()+1):Math.max(cm.firstLine()-1,where.line-maxScanLines);for(var lineNo=where.line;lineNo!=maxScanLines;lineNo+=dir){var line=cm.getLine(lineNo);if(line){var pos=
0<dir?0:line.length-1,end=0<dir?line.length:-1;if(!(line.length>maxScanLen))for(lineNo==where.line&&(pos=where.ch-(0>dir?1:0));pos!=end;pos+=dir){var ch=line.charAt(pos);if(config.test(ch)&&(void 0===style||cm.getTokenTypeAt(Pos(lineNo,pos+1))==style))if("\x3e"==matching[ch].charAt(1)==0<dir)stack.push(ch);else if(stack.length)stack.pop();else return{pos:Pos(lineNo,pos),ch:ch}}}}return lineNo-dir==(0<dir?cm.lastLine():cm.firstLine())?!1:null}function matchBrackets(cm,autoclear,config){for(var maxHighlightLen=
cm.state.matchBrackets.maxHighlightLineLength||1E3,marks=[],ranges=cm.listSelections(),i$jscomp$0=0;i$jscomp$0<ranges.length;i$jscomp$0++){var match=ranges[i$jscomp$0].empty()&&findMatchingBracket(cm,ranges[i$jscomp$0].head,config);if(match&&cm.getLine(match.from.line).length<=maxHighlightLen){var style=match.match?"CodeMirror-matchingbracket":"CodeMirror-nonmatchingbracket";marks.push(cm.markText(match.from,Pos(match.from.line,match.from.ch+1),{className:style}));match.to&&cm.getLine(match.to.line).length<=
maxHighlightLen&&marks.push(cm.markText(match.to,Pos(match.to.line,match.to.ch+1),{className:style}))}}if(marks.length)if(ie_lt8&&cm.state.focused&&cm.focus(),config=function(){cm.operation(function(){for(var i=0;i<marks.length;i++)marks[i].clear()})},autoclear)setTimeout(config,800);else return config}function doMatchBrackets(cm){cm.operation(function(){currentlyHighlighted&&(currentlyHighlighted(),currentlyHighlighted=null);currentlyHighlighted=matchBrackets(cm,!1,cm.state.matchBrackets)})}var ie_lt8=
/MSIE \d/.test(navigator.userAgent)&&(null==document.documentMode||8>document.documentMode),Pos=CodeMirror.Pos,matching={"(":")\x3e",")":"(\x3c","[":"]\x3e","]":"[\x3c","{":"}\x3e","}":"{\x3c"},currentlyHighlighted=null;CodeMirror.defineOption("matchBrackets",!1,function(cm,val,old){old&&old!=CodeMirror.Init&&(cm.off("cursorActivity",doMatchBrackets),currentlyHighlighted&&(currentlyHighlighted(),currentlyHighlighted=null));val&&(cm.state.matchBrackets="object"==typeof val?val:{},cm.on("cursorActivity",
doMatchBrackets))});CodeMirror.defineExtension("matchBrackets",function(){matchBrackets(this,!0)});CodeMirror.defineExtension("findMatchingBracket",function(pos,config,oldConfig){if(oldConfig||"boolean"==typeof config)oldConfig?(oldConfig.strict=config,config=oldConfig):config=config?{strict:!0}:null;return findMatchingBracket(this,pos,config)});CodeMirror.defineExtension("scanForBracket",function(pos,dir,style,config){return scanForBracket(this,pos,dir,style,config)})})}
//# sourceMappingURL=module$node_modules$codemirror$addon$edit$matchbrackets.js.map
