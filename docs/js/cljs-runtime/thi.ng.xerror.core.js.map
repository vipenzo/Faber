{"version":3,"sources":["thi/ng/xerror/core.cljc"],"mappings":";AAEA,AAAA,AAAMA,AACKC;AADX,AAEE,AAAqD,AAAAC,AAAWD;;AAElE,AAAA,AAAME,AACHC;AADH,AACM,AAACJ,AAAO,AAAA,AAA4BI;;AAE1C,AAAA,AAAMC,AACHC,AAAEC;AADL,AACQ,AAACP,AAAO,AAAA,AAAA,AAAsBM,AAAW,AAACE,AAAOD;;AAEzD,AAAA,AAAME,AACHC;AADH,AACM,AAACV,AAAO,AAAA,AAA8BU;;AAE5C,AAAA,AAAA,AAAAC,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAX,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMW,AACFN;AADJ,AACO,AAAA,AAACO,AAAgCP;;;AADxC,AAAA,AAAA,AAAMM,AAEFZ,AAAIM;AAFR,AAEW,AAACP,AAAO,AAAA,AAAKC,AAASM;;;AAFjC,AAAA,AAAA,AAAMM;;AAAN,AAIA,AAAA,AAAA,AAAAF,AAAMK;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAd,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMc;AAAN,AACM,AAAA,AAACC;;;AADP,AAAA,AAAA,AAAMD,AAEMf;AAFZ,AAGG,AAA0D,AAAAC,AAAWD;;;AAHxE,AAAA,AAAA,AAAMe;;AAAN","names":["thi.ng.xerror.core/throw!","msg","js/Error","thi.ng.xerror.core/key-error!","k","thi.ng.xerror.core/type-error!","t","x","cljs.core.pr_str","thi.ng.xerror.core/arity-error!","n","var_args","G__45319","thi.ng.xerror.core/illegal-arg!","thi.ng.xerror.core.illegal_arg_BANG_","G__45322","thi.ng.xerror.core/unsupported!","thi.ng.xerror.core.unsupported_BANG_"],"sourcesContent":["(ns thi.ng.xerror.core)\n\n(defn throw!\n  [^String msg]\n  (throw #?(:clj (IllegalArgumentException. msg) :cljs (js/Error. msg))))\n\n(defn key-error!\n  [k] (throw! (str \"Illegal lookup key: \" k)))\n\n(defn type-error!\n  [t x] (throw! (str \"Can't cast to \" t \" from \" (pr-str x))))\n\n(defn arity-error!\n  [n] (throw! (str \"Wrong number of args: \" n)))\n\n(defn illegal-arg!\n  ([x] (illegal-arg! \"Illegal argument\" x))\n  ([msg x] (throw! (str msg \": \" x))))\n\n(defn unsupported!\n  ([] (unsupported! \"Unsupported operation\"))\n  ([^String msg]\n   (throw #?(:clj (UnsupportedOperationException. msg) :cljs (js/Error. msg)))))\n"]}