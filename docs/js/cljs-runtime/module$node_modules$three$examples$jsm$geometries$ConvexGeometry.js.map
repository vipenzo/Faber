{
"version":3,
"file":"module$node_modules$three$examples$jsm$geometries$ConvexGeometry.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,iEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAAI,qBAAA,CAA+BJ,OAAAK,eAA/B,CAAwD,IAAK,EAE7D,KAAIC,aAAeR,OAAA,CAAQ,8CAAR,CAAnB,CAEIS,YAAcT,OAAA,CAAQ,wDAAR,CAMdO,OAAAA,CAAiBA,QAAuB,CAACG,MAAD,CAAS,CACnDF,YAAAG,SAAAC,KAAA,CAA2B,IAA3B,CAEA,KAAAC,mBAAA,CAAwB,IAAIP,oBAAJ,CAAyBI,MAAzB,CAAxB,CACA,KAAAI,cAAA,EAJmD,CAOrDZ;OAAAK,eAAA,CAAyBA,MACzBA,OAAAQ,UAAA,CAA2BZ,MAAAa,OAAA,CAAcR,YAAAG,SAAAI,UAAd,CAC3BR,OAAAQ,UAAAE,YAAA,CAAuCV,MAEvC,KAAID,qBAAuBA,QAA6B,CAACI,MAAD,CAAS,CAC/DF,YAAAU,eAAAN,KAAA,CAAiC,IAAjC,CAGA,KAAIO,SAAW,EAAf,CACIC,QAAU,EAEiBC,KAAAA,EAA/B,GAAIZ,WAAAa,WAAJ,EACEC,OAAAC,MAAA,CAAc,uEAAd,CAKEC,OAAAA,CAFaC,CAAA,IAAIjB,WAAAa,WAAJI,eAAAC,CAA2CjB,MAA3CiB,CAELF,MAEZ,KAAK,IAAIG,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,MAAAI,OAApB,CAAkCD,CAAA,EAAlC,CAAuC,CACrC,IAAIE,KAAOL,MAAA,CAAMG,CAAN,CAAX,CACIG,KAAOD,IAAAC,KAEX,GAAG,CACD,IAAIC;AAAQD,IAAAE,KAAA,EAAAD,MACZb,SAAAe,KAAA,CAAcF,KAAAG,EAAd,CAAuBH,KAAAI,EAAvB,CAAgCJ,KAAAK,EAAhC,CACAjB,QAAAc,KAAA,CAAaJ,IAAAQ,OAAAH,EAAb,CAA4BL,IAAAQ,OAAAF,EAA5B,CAA2CN,IAAAQ,OAAAD,EAA3C,CACAN,KAAA,CAAOA,IAAAQ,KAJN,CAAH,MAKSR,IALT,GAKkBD,IAAAC,KALlB,CAJqC,CAavC,IAAAS,aAAA,CAAkB,UAAlB,CAA8B,IAAIhC,YAAAiC,uBAAJ,CAAwCtB,QAAxC,CAAkD,CAAlD,CAA9B,CACA,KAAAqB,aAAA,CAAkB,QAAlB,CAA4B,IAAIhC,YAAAiC,uBAAJ,CAAwCrB,OAAxC,CAAiD,CAAjD,CAA5B,CA7B+D,CAgCjElB,QAAAI,qBAAA,CAA+BA,oBAC/BA,qBAAAS,UAAA,CAAiCZ,MAAAa,OAAA,CAAcR,YAAAU,eAAAH,UAAd,CACjCT,qBAAAS,UAAAE,YAAA,CAA6CX,oBA7DgF;",
"sources":["node_modules/three/examples/jsm/geometries/ConvexGeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$examples$jsm$geometries$ConvexGeometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConvexBufferGeometry = exports.ConvexGeometry = void 0;\n\nvar _threeModule = require(\"../../../build/three.module.js\");\n\nvar _ConvexHull = require(\"../math/ConvexHull.js\");\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n// ConvexGeometry\nvar ConvexGeometry = function ConvexGeometry(points) {\n  _threeModule.Geometry.call(this);\n\n  this.fromBufferGeometry(new ConvexBufferGeometry(points));\n  this.mergeVertices();\n};\n\nexports.ConvexGeometry = ConvexGeometry;\nConvexGeometry.prototype = Object.create(_threeModule.Geometry.prototype);\nConvexGeometry.prototype.constructor = ConvexGeometry; // ConvexBufferGeometry\n\nvar ConvexBufferGeometry = function ConvexBufferGeometry(points) {\n  _threeModule.BufferGeometry.call(this); // buffers\n\n\n  var vertices = [];\n  var normals = [];\n\n  if (_ConvexHull.ConvexHull === undefined) {\n    console.error('THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull');\n  }\n\n  var convexHull = new _ConvexHull.ConvexHull().setFromPoints(points); // generate vertices and normals\n\n  var faces = convexHull.faces;\n\n  for (var i = 0; i < faces.length; i++) {\n    var face = faces[i];\n    var edge = face.edge; // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n    do {\n      var point = edge.head().point;\n      vertices.push(point.x, point.y, point.z);\n      normals.push(face.normal.x, face.normal.y, face.normal.z);\n      edge = edge.next;\n    } while (edge !== face.edge);\n  } // build geometry\n\n\n  this.setAttribute('position', new _threeModule.Float32BufferAttribute(vertices, 3));\n  this.setAttribute('normal', new _threeModule.Float32BufferAttribute(normals, 3));\n};\n\nexports.ConvexBufferGeometry = ConvexBufferGeometry;\nConvexBufferGeometry.prototype = Object.create(_threeModule.BufferGeometry.prototype);\nConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","ConvexBufferGeometry","ConvexGeometry","_threeModule","_ConvexHull","points","Geometry","call","fromBufferGeometry","mergeVertices","prototype","create","constructor","BufferGeometry","vertices","normals","undefined","ConvexHull","console","error","faces","setFromPoints","convexHull","i","length","face","edge","point","head","push","x","y","z","normal","next","setAttribute","Float32BufferAttribute"]
}
