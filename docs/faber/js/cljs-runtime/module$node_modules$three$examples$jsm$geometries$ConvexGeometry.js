shadow$provide.module$node_modules$three$examples$jsm$geometries$ConvexGeometry=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.ConvexBufferGeometry=exports.ConvexGeometry=void 0;var _threeModule=require("module$node_modules$three$build$three_module"),_ConvexHull=require("module$node_modules$three$examples$jsm$math$ConvexHull");global=function(points){_threeModule.Geometry.call(this);this.fromBufferGeometry(new ConvexBufferGeometry(points));this.mergeVertices()};
exports.ConvexGeometry=global;global.prototype=Object.create(_threeModule.Geometry.prototype);global.prototype.constructor=global;var ConvexBufferGeometry=function(points){_threeModule.BufferGeometry.call(this);var vertices=[],normals=[];void 0===_ConvexHull.ConvexHull&&console.error("THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull");points=(new _ConvexHull.ConvexHull).setFromPoints(points).faces;for(var i=0;i<points.length;i++){var face=points[i],edge=face.edge;do{var point=
edge.head().point;vertices.push(point.x,point.y,point.z);normals.push(face.normal.x,face.normal.y,face.normal.z);edge=edge.next}while(edge!==face.edge)}this.setAttribute("position",new _threeModule.Float32BufferAttribute(vertices,3));this.setAttribute("normal",new _threeModule.Float32BufferAttribute(normals,3))};exports.ConvexBufferGeometry=ConvexBufferGeometry;ConvexBufferGeometry.prototype=Object.create(_threeModule.BufferGeometry.prototype);ConvexBufferGeometry.prototype.constructor=ConvexBufferGeometry}
//# sourceMappingURL=module$node_modules$three$examples$jsm$geometries$ConvexGeometry.js.map
