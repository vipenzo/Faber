["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","com/stuartsierra/dependency.cljs","~:line",11,"~:column",3,"~:end-line",11,"~:end-column",30,"~:author","Stuart Sierra","~:doc","Directed acyclic graph for representing dependency relationships."],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:shadow/protocol-prefixes",["~#set",["com$stuartsierra$dependency$DependencyGraphUpdate$","com$stuartsierra$dependency$DependencyGraph$"]],"~:use-macros",null,"~:excludes",["^>",[]],"~:name","~$com.stuartsierra.dependency","~:imports",null,"~:requires",["^ ","~$clojure.set","^E","~$set","^E","~$cljs.core","^G","~$goog","^H"],"~:seen",["^>",["~:require"]],"~:shadow/js-access-global",["^>",["Number","Error"]],"~:uses",null,"~:defs",["^ ","~$immediate-dependencies",["^ ","~:protocol-inline",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",15,"^5",4,"^6",15,"^7",26,"~:protocol","~$com.stuartsierra.dependency/DependencyGraph","^9","Returns the set of immediate dependencies of node.","~:arglists",["~#list",["~$quote",["^S",[["~$graph","~$node"]]]]]],"^P","^Q","^A","~$com.stuartsierra.dependency/immediate-dependencies","^3","com/stuartsierra/dependency.cljs","^7",26,"~:method-params",["^S",[["^U","^V"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^5",1,"~:variadic?",false,"^4",14,"~:ret-tag","~$any","^6",15,"~:max-fixed-arity",2,"~:fn-var",true,"^R",["^S",["^T",["^S",[["^U","^V"]]]]],"^9","Returns the set of immediate dependencies of node."],"~$remove-from-map",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",41,"^5",8,"^6",41,"^7",23,"~:private",true,"^R",["^S",["^T",["^S",[["~$amap","~$x"]]]]]],"^15",true,"^A","~$com.stuartsierra.dependency/remove-from-map","^3","com/stuartsierra/dependency.cljs","^7",23,"^X",["^S",[["^16","~$x"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",41,"^10",["^>",[null,"^11"]],"^6",41,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^16","~$x"]]]]]],"~$remove-edge",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",32,"^5",4,"^6",32,"^7",15,"^P","~$com.stuartsierra.dependency/DependencyGraphUpdate","^9","Returns a new graph with the dependency from node to dep removed.","^R",["^S",["^T",["^S",[["^U","^V","~$dep"]]]]]],"^P","^19","^A","~$com.stuartsierra.dependency/remove-edge","^3","com/stuartsierra/dependency.cljs","^7",15,"^X",["^S",[["^U","^V","^1:"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",28,"^10","^11","^6",32,"^12",3,"^13",true,"^R",["^S",["^T",["^S",[["^U","^V","^1:"]]]]],"^9","Returns a new graph with the dependency from node to dep removed."],"~$MapDependencyGraph",["^ ","~:num-fields",2,"~:protocols",["^>",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","^Q","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","^19","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^A","~$com.stuartsierra.dependency/MapDependencyGraph","^3","com/stuartsierra/dependency.cljs","^7",30,"~:type",true,"^5",12,"~:internal-ctor",true,"^4",59,"~:record",true,"^6",59,"~:tag","~$function","~:skip-protocol-flag",["^>",["^1?","^1@","^1A","^1B","^1C","^1D","^1E","^1F","^1G","^1H","^1I","^1J","^1K","^1L","^1M"]]],"~$depends?",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",104,"^5",7,"^6",104,"^7",15,"^R",["^S",["^T",["^S",[["^U","~$x","~$y"]]]]],"^9","True if x is directly or transitively dependent on y."],"^A","~$com.stuartsierra.dependency/depends?","^3","com/stuartsierra/dependency.cljs","^7",15,"^X",["^S",[["^U","~$x","~$y"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",104,"^10","~$boolean","^6",104,"^12",3,"^13",true,"^R",["^S",["^T",["^S",[["^U","~$x","~$y"]]]]],"^9","True if x is directly or transitively dependent on y."],"~$depend",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",29,"^5",4,"^6",29,"^7",10,"^P","^19","^9","Returns a new graph with a dependency from node to dep (\"node depends\n    on dep\"). Forbids circular dependencies.","^R",["^S",["^T",["^S",[["^U","^V","^1:"]]]]]],"^P","^19","^A","~$com.stuartsierra.dependency/depend","^3","com/stuartsierra/dependency.cljs","^7",10,"^X",["^S",[["^U","^V","^1:"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",28,"^10","^11","^6",29,"^12",3,"^13",true,"^R",["^S",["^T",["^S",[["^U","^V","^1:"]]]]],"^9","Returns a new graph with a dependency from node to dep (\"node depends\n    on dep\"). Forbids circular dependencies."],"~$immediate-dependents",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",17,"^5",4,"^6",17,"^7",24,"^P","^Q","^9","Returns the set of immediate dependents of node.","^R",["^S",["^T",["^S",[["^U","^V"]]]]]],"^P","^Q","^A","~$com.stuartsierra.dependency/immediate-dependents","^3","com/stuartsierra/dependency.cljs","^7",24,"^X",["^S",[["^U","^V"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",14,"^10","^11","^6",17,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^U","^V"]]]]],"^9","Returns the set of immediate dependents of node."],"~$transitive",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",46,"^5",8,"^6",46,"^7",18,"^15",true,"^R",["^S",["^T",["^S",[["~$m","~$x"]]]]],"^9","Recursively expands the set of dependency relationships starting\n  at (get m x)"],"^15",true,"^A","~$com.stuartsierra.dependency/transitive","^3","com/stuartsierra/dependency.cljs","^7",18,"^X",["^S",[["~$m","~$x"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",46,"^10",["^>",[null,"^11"]],"^6",46,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["~$m","~$x"]]]]],"^9","Recursively expands the set of dependency relationships starting\n  at (get m x)"],"~$set-conj",["^ ","^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",56,"^5",16,"^6",56,"^7",24,"^15",true],"^15",true,"^A","~$com.stuartsierra.dependency/set-conj","^3","com/stuartsierra/dependency.cljs","^7",24,"^5",1,"^4",56,"^6",56,"^1R","^1S"],"~$remove-node",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",36,"^5",4,"^6",36,"^7",15,"^P","^19","^9","Removes the node from the dependency graph without removing it as a\n    dependency of other nodes. That is, removes all outgoing edges from\n    node.","^R",["^S",["^T",["^S",[["^U","^V"]]]]]],"^P","^19","^A","~$com.stuartsierra.dependency/remove-node","^3","com/stuartsierra/dependency.cljs","^7",15,"^X",["^S",[["^U","^V"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",28,"^10","^11","^6",36,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^U","^V"]]]]],"^9","Removes the node from the dependency graph without removing it as a\n    dependency of other nodes. That is, removes all outgoing edges from\n    node."],"~$->MapDependencyGraph",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^7",30,"^5",12,"^1P",true,"~:factory","~:positional","^4",59,"^6",59,"^R",["^S",["^T",["^S",[["~$dependencies","~$dependents"]]]]],"^9","Positional factory function for com.stuartsierra.dependency/MapDependencyGraph."],"^A","~$com.stuartsierra.dependency/->MapDependencyGraph","^3","com/stuartsierra/dependency.cljs","^7",30,"^X",["^S",[["^29","^2:"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^1P",true,"^[",false,"^27","^28","^4",59,"^10","^1N","^6",59,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^29","^2:"]]]]],"^9","Positional factory function for com.stuartsierra.dependency/MapDependencyGraph."],"~$topo-comparator",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",139,"^5",7,"^6",139,"^7",22,"^R",["^S",["^T",["^S",[["^U"]]]]],"^9","Returns a comparator fn which produces a topological sort based on\n  the dependencies in graph. Nodes not present in the graph will sort\n  after nodes in the graph."],"^A","~$com.stuartsierra.dependency/topo-comparator","^3","com/stuartsierra/dependency.cljs","^7",22,"^X",["^S",[["^U"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",139,"^10","^1S","^6",139,"^12",1,"^13",true,"^R",["^S",["^T",["^S",[["^U"]]]]],"^9","Returns a comparator fn which produces a topological sort based on\n  the dependencies in graph. Nodes not present in the graph will sort\n  after nodes in the graph."],"~$transitive-dependencies",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",19,"^5",4,"^6",19,"^7",27,"^P","^Q","^9","Returns the set of all things which node depends on, directly or\n    transitively.","^R",["^S",["^T",["^S",[["^U","^V"]]]]]],"^P","^Q","^A","~$com.stuartsierra.dependency/transitive-dependencies","^3","com/stuartsierra/dependency.cljs","^7",27,"^X",["^S",[["^U","^V"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",14,"^10","^11","^6",19,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^U","^V"]]]]],"^9","Returns the set of all things which node depends on, directly or\n    transitively."],"~$map->MapDependencyGraph",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^7",30,"^5",12,"^1P",true,"^27","~:map","^4",59,"^6",59,"^R",["^S",["^T",["^S",[["~$G__47460"]]]]],"^9","Factory function for com.stuartsierra.dependency/MapDependencyGraph, taking a map of keywords to field values."],"^A","~$com.stuartsierra.dependency/map->MapDependencyGraph","^3","com/stuartsierra/dependency.cljs","^7",30,"^X",["^S",[["^2B"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^1P",true,"^[",false,"^27","^2A","^4",59,"^10","^1N","^6",59,"^12",1,"^13",true,"^R",["^S",["^T",["^S",[["^2B"]]]]],"^9","Factory function for com.stuartsierra.dependency/MapDependencyGraph, taking a map of keywords to field values."],"~$DependencyGraph",["^ ","^2",["^ ","~:protocol-symbol",true,"^3","com/stuartsierra/dependency.cljs","^7",29,"^5",14,"^4",14,"~:protocol-info",["^ ","~:methods",["^ ","^N",[["^U","^V"]],"^1Z",[["^U","^V"]],"^2>",[["^U","^V"]],"~$transitive-dependents",[["^U","^V"]],"~$nodes",[["^U"]]]],"^6",14,"~:sigs",["^ ","~:immediate-dependencies",["^ ","^A","^N","^R",["^S",[["^U","^V"]]],"^9","Returns the set of immediate dependencies of node."],"~:immediate-dependents",["^ ","^A","^1Z","^R",["^S",[["^U","^V"]]],"^9","Returns the set of immediate dependents of node."],"~:transitive-dependencies",["^ ","^A","^2>","^R",["^S",[["^U","^V"]]],"^9","Returns the set of all things which node depends on, directly or\n    transitively."],"~:transitive-dependents",["^ ","^A","^2H","^R",["^S",[["^U","^V"]]],"^9","Returns the set of all things which depend upon node, directly or\n    transitively."],"~:nodes",["^ ","^A","^2I","^R",["^S",[["^U"]]],"^9","Returns the set of all nodes in graph."]],"~:jsdoc",["^S",["@interface"]]],"^2E",true,"^A","^Q","^3","com/stuartsierra/dependency.cljs","^7",29,"^5",1,"^4",14,"^2F",["^ ","^2G",["^ ","^N",[["^U","^V"]],"^1Z",[["^U","^V"]],"^2>",[["^U","^V"]],"^2H",[["^U","^V"]],"^2I",[["^U"]]]],"~:info",null,"^6",14,"^1R","^11","^2J",["^ ","^2K",["^ ","^A","^N","^R",["^S",[["^U","^V"]]],"^9","Returns the set of immediate dependencies of node."],"^2L",["^ ","^A","^1Z","^R",["^S",[["^U","^V"]]],"^9","Returns the set of immediate dependents of node."],"^2M",["^ ","^A","^2>","^R",["^S",[["^U","^V"]]],"^9","Returns the set of all things which node depends on, directly or\n    transitively."],"^2N",["^ ","^A","^2H","^R",["^S",[["^U","^V"]]],"^9","Returns the set of all things which depend upon node, directly or\n    transitively."],"^2O",["^ ","^A","^2I","^R",["^S",[["^U"]]],"^9","Returns the set of all nodes in graph."]],"~:impls",["^>",["^1N"]],"^2P",["^S",["@interface"]]],"~$topo-sort",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",114,"^5",7,"^6",114,"^7",16,"^R",["^S",["^T",["^S",[["^U"]]]]],"^9","Returns a topologically-sorted list of nodes in graph."],"^A","~$com.stuartsierra.dependency/topo-sort","^3","com/stuartsierra/dependency.cljs","^7",16,"^X",["^S",[["^U"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",114,"^10",["^>",["~$clj","~$cljs.core/IList"]],"^6",114,"^12",1,"^13",true,"^R",["^S",["^T",["^S",[["^U"]]]]],"^9","Returns a topologically-sorted list of nodes in graph."],"^2H",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",22,"^5",4,"^6",22,"^7",25,"^P","^Q","^9","Returns the set of all things which depend upon node, directly or\n    transitively.","^R",["^S",["^T",["^S",[["^U","^V"]]]]]],"^P","^Q","^A","~$com.stuartsierra.dependency/transitive-dependents","^3","com/stuartsierra/dependency.cljs","^7",25,"^X",["^S",[["^U","^V"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",14,"^10","^11","^6",22,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^U","^V"]]]]],"^9","Returns the set of all things which depend upon node, directly or\n    transitively."],"^2I",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",25,"^5",4,"^6",25,"^7",9,"^P","^Q","^9","Returns the set of all nodes in graph.","^R",["^S",["^T",["^S",[["^U"]]]]]],"^P","^Q","^A","~$com.stuartsierra.dependency/nodes","^3","com/stuartsierra/dependency.cljs","^7",9,"^X",["^S",[["^U"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",14,"^10","^11","^6",25,"^12",1,"^13",true,"^R",["^S",["^T",["^S",[["^U"]]]]],"^9","Returns the set of all nodes in graph."],"^U",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",95,"^5",7,"^6",95,"^7",12,"^R",["^S",["^T",["^S",[[]]]]],"^9","Returns a new, empty, dependency graph. A graph contains nodes,\n  which may be any type which supports Clojure's equality semantics.\n  Edges are represented as pairs of nodes. An edge between two nodes X\n  and Y indicates that X depends on Y or, conversely, that Y is a\n  dependent of X. A dependency graph may not have cycles."],"^A","~$com.stuartsierra.dependency/graph","^3","com/stuartsierra/dependency.cljs","^7",12,"^X",["^S",[[]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",95,"^10","^1N","^6",95,"^12",0,"^13",true,"^R",["^S",["^T",["^S",[[]]]]],"^9","Returns a new, empty, dependency graph. A graph contains nodes,\n  which may be any type which supports Clojure's equality semantics.\n  Edges are represented as pairs of nodes. An edge between two nodes X\n  and Y indicates that X depends on Y or, conversely, that Y is a\n  dependent of X. A dependency graph may not have cycles."],"~$DependencyGraphUpdate",["^ ","^2",["^ ","^2E",true,"^3","com/stuartsierra/dependency.cljs","^7",35,"^5",14,"^4",28,"^2F",["^ ","^2G",["^ ","^1X",[["^U","^V","^1:"]],"^18",[["^U","^V","^1:"]],"~$remove-all",[["^U","^V"]],"^24",[["^U","^V"]]]],"^6",28,"^2J",["^ ","~:depend",["^ ","^A","^1X","^R",["^S",[["^U","^V","^1:"]]],"^9","Returns a new graph with a dependency from node to dep (\"node depends\n    on dep\"). Forbids circular dependencies."],"~:remove-edge",["^ ","^A","^18","^R",["^S",[["^U","^V","^1:"]]],"^9","Returns a new graph with the dependency from node to dep removed."],"~:remove-all",["^ ","^A","^2[","^R",["^S",[["^U","^V"]]],"^9","Returns a new dependency graph with all references to node removed."],"~:remove-node",["^ ","^A","^24","^R",["^S",[["^U","^V"]]],"^9","Removes the node from the dependency graph without removing it as a\n    dependency of other nodes. That is, removes all outgoing edges from\n    node."]],"^2P",["^S",["@interface"]]],"^2E",true,"^A","^19","^3","com/stuartsierra/dependency.cljs","^7",35,"^5",1,"^4",28,"^2F",["^ ","^2G",["^ ","^1X",[["^U","^V","^1:"]],"^18",[["^U","^V","^1:"]],"^2[",[["^U","^V"]],"^24",[["^U","^V"]]]],"^2Q",null,"^6",28,"^1R","^11","^2J",["^ ","^30",["^ ","^A","^1X","^R",["^S",[["^U","^V","^1:"]]],"^9","Returns a new graph with a dependency from node to dep (\"node depends\n    on dep\"). Forbids circular dependencies."],"^31",["^ ","^A","^18","^R",["^S",[["^U","^V","^1:"]]],"^9","Returns a new graph with the dependency from node to dep removed."],"^32",["^ ","^A","^2[","^R",["^S",[["^U","^V"]]],"^9","Returns a new dependency graph with all references to node removed."],"^33",["^ ","^A","^24","^R",["^S",[["^U","^V"]]],"^9","Removes the node from the dependency graph without removing it as a\n    dependency of other nodes. That is, removes all outgoing edges from\n    node."]],"^2R",["^>",["^1N"]],"^2P",["^S",["@interface"]]],"^2[",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",34,"^5",4,"^6",34,"^7",14,"^P","^19","^9","Returns a new dependency graph with all references to node removed.","^R",["^S",["^T",["^S",[["^U","^V"]]]]]],"^P","^19","^A","~$com.stuartsierra.dependency/remove-all","^3","com/stuartsierra/dependency.cljs","^7",14,"^X",["^S",[["^U","^V"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",28,"^10","^11","^6",34,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^U","^V"]]]]],"^9","Returns a new dependency graph with all references to node removed."],"~$dependent?",["^ ","^O",null,"^2",["^ ","^3","com/stuartsierra/dependency.cljs","^4",109,"^5",7,"^6",109,"^7",17,"^R",["^S",["^T",["^S",[["^U","~$x","~$y"]]]]],"^9","True if y is a direct or transitive dependent of x."],"^A","~$com.stuartsierra.dependency/dependent?","^3","com/stuartsierra/dependency.cljs","^7",17,"^X",["^S",[["^U","~$x","~$y"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",109,"^10","^1W","^6",109,"^12",3,"^13",true,"^R",["^S",["^T",["^S",[["^U","~$x","~$y"]]]]],"^9","True if y is a direct or transitive dependent of x."]],"~:require-macros",["^ ","^G","^G"],"~:cljs.analyzer/constants",["^ ","^I",["^>",["^29","~:dependents","^2:","~:dependencies"]],"~:order",["^3:","^39","^29","^2:"]],"~:flags",["^ ","^J",["^>",[]]],"~:js-deps",["^ "],"~:deps",["^H","^G","^E"]]