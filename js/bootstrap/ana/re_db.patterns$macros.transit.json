["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_db/patterns$macros.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-db.patterns$macros","~:imports",null,"~:requires",["^ ","^<","^<","~$goog","^F"],"~:seen",["^A",[]],"~:uses",null,"~:defs",["^ ","~$capture-patterns",["^ ","~:protocol-inline",null,"^2",["^ ","^3","re_db/patterns$macros.cljc","^7",27,"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",0,"~:max-fixed-arity",0,"~:method-params",["~#list",[["^Q",["~$body"]]]],"~:arglists",["^Q",[["~$&","^R"]]],"~:arglists-meta",["^Q",[null]]],"^5",11,"^4",3,"~:macro",true,"^6",3,"^S",["^Q",["~$quote",["^Q",[["~$&","^R"]]]]],"~:doc","Evaluates body, returning map with evaluation result and read patterns."],"^B","~$re-db.patterns$macros/capture-patterns","^3","re_db/patterns$macros.cljc","^7",27,"^L",["^ ","^M",true,"^N",0,"^O",0,"^P",["^Q",[["^Q",["^R"]]]],"^S",["^Q",[["~$&","^R"]]],"^T",["^Q",[null]]],"^P",["^Q",[["^Q",["^R"]]]],"~:protocol-impl",null,"^N",0,"^T",["^Q",[null]],"^5",1,"^M",true,"~:methods",[["^ ","^N",0,"^M",true,"~:tag",["^A",["~$seq","~$cljs.core/IList"]]]],"^4",3,"^U",true,"~:ret-tag","~$any","^6",3,"^O",0,"~:fn-var",false,"^S",["^Q",[["~$&","^R"]]],"^W","Evaluates body, returning map with evaluation result and read patterns."]],"~:require-macros",["^ ","^<","^<"],"~:cljs.analyzer/constants",["^ ","^G",["^A",["~$cljs.core/binding","~$patterns__35467__auto__","~$re-db.core/db-log","~:patterns","~:value","~$do","~$re-db.core/notify-listeners","~$cljs.core/let","~$re-db.patterns/*pattern-log*","~$value__35465__auto__","~$tx-report__35466__auto__","~:tx-report"]],"~:order",["^17","^1?","^1>","^1@","^1;","^1A","^1B","^19","^1<","^18","^1=","^1:"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^F","^<"]]